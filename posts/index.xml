<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Vim Emacser Personal Blog</title><link>/posts/</link><description>Recent content in Posts on Vim Emacser Personal Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>@linuxing3</copyright><lastBuildDate>Mon, 20 Jun 2022 14:06:05 -0400</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>NeoVim is a modern life style</title><link>/posts/vim/neovim/</link><pubDate>Mon, 20 Jun 2022 14:06:05 -0400</pubDate><guid>/posts/vim/neovim/</guid><description>Neovim outstanding configuration file My neovim simple configuration pure lua super fast intuitive https://gitee.com/linuxing3/nvim
依赖 For newer version of neovim, use snap to install
sudo snap install neovim sudo apt install -y ripgrep fd-find 构建 alias nvim=/snap/bin/nvim nvim +PackerSync nvim +Compile pack ---@diagnostic disable:undefined-global local fn = vim.fn -- Automatically install packer local install_path = fn.stdpath &amp;#34;data&amp;#34; .. &amp;#34;/site/pack/packer/start/packer.nvim&amp;#34; if fn.empty(fn.glob(install_path)) &amp;gt; 0 then PACKER_BOOTSTRAP = fn.system { &amp;#34;git&amp;#34;, &amp;#34;clone&amp;#34;, &amp;#34;--depth&amp;#34;, &amp;#34;1&amp;#34;, &amp;#34;https://hub.</description><content>&lt;h1 id="neovim-outstanding-configuration-file">Neovim outstanding configuration file&lt;/h1>
&lt;h1 id="my-neovim-simple-configuration">My neovim simple configuration&lt;/h1>
&lt;ul>
&lt;li>pure lua&lt;/li>
&lt;li>super fast&lt;/li>
&lt;li>intuitive&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://gitee.com/linuxing3/nvim">https://gitee.com/linuxing3/nvim&lt;/a>&lt;/p>
&lt;h2 id="依赖">依赖&lt;/h2>
&lt;p>For newer version of neovim, use &lt;code>snap&lt;/code> to install&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo snap install neovim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install -y ripgrep fd-find
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="构建">构建&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>alias nvim&lt;span style="color:#f92672">=&lt;/span>/snap/bin/nvim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvim +PackerSync
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvim +Compile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pack">pack&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">---@diagnostic disable:undefined-global&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> fn &lt;span style="color:#f92672">=&lt;/span> vim.fn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Automatically install packer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> install_path &lt;span style="color:#f92672">=&lt;/span> fn.stdpath &lt;span style="color:#e6db74">&amp;#34;data&amp;#34;&lt;/span> &lt;span style="color:#f92672">..&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/site/pack/packer/start/packer.nvim&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> fn.empty(fn.glob(install_path)) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PACKER_BOOTSTRAP &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fn.system {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;git&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;clone&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;--depth&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;https://hub.fastgit.xyz/wbthomason/packer.nvim&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> install_path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Installing packer close and reopen Neovim...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vim.cmd &lt;span style="color:#e6db74">[[packadd packer.nvim]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Autocommand that reloads neovim whenever you save the pack.lua and plugins.lua file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> packer_user_config &lt;span style="color:#f92672">=&lt;/span> vim.api.nvim_create_augroup(&lt;span style="color:#e6db74">&amp;#34;packer_user_config&amp;#34;&lt;/span>, { clear &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim.api.nvim_create_autocmd({ &lt;span style="color:#e6db74">&amp;#34;BufWritePre&amp;#34;&lt;/span> }, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pattern &lt;span style="color:#f92672">=&lt;/span> { &lt;span style="color:#e6db74">&amp;#34;pack&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;plugins.lua&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> callback &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vim.cmd(&lt;span style="color:#e6db74">&amp;#34;source &amp;lt;afile&amp;gt;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- vim.cmd(&amp;#34;PackerSync&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vim.pretty_print(&lt;span style="color:#e6db74">&amp;#34;Reloading plugins successify...&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> group &lt;span style="color:#f92672">=&lt;/span> packer_user_config,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Use a protected call so we don&amp;#39;t error out on first use&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> status_ok, packer &lt;span style="color:#f92672">=&lt;/span> pcall(require, &lt;span style="color:#e6db74">&amp;#34;packer&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> status_ok &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Have packer use a popup window&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>packer.init {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> open_fn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;packer.util&amp;#34;&lt;/span>).float {border &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;rounded&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_url_format &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;https://hub.fastgit.xyz/%s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Install your plugins here&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> packer.startup(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span>(use)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- My plugins here&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> use &lt;span style="color:#e6db74">&amp;#34;wbthomason/packer.nvim&amp;#34;&lt;/span> &lt;span style="color:#75715e">-- Have packer manage itself&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> use &lt;span style="color:#e6db74">&amp;#34;nvim-lua/popup.nvim&amp;#34;&lt;/span> &lt;span style="color:#75715e">-- An implementation of the Popup API from vim in Neovim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> use &lt;span style="color:#e6db74">&amp;#34;nvim-lua/plenary.nvim&amp;#34;&lt;/span> &lt;span style="color:#75715e">-- Useful lua functions used ny lots of plugins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Fuzzy finder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> use &lt;span style="color:#e6db74">&amp;#34;junegunn/fzf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> use &lt;span style="color:#e6db74">&amp;#34;junegunn/fzf.vim&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- formatter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> use &lt;span style="color:#e6db74">&amp;#34;sbdchd/neoformat&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Automatically set up your configuration after cloning packer.nvim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Put this at the end after all plugins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> PACKER_BOOTSTRAP &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> require(&lt;span style="color:#e6db74">&amp;#34;packer&amp;#34;&lt;/span>).sync()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Loading custom plugins&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> require(&lt;span style="color:#e6db74">&amp;#34;custom.plugins&amp;#34;&lt;/span>).install(use)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="plugins">Plugins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">---@diagnostic disable:undefined-global&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> options &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;core.options&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> path &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;utils.api.path&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> M &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> plugins &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- --[[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- =====================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- ------------- basic -------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- =====================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;wbthomason/packer.nvim&amp;#34;] = {}, -- package manager&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;lewis6991/impatient.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {}, &lt;span style="color:#75715e">-- speed up startup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;tami5/sqlite.lua&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- persistent storage history yank records&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;impatient.nvim&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;nathom/filetype.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {}, &lt;span style="color:#75715e">-- speed up startup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;rcarriga/nvim-notify&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {}, &lt;span style="color:#75715e">-- fancy notification message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;akinsho/bufferline.nvim&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- -- buffer label&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- after = {&amp;#34;nvim-web-devicons&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- },&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;mbbill/undotree&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- undo tree&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;folke/which-key.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- keybinder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;kyazdani42/nvim-tree.lua&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ------------- Theme ---------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;askfiy/catppuccin&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;Mofiqul/vscode.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;projekt0n/github-nvim-theme&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;lunarvim/colorschemes&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;lunarvim/darkplus.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;folke/tokyonight.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;folke/lsp-colors.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;sainnhe/sonokai&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;NTBBloodbath/doom-one.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;glepnir/dashboard-nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ---------- Fuzzy Finder ---------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;vim-telescope/telescope-fzf-native.nvim&amp;#34;] = {run = &amp;#34;make&amp;#34;},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;nvim-telescope/telescope-project.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> require &lt;span style="color:#e6db74">&amp;#34;telescope&amp;#34;&lt;/span>.load_extension(&lt;span style="color:#e6db74">&amp;#34;project&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;nvim-telescope/telescope-file-browser.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> require &lt;span style="color:#e6db74">&amp;#34;telescope&amp;#34;&lt;/span>.load_extension(&lt;span style="color:#e6db74">&amp;#34;file_browser&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;liuchengxu/vim-clap&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;nvim-telescope/telescope-frecency.nvim&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- config = function()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- require &amp;#34;telescope&amp;#34;.load_extension(&amp;#34;frecency&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- end,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- requires = {&amp;#34;tami5/sqlite.lua&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- },&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;nvim-telescope/telescope.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ------------- Tools ---------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;davidgranstrom/nvim-markdown-preview&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- markdown preview tool&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ft &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;markdown&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;MarkdownPreview&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;askfiy/nvim-picgo&amp;#34;] = {},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;mg979/vim-visual-multi&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- multi-cursor mode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fn &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;vm##add_cursor_up&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;vm##add_cursor_down&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keys &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;&amp;lt;c-d&amp;gt;&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;jbyuki/venn.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;kristijanhusak/vim-carbon-now-sh&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- carbon-based code screenshot tool (requires internet connection)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;CarbonNowSh&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;akinsho/toggleterm.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ----- language server protocol ----
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;neovim/nvim-lspconfig&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Basic LSP configuration support&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;impatient.nvim&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;hrsh7th/cmp-nvim-lsp&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Enhance neovim completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-lspconfig&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- In order to keep the order of lazy loading, so this plugin is placed here&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- but it is not part of the LSP plugin scope&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;stevearc/aerial.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- outline notation preview&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-lspconfig&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;folke/lua-dev.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- sumneko_lua enhancement plugin for neovim-lua development&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-lspconfig&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;jose-elias-alvarez/null-ls.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Provides third-party diagnostics, debugging, formatting, etc. for the built-in LSP&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-lspconfig&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;williamboman/nvim-lsp-installer&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- automatically install LSP service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-lspconfig&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;cmp-nvim-lsp&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;aerial.nvim&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;lua-dev.nvim&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;null-ls.nvim&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;j-hui/fidget.nvim&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- -- prompt LSP initialization status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- after = {&amp;#34;nvim-lsp-installer&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- },&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;kosayoda/nvim-lightbulb&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- prompt a lightbulb when code behavior is available&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-lsp-installer&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --------- Code Completion ---------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;rafamadriz/friendly-snippets&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- provide rich snippet support&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;InsertEnter&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;CmdlineEnter&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;hrsh7th/vim-vsnip&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- provide snippet support for nvim-cmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;friendly-snippets&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;hrsh7th/nvim-cmp&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;hrsh7th/cmp-vsnip&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- vsnip support for cmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-cmp&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;hrsh7th/cmp-buffer&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- provide buffer completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-cmp&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;hrsh7th/cmp-path&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- provide path completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-cmp&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;hrsh7th/cmp-cmdline&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- provide command line completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-cmp&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> -- =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> -- ----- debug adapter protocol ------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> -- =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;mfussenegger/nvim-dap&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;theHamsta/nvim-dap-virtual-text&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- provide dummy text for debugging&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-dap&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;rcarriga/nvim-dap-ui&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- provide UI interface for debugging&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-dap&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ----------- Code Editor -----------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;klen/nvim-test&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;windwp/nvim-autopairs&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- autocomplete parentheses&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;InsertEnter&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;norcalli/nvim-colorizer.lua&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- -- view code color&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- event = {&amp;#34;BufReadPre&amp;#34;, &amp;#34;BufNewFile&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- },&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;RRethy/vim-illuminate&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- highlight the same word under the cursor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;lukas-reineke/indent-blankline.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- highlight indent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;nvim-treesitter/nvim-treesitter&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- syntax tree plugin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;BufRead&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;BufNewFile&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> run &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;:TSUpdate&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;lewis6991/spellsitter.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-treesitter&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;p00f/nvim-ts-rainbow&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- rainbow brackets&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-treesitter&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;windwp/nvim-ts-autotag&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- autocomplete tags&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-treesitter&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;JoosepAlviste/nvim-ts-context-commentstring&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Provides context-based commenting behavior for Comment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-treesitter&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;numToStr/Comment.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- provide code comment function&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keys &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;gb&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;gc&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;nvim-ts-context-commentstring&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;tpope/vim-repeat&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- repeat the modified surround operation of surround&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;repeat#set&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;ur4ltz/surround.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- modify surround&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;BufRead&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;BufNewFile&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;folke/todo-comments.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- highlight and find all TODO comments&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;BufRead&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;BufNewFile&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;AndrewRadev/switch.vim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- quickly switch the opposite of the word&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;Switch&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fn &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;switch#Switch&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;Vimjas/vim-python-pep8-indent&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Python indentation rules&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ft &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;py&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;InsertEnter&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;mattn/emmet-vim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- emmet abbreviation support&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ft &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;html&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;javascript&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;typescript&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;vue&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;xml&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;jsx&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- --[[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- =====================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- ------- Database connection -------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- =====================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;tpope/vim-dadbod&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- core tool for linking databases&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fn &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;db#resolve&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;kristijanhusak/vim-dadbod-ui&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- quick link database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;DBUIToggle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ---------- Other function ---------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> =====================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;NTBBloodbath/rest.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;nvim-pack/nvim-spectre&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;olimorris/persisted.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- session manager&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;impatient.nvim&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;yianwillis/vimcdoc&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- vim Chinese documentation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;CmdlineEnter&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> after &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;telescope.nvim&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;dstein64/vim-startuptime&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- query startup time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ptp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;StartupTime&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;ethanholz/nvim-lastplace&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;BufRead&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;uga-rosa/translate.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- an excellent translation plugin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;Translate&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;jghauser/mkdir.nvim&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> event &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;CmdlineEnter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#e6db74">&amp;#34;michaelb/sniprun&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> opt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> run &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bash ./install.sh&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;SnipRun&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;lt;,&amp;#39;&amp;gt;SnipRun&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;AckslD/nvim-neoclip.lua&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- -- can be used to quickly view historical yank records&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- after = {&amp;#34;sqlite.lua&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- },&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- [&amp;#34;dstein64/nvim-scrollview&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- -- draggable scrollbar&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- event = {&amp;#34;BufRead&amp;#34;, &amp;#34;BufNewFile&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- },&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- local plugins_extra = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- [&amp;#34;kristijanhusak/vim-dadbod-completion&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- -- complete completion for dadbod (it may affect performance)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- ptp = &amp;#34;viml&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- after = {&amp;#34;nvim-cmp&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- },&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- [&amp;#34;tzachar/cmp-tabnine&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- -- AI smart completion (it may affect performance)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- disable = false,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- run = &amp;#34;./install.sh&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- after = {&amp;#34;nvim-cmp&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- },&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- [&amp;#34;github/copilot.vim&amp;#34;] = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- -- AI smart completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- disable = false,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- ptp = &amp;#34;viml&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- event = {&amp;#34;InsertEnter&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">M&lt;/span>.&lt;span style="color:#a6e22e">install&lt;/span>(use)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> plug_name, plug_config &lt;span style="color:#66d9ef">in&lt;/span> pairs(plugins) &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> plug_options &lt;span style="color:#f92672">=&lt;/span> vim.tbl_deep_extend(&lt;span style="color:#e6db74">&amp;#34;force&amp;#34;&lt;/span>, {plug_name}, plug_config)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> plug_filename &lt;span style="color:#f92672">=&lt;/span> plug_options.as &lt;span style="color:#f92672">or&lt;/span> string.match(plug_name, &lt;span style="color:#e6db74">&amp;#34;/([%w%-_]+).?&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- The plugin configuration module that needs to be loaded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Path: ~/.config/nvim/lua/custom/configure/plugins/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> load_disk_path &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path.join(&lt;span style="color:#e6db74">&amp;#34;custom&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;configure&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;plugins&amp;#34;&lt;/span>, string.format(&lt;span style="color:#e6db74">&amp;#34;nv_%s&amp;#34;&lt;/span>, plug_filename:lower()))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Path of the plugin configuration module on disk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> file_disk_path &lt;span style="color:#f92672">=&lt;/span> path.join(vim.fn.stdpath(&lt;span style="color:#e6db74">&amp;#34;config&amp;#34;&lt;/span>), &lt;span style="color:#e6db74">&amp;#34;lua&amp;#34;&lt;/span>, string.format(&lt;span style="color:#e6db74">&amp;#34;%s.lua&amp;#34;&lt;/span>, load_disk_path))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- If the path exists, load the configuration, otherwise apply the plugin directly&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> path.is_exists(file_disk_path) &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> plug_config.ptp &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;viml&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plug_options.setup &lt;span style="color:#f92672">=&lt;/span> string.format(&lt;span style="color:#e6db74">&amp;#34;require(&amp;#39;%s&amp;#39;).entrance()&amp;#34;&lt;/span>, load_disk_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plug_options.setup &lt;span style="color:#f92672">=&lt;/span> string.format(&lt;span style="color:#e6db74">&amp;#34;require(&amp;#39;%s&amp;#39;).before()&amp;#34;&lt;/span>, load_disk_path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plug_options.config &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string.format(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">[[
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> require(&amp;#39;%s&amp;#39;).load()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> require(&amp;#39;%s&amp;#39;).after()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ]]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load_disk_path,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load_disk_path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> use(plug_options)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> Packer_bootstrap &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- Automatically download plugins when neovim is opened for the first time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> packer.sync()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> M
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>The &lt;code>install&lt;/code> function will do the trick, all configuration will be under &lt;code>~/.config/nvim/lua/custom/configure/plugins/&lt;/code> with name as &lt;code>nv_plugin_name.lua&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Each configuration file is a lua module which has &lt;code>before&lt;/code>, &lt;code>load&lt;/code> and &lt;code>after&lt;/code> method
&lt;code>before&lt;/code> for prepare
&lt;code>load&lt;/code> for setup, most of time you make &lt;code>plugin_name.setup{}&lt;/code> here
&lt;code>after&lt;/code> for post actions like key mapping&lt;/p>
&lt;/blockquote>
&lt;p>| i.e.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- https://github.com/numToStr/Comment.nvim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> M &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">M&lt;/span>.&lt;span style="color:#a6e22e">before&lt;/span>() &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">M&lt;/span>.&lt;span style="color:#a6e22e">load&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> ok, m &lt;span style="color:#f92672">=&lt;/span> pcall(require, &lt;span style="color:#e6db74">&amp;#34;Comment&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> ok &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M.comment &lt;span style="color:#f92672">=&lt;/span> m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M.comment_utils &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;Comment.utils&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M.comment.setup({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> toggler &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gcc&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> block &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gcb&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> opleader &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gc&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> block &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gb&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> extra &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> above &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gck&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> below &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gcj&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eol &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gca&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pre_hook &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(ctx)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> location &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ctx.ctype &lt;span style="color:#f92672">==&lt;/span> M.comment_utils.ctype.block &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;ts_context_commentstring.utils&amp;#34;&lt;/span>).get_cursor_location()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elseif&lt;/span> ctx.cmotion &lt;span style="color:#f92672">==&lt;/span> M.comment_utils.cmotion.v &lt;span style="color:#f92672">or&lt;/span> ctx.cmotion &lt;span style="color:#f92672">==&lt;/span> M.comment_utils.cmotion.V &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;ts_context_commentstring.utils&amp;#34;&lt;/span>).get_visual_start_location()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;ts_context_commentstring.internal&amp;#34;&lt;/span>).calculate_commentstring({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key &lt;span style="color:#f92672">=&lt;/span> ctx.ctype &lt;span style="color:#f92672">==&lt;/span> M.comment_utils.ctype.line &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#e6db74">&amp;#34;__default&amp;#34;&lt;/span> &lt;span style="color:#f92672">or&lt;/span> &lt;span style="color:#e6db74">&amp;#34;__multiline&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location &lt;span style="color:#f92672">=&lt;/span> location,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">M&lt;/span>.&lt;span style="color:#a6e22e">after&lt;/span>() &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> M
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="workflow">Workflow&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Add a new blog&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Editing&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Saving&lt;/p>
&lt;/li>
&lt;li>
&lt;p>toggle float terminal with &lt;code>&amp;lt;Space&amp;gt;tf&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press &lt;code>a&lt;/code> to add new file&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press &lt;code>c&lt;/code> to commit&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Press &lt;code>P&lt;/code> to push&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Wait for &lt;code>github workflow&lt;/code> to generate blog&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Visit blog at &lt;code>https://linuxing3.github.io&lt;/code> and &lt;code>http://localhost:1313&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="参与贡献">参与贡献&lt;/h2>
&lt;h2 id="翻译">翻译&lt;/h2>
&lt;h2 id="授权协议">授权协议&lt;/h2></content></item><item><title>Org-mode quickstart tutorial</title><link>/posts/emacs/quickstart-org-mode/</link><pubDate>Mon, 22 Nov 2021 00:00:00 -0400</pubDate><guid>/posts/emacs/quickstart-org-mode/</guid><description>en
fr
ja
Org Mode
Features
Releases
Updates
Install
Manual
Worg
Contribute
Getting started with Org-mode In its simplest form, Org is like any other markup language.
You can write Org syntax in any text editor.
However, to experience the full potential of Org you need an editor that transforms Org syntax into a living, interactive document.
Preamble At the start of a file (before the first heading), it is common to set the title, author and other export options.</description><content>&lt;p>&lt;a href="https://orgmode.org/index.html" title="English version">en&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/fr/index.html" title="Version française">fr&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/ja/index.html" title="Japanese version">ja&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/index.html">&lt;img src="https://orgmode.org/resources/img/org-mode-unicorn.svg" alt=""> Org Mode&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/features.html">Features&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/Changes.html">Releases&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://updates.orgmode.org/">Updates&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/org.html#Installation">Install&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/manual">Manual&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/worg">Worg&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://orgmode.org/worg/org-contribute.html">Contribute&lt;/a>&lt;/p>
&lt;h2 id="getting-started-with-org-mode">Getting started with Org-mode&lt;/h2>
&lt;p>In its simplest form, Org is like any other markup language.&lt;/p>
&lt;p>You can write &lt;a href="https://orgmode.org/worg/dev/org-syntax.html">Org syntax&lt;/a> in any text editor.&lt;/p>
&lt;p>However, to experience the full potential of Org you need an editor that transforms Org syntax into a living, interactive document.&lt;/p>
&lt;h2 id="preamble">Preamble&lt;/h2>
&lt;p>At the start of a file (before the first heading), it is common to set the title, author and other &lt;a href="https://orgmode.org/manual/Export-Settings.html">export options&lt;/a>.&lt;/p>
&lt;pre tabindex="0">&lt;code>#+title: The glories of Org
#+author: A. Org Writer
&lt;/code>&lt;/pre>&lt;h2 id="heading">Heading&lt;/h2>
&lt;p>Lines that start with an asterisk &lt;code>*&lt;/code> are &lt;a href="https://orgmode.org/worg/dev/org-syntax.html#Headlines_and_Sections">headings&lt;/a>.&lt;/p>
&lt;p>A single &lt;code>*&lt;/code> denotes a 1st-level heading, &lt;code>**&lt;/code> denotes a 2nd-level heading, etc.&lt;/p>
&lt;pre tabindex="0">&lt;code>\* Welcome to Org-mode
\*\* Sub-heading
Each extra ~\*~ increases the depth by one level.
&lt;/code>&lt;/pre>&lt;p>In their simplest form headings are just the start of a section. However, any heading can also become a &lt;a href="https://orgmode.org/manual/TODO-Items.html">TODO item&lt;/a>.&lt;/p>
&lt;p>TODO items are the basic building block that Org uses to track and organize all kinds of tasks.&lt;/p>
&lt;p>To add a TODO item to a heading, start the heading with a TODO keyword such as &lt;code>TODO&lt;/code> or &lt;code>HOLD&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code>\* TODO Promulgate Org to the world
\*\* TODO Create a quickstart guide
&lt;/code>&lt;/pre>&lt;h2 id="markup">Markup&lt;/h2>
&lt;p>To mark up text in Org, simply surround it with one or more marker characters. &lt;strong>Bold&lt;/strong>, &lt;em>italic&lt;/em> and underline are fairly intuitive, and the ability to use ~strikethrough~ is a plus. You can &lt;em>&lt;strong>combine&lt;/strong>&lt;/em> the basic markup in any order, however &lt;code>code&lt;/code> and &lt;code>verbatim&lt;/code> need to be the &lt;strong>&lt;code>inner-most&lt;/code>&lt;/strong> markers if they are present since their contents are interpreted &lt;code>_literally_&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code>To markup text in Org, simply surround it with one or more marker characters.
\*Bold\*, /italic/ and \_underline\_ are fairly intuitive, and the ability to use
+strikethrough+ is a plus. You can \_/\*combine\*/\_ the basic markup in any
order, however ~code~ and =verbatim= need to be the \*\_~inner-most~\_\* markers
if they are present since their contents are interpreted =\_literally\_=.
&lt;/code>&lt;/pre>&lt;p>See &lt;a href="https://orgmode.org/worg/dev/org-syntax.html#Emphasis_Markers">Emphasis Markers&lt;/a> for more details.&lt;/p>
&lt;h2 id="lists">Lists&lt;/h2>
&lt;p>Unordered lists start with &lt;code>+&lt;/code>, &lt;code>-&lt;/code>, or &lt;code>*&lt;/code>&lt;a href="#fn.1">1&lt;/a>. Ordered lists start with &lt;code>1.&lt;/code>, &lt;code>1)&lt;/code>, &lt;code>A.&lt;/code>, or &lt;code>A)&lt;/code>. Ordered and unordered bullets can be nested in any order.&lt;/p>
&lt;pre tabindex="0">&lt;code>To buy:
1. Milk
2. Eggs
- Organic
3. Cheese
+ Parmesan
+ Mozzarella
&lt;/code>&lt;/pre>&lt;p>Lists can contain checkboxes &lt;code>[ ]&lt;/code>, &lt;code>[-]&lt;/code>, &lt;code>[X]&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code>\- \[ \] not started
- \[-\] in progress
- \[X\] complete
&lt;/code>&lt;/pre>&lt;p>Lists can contain tags (and checkboxes at the same time).&lt;/p>
&lt;pre tabindex="0">&lt;code>\- \[ \] fruits :: get apples
- \[X\] veggies :: get carrots
&lt;/code>&lt;/pre>&lt;h2 id="links">Links&lt;/h2>
&lt;p>To create a link put the target between two square brackets, like so: &lt;code>[[target]]&lt;/code>. You can include a description in square brackets after the target &lt;code>[[target][desc]]&lt;/code>.&lt;/p>
&lt;p>The order is easy to remember because it is the same as an html &lt;code>&amp;lt;a&amp;gt;&lt;/code> tag &lt;code>&amp;lt;a href=&amp;quot;target&amp;quot;&amp;gt;desc&amp;lt;/a&amp;gt;&lt;/code> and you can&amp;rsquo;t mix up brackets and parentheses because there are only square brackets!&lt;/p>
&lt;p>Org supports a wide variety of types of link targets, and you can also &lt;a href="https://orgmode.org/manual/Adding-Hyperlink-Types.html">add your own&lt;/a>. Link types are indicated with a &lt;code>type:&lt;/code> prefix, i.e., &lt;code>[type:target]&lt;/code>. If no &lt;code>type:&lt;/code> is provided, org searches the current file for a heading that matches &lt;code>target&lt;/code>.&lt;/p>
&lt;p>Some examples:&lt;/p>
&lt;pre tabindex="0">&lt;code>\[\[https://orgmode.org\]\[a nice website\]\]
\[\[file:~/Pictures/dank-meme.png\]\]
\[\[earlier heading\]\[an earlier heading in the document\]\]
&lt;/code>&lt;/pre>&lt;h2 id="images">Images&lt;/h2>
&lt;p>Org mode automatically recognizes and renders image links during export. Just link to an image (don&amp;rsquo;t include a description). That&amp;rsquo;s it.&lt;br>
&lt;code>[[https://upload.wikimedia.org/wikipedia/commons/5/5d/Konigsberg_bridges.png]]&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/5/5d/Konigsberg_bridges.png" alt="">&lt;/p>
&lt;p>Images located on your computer can also be rendered in the Emacs buffer with &lt;code>C-c C-x C-v&lt;/code>.&lt;/p>
&lt;h2 id="blocks">Blocks&lt;/h2>
&lt;p>Org mode uses &lt;code>#+BEGIN&lt;/code> … &lt;code>#+END&lt;/code> blocks for many purposes. Some of the basic blocks types quote, example, and src.&lt;/p>
&lt;p>If you all you need is monospace text, you can use an example block.&lt;/p>
&lt;pre tabindex="0">&lt;code>#+begin\_example
monospace
#+end\_example
&lt;/code>&lt;/pre>&lt;p>However, example blocks do not give you the power of &lt;a href="https://orgmode.org/worg/org-contrib/babel/">Org babel&lt;/a>. For that you need a source block. Source blocks provide syntax highlighting, code execution, literate programming, and more.&lt;/p>
&lt;pre tabindex="0">&lt;code>#+begin\_src emacs-lisp
(message &amp;#34;Hello world&amp;#34;)
#+end\_src
&lt;/code>&lt;/pre>&lt;h1 id="more-info">More info&lt;/h1>
&lt;p>A hello world example cannot even begin to scratch the surface Org mode&amp;rsquo;s support for &lt;a href="https://orgmode.org/manual/Working-with-Source-Code.html">working with source code&lt;/a>.&lt;/p>
&lt;h2 id="tables">Tables&lt;/h2>
&lt;p>Org mode comes with a table editor complete with support cell references and formulas.&lt;/p>
&lt;p>In its simplest form a table is text separated using pipes &lt;code>|&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code>| I | am | a | table |
| with | two | rows | ! |
&lt;/code>&lt;/pre>&lt;p>A more useful example is this comparison of existing Literate programming / reproducible research tools (from &lt;a href="https://doi.org/10.18637/jss.v046.i03">Schulte &lt;em>et al.&lt;/em> 2012&lt;/a>).&lt;/p>
&lt;pre tabindex="0">&lt;code>| Tool | Literate programming? | Reproducible Research? | Languages |
|--------------+-----------------------+------------------------+-----------|
| Javadoc | partial | no | Java |
| Haskell .lhs | partial | no | Haskell |
| noweb | yes | no | any |
| Sweave | partial | yes | R |
| Org-mode | yes | yes | any |
&lt;/code>&lt;/pre>&lt;p>Worried about aligning free text tables? Org mode does it in a single keystroke – &lt;code>tab&lt;/code>.&lt;/p>
&lt;h2 id="macros">Macros&lt;/h2>
&lt;p>Org has many more advanced features built into its syntax. To give only a single example, let&amp;rsquo;s take a look at &lt;a href="https://orgmode.org/manual/Macro-Replacement.html">macros&lt;/a>.&lt;/p>
&lt;pre tabindex="0">&lt;code>#+macro: attn \_\*/$1/\*\_
{{{attn(Attention! This text gets all the markup!)}}}
#+html\_head: &amp;lt;style&amp;gt;.red{color:red;}&amp;lt;/style&amp;gt;
#+latex\_header: \\usepackage{xcolor}
#+macro: red @@html:&amp;lt;span class=&amp;#34;red&amp;#34;&amp;gt;$1&amp;lt;/span&amp;gt;@@@@latex:\\textcolor{red}{$1}@@
Regular text. {{{red(This text will be red.)}}} More regular text.
&lt;/code>&lt;/pre>&lt;h2 id="next-steps">Next steps&lt;/h2>
&lt;p>Looking for something in particular? The &lt;a href="https://orgmode.org/manual/">manual&lt;/a> (&lt;a href="https://orgmode.org/org.pdf">PDF&lt;/a>) is a good place to start.&lt;/p>
&lt;p>Looking for something between this quickstart and the manual? The &lt;a href="https://orgmode.org/guide/">guide&lt;/a> (&lt;a href="https://orgmode.org/orgguide.pdf">PDF&lt;/a>) is worth a shot.&lt;/p>
&lt;p>licensed under the &lt;a href="https://git.sr.ht/~bzg/orgweb/blob/master/LICENSE.org" title="GNU Free Documentation License version 1.3">GNU FDL 1.3&lt;/a>&lt;/p></content></item><item><title>Improving your life</title><link>/posts/2021-11-16/</link><pubDate>Tue, 16 Nov 2021 00:00:00 -0400</pubDate><guid>/posts/2021-11-16/</guid><description>[完成] 添加 i3status-rs [完成] 添加 qutebrowser 为默认浏览器，拷贝为 chromiom [完成] 迁移 EnvSetup 到 dotfiles [完成] 整合 zsh 和 bash [完成] 添加了新的背景 background [完成] 清除硬盘冗余文件，将部分程序数据从 root 移除，链接到 sdb8 [等待] 地方选举观察团情况 添加了 emcas.slim 简版配置</description><content>&lt;h2 id="添加-i3status-rs">&lt;!-- raw HTML omitted -->[完成]&lt;!-- raw HTML omitted --> 添加 &lt;code>i3status-rs&lt;/code>&lt;/h2>
&lt;h2 id="添加-qutebrowser-为默认浏览器-拷贝为-chromiom">&lt;!-- raw HTML omitted -->[完成]&lt;!-- raw HTML omitted --> 添加 &lt;code>qutebrowser&lt;/code> 为默认浏览器，拷贝为 &lt;code>chromiom&lt;/code>&lt;/h2>
&lt;h2 id="迁移-envsetup-到-dotfiles">&lt;!-- raw HTML omitted -->[完成]&lt;!-- raw HTML omitted --> 迁移 &lt;code>EnvSetup&lt;/code> 到 &lt;code>dotfiles&lt;/code>&lt;/h2>
&lt;h2 id="整合-zsh-和-bash">&lt;!-- raw HTML omitted -->[完成]&lt;!-- raw HTML omitted --> 整合 &lt;code>zsh&lt;/code> 和 &lt;code>bash&lt;/code>&lt;/h2>
&lt;h2 id="添加了新的背景-background">&lt;!-- raw HTML omitted -->[完成]&lt;!-- raw HTML omitted --> 添加了新的背景 &lt;code>background&lt;/code>&lt;/h2>
&lt;h2 id="清除硬盘冗余文件-将部分程序数据从-root-移除-链接到-sdb8">&lt;!-- raw HTML omitted -->[完成]&lt;!-- raw HTML omitted --> 清除硬盘冗余文件，将部分程序数据从 &lt;code>root&lt;/code> 移除，链接到 &lt;code>sdb8&lt;/code>&lt;/h2>
&lt;h2 id="地方选举观察团情况">&lt;!-- raw HTML omitted -->[等待]&lt;!-- raw HTML omitted --> 地方选举观察团情况&lt;/h2>
&lt;h2 id="添加了-emcas-dot-slim-简版配置">添加了 &lt;code>emcas.slim&lt;/code> 简版配置&lt;/h2></content></item><item><title>习近平关于《中共中央关于党的百年奋斗重大成就和历史经验的决议》的说明</title><link>/posts/misc/%E4%B9%A0%E8%BF%91%E5%B9%B3%E5%85%B3%E4%BA%8E%E5%86%B3%E8%AE%AE%E7%9A%84%E8%AF%B4%E6%98%8E/</link><pubDate>Tue, 16 Nov 2021 00:00:00 -0400</pubDate><guid>/posts/misc/%E4%B9%A0%E8%BF%91%E5%B9%B3%E5%85%B3%E4%BA%8E%E5%86%B3%E8%AE%AE%E7%9A%84%E8%AF%B4%E6%98%8E/</guid><description>决议稿的基本框架和主要内容 第一部分“夺取新民主主义革命伟大胜利”。 阐明这一时期党面临的主要任务是反对帝国主义、封建主义、官僚资本主义，争 取民族独立、人民解放，为实现中华民族伟大复兴创造根本社会条件。分析党产 生的历史背景，总结党领导人民在建党之初和大革命时期、土地革命战争时期、 抗日战争时期、解放战争时期进行革命斗争的历史进程和创造的伟大成就，以及 创立毛泽东思想、实施和推进党的建设伟大工程的重大成就。
强调成立中华人民共和国，实现民族独立、人民解放，实现了中国从几千年封建 专制政治向人民民主的伟大飞跃；中国共产党和中国人民以英勇顽强的奋斗向世 界庄严宣告，中国人民从此站起来了，中华民族任人宰割、饱受欺凌的时代一去 不复返了，中国发展从此开启了新纪元。
第二部分“完成社会主义革命和推进社会主义建设”。 阐明这一时期党面临的主要任务是，实现从新民主主义到社会主义的转变，进行 社会主义革命，推进社会主义建设，为实现中华民族伟大复兴奠定根本政治前提 和制度基础。总结新中国成立后党领导人民战胜一系列严峻挑战、巩固新生政权， 成功完成社会主义改造、建立社会主义制度，开展全面的大规模的社会主义建设， 打开对外工作新局面的历史进程和创造的伟大成就。
总结党加强执政党建设所作的努力和积累的初步经验，在阐述这一时期党取得的 独创性理论成果的基础上，对毛泽东思想进行科学评价。
强调这一时期党领导人民创造的伟大成就，实现了一穷二白、人口众多的东方大 国大步迈进社会主义社会的伟大飞跃；中国共产党和中国人民以英勇顽强的奋斗 向世界庄严宣告，中国人民不但善于破坏一个旧世界、也善于建设一个新世界， 只有社会主义才能救中国，只有社会主义才能发展中国。
第三部分“进行改革开放和社会主义现代化建设”。 阐明这一时期党面临的主要任务是，继续探索中国建设社会主义的正确道路，解 放和发展社会生产力，使人民摆脱贫困、尽快富裕起来，为实现中华民族伟大复 兴提供充满新的活力的体制保证和快速发展的物质条件。
强调党的十一届三中全会的历史意义，总结以邓小平同志为主要代表的中国共产 党人、以江泽民同志为主要代表的中国共产党人、以胡锦涛同志为主要代表的中 国共产党人作出的历史贡献，从党领导全面开展拨乱反正、形成中国特色社会主 义理论体系、推进改革开放和社会主义现代化建设、从容应对关系我国改革发展 稳定全局的一系列风险考验、推进祖国统一大业、维护世界和平与促进共同发展、 开创和推进党的建设新的伟大工程等方面，展现新时期波澜壮阔的历史画卷和举 世瞩目的伟大成就。
强调这一时期党领导人民创造的伟大成就，推进了中华民族从站起来到富起来的 伟大飞跃；中国共产党和中国人民以英勇顽强的奋斗向世界庄严宣告，改革开放 是决定当代中国前途命运的关键一招，中国特色社会主义道路是指引中国发展繁 荣的正确道路，中国大踏步赶上了时代。
第四部分“开创中国特色社会主义新时代”。 阐明这一时期党面临的主要任务是，实现全面建成小康社会的第一个百年奋斗目 标，开启全面建成社会主义现代化强国的第二个百年奋斗目标新征程，朝着实现 中华民族伟大复兴的宏伟目标继续前进。
阐述中国特色社会主义新时代这一我国发展新的历史方位，概括党的十八大以来 党的理论创新成果，深入分析新时代党面临的形势、面对的风险挑战，从13个方 面，分领域总结新时代党和国家事业取得的历史性成就、发生的历史性变革，重 点总结九年来的原创性思想、变革性实践、突破性进展、标志性成果。
党的全面领导 全面从严治党 经济建设 全面深化改革开放 政治建设 全面依法治国 文化建设 社会建设 生态文明建设 国防和军队建设 维护国家安全 “一国两制” 推进祖国统一 外交工作
强调这一时期党领导人民创造的伟大成就，为实现中华民族伟大复兴提供了更为 完善的制度保证、更为坚实的物质基础、更为主动的精神力量；中国共产党和中 国人民以英勇顽强的奋斗向世界庄严宣告，中华民族迎来了从站起来、富起来到 强起来的伟大飞跃。
第五部分“中国共产党百年奋斗的历史意义”。 在全面回顾总结党的百年奋斗历程和重大成就基础上，以更宏阔的视角，总结党 的百年奋斗的历史意义，即党的百年奋斗从根本上改变了中国人民的前途命运、 开辟了实现中华民族伟大复兴的正确道路、展示了马克思主义的强大生命力、深 刻影响了世界历史进程、锻造了走在时代前列的中国共产党，阐述党对中国人民、 对中华民族、对马克思主义、对人类进步事业、对马克思主义政党建设所作的历 史性贡献。</description><content>&lt;h2 id="决议稿的基本框架和主要内容">决议稿的基本框架和主要内容&lt;/h2>
&lt;h3 id="第一部分-夺取新民主主义革命伟大胜利">第一部分“夺取新民主主义革命伟大胜利”。&lt;/h3>
&lt;p>阐明这一时期党面临的主要任务是反对帝国主义、封建主义、官僚资本主义，争
取民族独立、人民解放，为实现中华民族伟大复兴创造根本社会条件。分析党产
生的历史背景，总结党领导人民在建党之初和大革命时期、土地革命战争时期、
抗日战争时期、解放战争时期进行革命斗争的历史进程和创造的伟大成就，以及
创立毛泽东思想、实施和推进党的建设伟大工程的重大成就。&lt;/p>
&lt;p>强调成立中华人民共和国，实现民族独立、人民解放，实现了中国从几千年封建
专制政治向人民民主的伟大飞跃；中国共产党和中国人民以英勇顽强的奋斗向世
界庄严宣告，中国人民从此站起来了，中华民族任人宰割、饱受欺凌的时代一去
不复返了，中国发展从此开启了新纪元。&lt;/p>
&lt;h3 id="第二部分-完成社会主义革命和推进社会主义建设">第二部分“完成社会主义革命和推进社会主义建设”。&lt;/h3>
&lt;p>阐明这一时期党面临的主要任务是，实现从新民主主义到社会主义的转变，进行
社会主义革命，推进社会主义建设，为实现中华民族伟大复兴奠定根本政治前提
和制度基础。总结新中国成立后党领导人民战胜一系列严峻挑战、巩固新生政权，
成功完成社会主义改造、建立社会主义制度，开展全面的大规模的社会主义建设，
打开对外工作新局面的历史进程和创造的伟大成就。&lt;/p>
&lt;p>总结党加强执政党建设所作的努力和积累的初步经验，在阐述这一时期党取得的
独创性理论成果的基础上，对毛泽东思想进行科学评价。&lt;/p>
&lt;p>强调这一时期党领导人民创造的伟大成就，实现了一穷二白、人口众多的东方大
国大步迈进社会主义社会的伟大飞跃；中国共产党和中国人民以英勇顽强的奋斗
向世界庄严宣告，中国人民不但善于破坏一个旧世界、也善于建设一个新世界，
只有社会主义才能救中国，只有社会主义才能发展中国。&lt;/p>
&lt;h3 id="第三部分-进行改革开放和社会主义现代化建设">第三部分“进行改革开放和社会主义现代化建设”。&lt;/h3>
&lt;p>阐明这一时期党面临的主要任务是，继续探索中国建设社会主义的正确道路，解
放和发展社会生产力，使人民摆脱贫困、尽快富裕起来，为实现中华民族伟大复
兴提供充满新的活力的体制保证和快速发展的物质条件。&lt;/p>
&lt;p>强调党的十一届三中全会的历史意义，总结以邓小平同志为主要代表的中国共产
党人、以江泽民同志为主要代表的中国共产党人、以胡锦涛同志为主要代表的中
国共产党人作出的历史贡献，从党领导全面开展拨乱反正、形成中国特色社会主
义理论体系、推进改革开放和社会主义现代化建设、从容应对关系我国改革发展
稳定全局的一系列风险考验、推进祖国统一大业、维护世界和平与促进共同发展、
开创和推进党的建设新的伟大工程等方面，展现新时期波澜壮阔的历史画卷和举
世瞩目的伟大成就。&lt;/p>
&lt;p>强调这一时期党领导人民创造的伟大成就，推进了中华民族从站起来到富起来的
伟大飞跃；中国共产党和中国人民以英勇顽强的奋斗向世界庄严宣告，改革开放
是决定当代中国前途命运的关键一招，中国特色社会主义道路是指引中国发展繁
荣的正确道路，中国大踏步赶上了时代。&lt;/p>
&lt;h3 id="第四部分-开创中国特色社会主义新时代">第四部分“开创中国特色社会主义新时代”。&lt;/h3>
&lt;p>阐明这一时期党面临的主要任务是，实现全面建成小康社会的第一个百年奋斗目
标，开启全面建成社会主义现代化强国的第二个百年奋斗目标新征程，朝着实现
中华民族伟大复兴的宏伟目标继续前进。&lt;/p>
&lt;p>阐述中国特色社会主义新时代这一我国发展新的历史方位，概括党的十八大以来
党的理论创新成果，深入分析新时代党面临的形势、面对的风险挑战，从13个方
面，分领域总结新时代党和国家事业取得的历史性成就、发生的历史性变革，重
点总结九年来的原创性思想、变革性实践、突破性进展、标志性成果。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>党的全面领导&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>全面从严治党&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>经济建设&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>全面深化改革开放&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>政治建设&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>全面依法治国&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>文化建设&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>社会建设&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>生态文明建设&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>国防和军队建设&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>维护国家安全&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>“一国两制”&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>推进祖国统一&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>外交工作&lt;/p>
&lt;p>强调这一时期党领导人民创造的伟大成就，为实现中华民族伟大复兴提供了更为
完善的制度保证、更为坚实的物质基础、更为主动的精神力量；中国共产党和中
国人民以英勇顽强的奋斗向世界庄严宣告，中华民族迎来了从站起来、富起来到
强起来的伟大飞跃。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="第五部分-中国共产党百年奋斗的历史意义">第五部分“中国共产党百年奋斗的历史意义”。&lt;/h3>
&lt;p>在全面回顾总结党的百年奋斗历程和重大成就基础上，以更宏阔的视角，总结党
的百年奋斗的历史意义，即党的百年奋斗从根本上改变了中国人民的前途命运、
开辟了实现中华民族伟大复兴的正确道路、展示了马克思主义的强大生命力、深
刻影响了世界历史进程、锻造了走在时代前列的中国共产党，阐述党对中国人民、
对中华民族、对马克思主义、对人类进步事业、对马克思主义政党建设所作的历
史性贡献。&lt;/p>
&lt;p>这五条概括，既立足中华大地，又放眼人类未来，体现了中国共产党和中国人民、
中华民族的关系，体现了中国共产党和马克思主义、世界社会主义、人类社会发
展的关系，贯通了中国共产党百年奋斗的历史逻辑、理论逻辑、实践逻辑。&lt;/p>
&lt;h3 id="第六部分-中国共产党百年奋斗的历史经验">第六部分“中国共产党百年奋斗的历史经验”。&lt;/h3>
&lt;h4 id="概括了具有根本性和长远指导意义的十条历史经验-即">概括了具有根本性和长远指导意义的十条历史经验，即&lt;/h4>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持党的领导&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持人民至上&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持理论创新&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持独立自主&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持中国道路&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持胸怀天下&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持开拓创新&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持敢于斗争&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>坚持统一战线&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>坚持自我革命。&lt;/p>
&lt;p>这十条历史经验是系统完整、相互贯通的有机整体，揭示了党和人民事业不断成
功的根本保证，揭示了党始终立于不败之地的力量源泉，揭示了党始终掌握历史
主动的根本原因，揭示了党永葆先进性和纯洁性、始终走在时代前列的根本途径。&lt;/p>
&lt;p>强调这十条历史经验是经过长期实践积累的宝贵经验，是党和人民共同创造的精
神财富，必须倍加珍惜、长期坚持，并在新时代实践中不断丰富和发展。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="第七部分-新时代的中国共产党">第七部分“新时代的中国共产党”。&lt;/h3>
&lt;p>围绕实现第二个百年奋斗目标，强调全党要以咬定青山不放松的执着奋力实现既
定目标，以行百里者半九十的清醒不懈推进中华民族伟大复兴；&lt;/p>
&lt;p>强调必须坚持党的基本理论、基本路线、基本方略，立足新发展阶段、贯彻新发
展理念、构建新发展格局、推动高质量发展，协同推进人民富裕、国家强盛、中
国美丽；强调必须永远保持同人民群众的血肉联系，不断实现好、维护好、发展
好最广大人民根本利益；&lt;/p>
&lt;p>强调必须铭记生于忧患、死于安乐，常怀远虑、居安思危，继续推进新时代党的
建设新的伟大工程；&lt;/p>
&lt;p>强调必须抓好后继有人这个根本大计。号召全党全军全国各族人民勿忘昨天的苦
难辉煌，无愧今天的使命担当，不负明天的伟大梦想，以史为鉴、开创未来，埋
头苦干、勇毅前行，为实现第二个百年奋斗目标、实现中华民族伟大复兴的中国
梦而不懈奋斗。&lt;/p>
&lt;h2 id="两个确立-是十八大以来最重要的政治成果">“两个确立”是十八大以来最重要的政治成果。&lt;/h2>
&lt;h3 id="确立习近平同志党中央的核心-全党的核心地位">确立习近平同志党中央的核心、全党的核心地位，&lt;/h3>
&lt;h3 id="确立习近平新时代中国特色社会主义思想的指导地位">确立习近平新时代中国特色社会主义思想的指导地位&lt;/h3>
&lt;p>反映了全党全军全国各族人民共同心愿，对新时代党 和国家事业发展、对推进
中华民族伟大复兴历史进程具有决定性意义。&lt;/p>
&lt;h2 id="学习体会">学习体会&lt;/h2>
&lt;h3 id="总结讲话">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 总结讲话&lt;/h3>
&lt;p>强调要把学习贯彻党的十九届六中全会精神作为重大政治任务，在学思践悟中不
断激发信仰、启迪智慧、汲取力量，更加紧密地团结在以习近平同志为核心的党
中央周围，牢记初心使命、担当时代责任，为党和人民争取更大光荣。&lt;/p>
&lt;p>全会审议通过的《中共中央关于党的百年奋斗重大成就和历史经验的决议》，是
一篇极具历史穿透力、思想引领力、政治动员力、时代感召力的马克思主义纲领
性文献，对于推动全党坚定历史自信、把握历史规律、强化历史自觉，以统一的
思想、意志和行动推进新时代中国特色社会主义伟大事业，具有重大现实意义和
深远历史意义。&lt;/p>
&lt;p>要深刻认识党的百年奋斗的光辉历程、辉煌成就、历史意义、历史经验，把握以
史为鉴、开创未来的重要要求，把学习成效转化为改造主观世界和客观世界的实
际行动，始终坚持党的领导、坚决做到“两个维护”，始终高举思想旗帜、笃信笃
行科学理论，始终坚定理想信念、发扬斗争精神，以更加昂扬的姿态迈进新征程、
建功新时代。&lt;/p>
&lt;h3 id="思维流程图">思维流程图&lt;/h3>
&lt;h4 id="十九大报告13个坚持">十九大报告13个坚持&lt;/h4>
&lt;figure class="left" >
&lt;img src="/ox-hugo/13-persistence.png" />
&lt;/figure>
&lt;h4 id="七一讲话9个坚持">七一讲话9个坚持&lt;/h4>
&lt;figure class="left" >
&lt;img src="/ox-hugo/9-persistence.png" />
&lt;/figure>
&lt;h4 id="六中全会10个坚持">六中全会10个坚持&lt;/h4>
&lt;figure class="left" >
&lt;img src="/ox-hugo/10-persistence.png" />
&lt;/figure></content></item><item><title>New System and new workflow</title><link>/posts/2021-11-15/</link><pubDate>Mon, 15 Nov 2021 00:00:00 -0500</pubDate><guid>/posts/2021-11-15/</guid><description>Installed new debian bullseye in SSD Seperate dotfiles from Envsetup Change some install scripts in EnvSetup Luanch qutebrowser and chromium as root Do bookmark stuff Strange enough, C-c n c to capture today&amp;rsquo;s blog</description><content>&lt;h2 id="installed-new-debian-bullseye-in-ssd">Installed new debian &lt;code>bullseye&lt;/code> in SSD&lt;/h2>
&lt;h2 id="seperate-dotfiles-from-envsetup">Seperate &lt;code>dotfiles&lt;/code> from &lt;code>Envsetup&lt;/code>&lt;/h2>
&lt;h2 id="change-some-install-scripts-in-envsetup">Change some install scripts in &lt;code>EnvSetup&lt;/code>&lt;/h2>
&lt;h2 id="luanch-qutebrowser-and-chromium-as-root">Luanch &lt;code>qutebrowser&lt;/code> and &lt;code>chromium&lt;/code> as root&lt;/h2>
&lt;h2 id="do-bookmark-stuff">Do &lt;code>bookmark&lt;/code> stuff&lt;/h2>
&lt;h2 id="strange-enough-c-c-n-c-to-capture-today-s-blog">Strange enough, &lt;code>C-c n c&lt;/code> to capture today&amp;rsquo;s blog&lt;/h2></content></item><item><title>Fun about emacs and linux</title><link>/posts/2021-11-14/</link><pubDate>Sun, 14 Nov 2021 00:00:00 -0400</pubDate><guid>/posts/2021-11-14/</guid><description>Some helpers to avoid repeating time (defun +git-push(dir) &amp;#34;Run git push in a specific directory&amp;#34; (interactive) (with-dir dir (shell-command &amp;#34;git add .&amp;#34;) (--&amp;gt; (format-time-string &amp;#34;%Y-%m-%d %H:%M&amp;#34; (current-time)) (concat &amp;#34;git commit -m \&amp;#34;&amp;#34; it &amp;#34;\&amp;#34;&amp;#34;) (shell-command it)) (shell-command &amp;#34;git push&amp;#34;))) ;;; git sync ;;;###autoload (defun +git-pull(dir) &amp;#34;Run git push in a specific directory&amp;#34; (interactive) (with-dir dir (shell-command &amp;#34;git pull&amp;#34;))) (+general-global-menu! &amp;#34;file&amp;#34; &amp;#34;f&amp;#34; &amp;#34;f&amp;#34; &amp;#39;(:ignore t :which-key &amp;#34;find file&amp;#34;) &amp;#34;S&amp;#34; &amp;#39;((lambda () (interactive) (progn (+git-push &amp;#34;~/EnvSetup&amp;#34;) (+git-push &amp;#34;~/.</description><content>&lt;h2 id="some-helpers-to-avoid-repeating-time">Some helpers to avoid repeating time&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +git-push(dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Run git push in a specific directory&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (with-dir dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;git add .&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (--&amp;gt; (&lt;span style="color:#a6e22e">format-time-string&lt;/span> &lt;span style="color:#e6db74">&amp;#34;%Y-%m-%d %H:%M&amp;#34;&lt;/span> (&lt;span style="color:#a6e22e">current-time&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">concat&lt;/span> &lt;span style="color:#e6db74">&amp;#34;git commit -m \&amp;#34;&amp;#34;&lt;/span> it &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command it))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;git push&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; git sync&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +git-pull(dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Run git push in a specific directory&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (with-dir dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;git pull&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(+general-global-menu! &lt;span style="color:#e6db74">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;f&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;f&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(:ignore &lt;span style="color:#66d9ef">t&lt;/span> :which-key &lt;span style="color:#e6db74">&amp;#34;find file&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;S&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((lambda () (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (+git-push &lt;span style="color:#e6db74">&amp;#34;~/EnvSetup&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (+git-push &lt;span style="color:#e6db74">&amp;#34;~/.scratch.emacs.d&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (+git-push &lt;span style="color:#e6db74">&amp;#34;~/.evil.emacs.d&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (+git-push &lt;span style="color:#e6db74">&amp;#34;~/org&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )) :which-key &lt;span style="color:#e6db74">&amp;#34;push fundamental repos&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;s&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((lambda () (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (+git-pull &lt;span style="color:#e6db74">&amp;#34;~/EnvSetup&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (+git-pull &lt;span style="color:#e6db74">&amp;#34;~/.scratch.emacs.d&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (+git-pull &lt;span style="color:#e6db74">&amp;#34;~/.evil.emacs.d&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (+git-pull &lt;span style="color:#e6db74">&amp;#34;~/org&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )) :which-key &lt;span style="color:#e6db74">&amp;#34;pull fundamental repos&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="elcrafter-dot-el-solution">&lt;code>elcrafter.el&lt;/code> solution&lt;/h2>
&lt;h2 id="colleegues-s-tv-show-has-good-feedback-in-wechat-group">&lt;!-- raw HTML omitted -->[新事件]&lt;!-- raw HTML omitted --> Colleegues&amp;rsquo;s TV show has good feedback in wechat group!&lt;/h2>
&lt;h2 id="installing-debian-in-my-ssd-fails">Installing debian in my &lt;code>SSD&lt;/code> fails&lt;/h2>
&lt;h3 id="maybe-the-network-problem-or-just-the-cable-problem">&lt;!-- raw HTML omitted -->[BUG]&lt;!-- raw HTML omitted --> Maybe the network problem or just the cable problem&lt;/h3>
&lt;h3 id="boot-from-grub4dos-from-debian-vmliuz-dot-xxxxxx-xxxxx-amd-failed">&lt;!-- raw HTML omitted -->[BUG]&lt;!-- raw HTML omitted --> Boot from &lt;code>grub4dos&lt;/code> from &lt;code>debian/vmliuz.xxxxxx-xxxxx-amd&lt;/code> failed!&lt;/h3>
&lt;h3 id="boot-from-grub4dos-from-hdmedia-vmliuz-failed">&lt;!-- raw HTML omitted -->[BUG]&lt;!-- raw HTML omitted --> Boot from &lt;code>grub4dos&lt;/code> from &lt;code>hdmedia/vmliuz&lt;/code> failed!&lt;/h3>
&lt;h3 id="debootstrap-with-mnt-sda3-also-failed">&lt;!-- raw HTML omitted -->[BUG]&lt;!-- raw HTML omitted --> &lt;code>debootstrap&lt;/code> with &lt;code>/mnt/sda3&lt;/code> also failed!&lt;/h3>
&lt;h3 id="solution">&lt;!-- raw HTML omitted -->[已修复]&lt;!-- raw HTML omitted --> Solution:&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Boot the native &lt;code>debian&lt;/code> from &lt;code>/dev/sdb8&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Using chroot to &lt;code>/dev/sda3&lt;/code> and you can get &lt;code>wireless&lt;/code> support form &lt;code>host&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mount /dev/sda3 /mnt/sda3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount -t bind /proc /proc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount -t bind /dev /dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chroot /mnt/sda3 /bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Update to debian 11</title><link>/posts/2021-11-13/</link><pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021-11-13/</guid><description>Updating debian 11 bullseys Install the gnome desktop Prefer the exwm as windows manager Modulize evil.emacs.d settings Installed all-the-icons from doom and now works! Persist xterm settings xrdb -merge .Xdefaults Snapshot and Print Screen &amp;lt;WIN&amp;gt; + &amp;lt;Print&amp;gt; qutebrowser quickstart To go to a new webpage, press o, then type a url, then press Enter (Use O to open the url in a new tab, go to edit the current URL)</description><content>&lt;h2 id="updating-debian-11-bullseys">Updating debian 11 bullseys&lt;/h2>
&lt;h3 id="install-the-gnome-desktop">Install the &lt;code>gnome&lt;/code> desktop&lt;/h3>
&lt;h3 id="prefer-the-exwm-as-windows-manager">Prefer the &lt;code>exwm&lt;/code> as windows manager&lt;/h3>
&lt;h2 id="modulize-evil-dot-emacs-dot-d-settings">Modulize evil.emacs.d settings&lt;/h2>
&lt;h2 id="installed-all-the-icons-from-doom-and-now-works">Installed &lt;code>all-the-icons&lt;/code> from &lt;code>doom&lt;/code> and now works!&lt;/h2>
&lt;h2 id="persist-xterm-settings">Persist &lt;code>xterm&lt;/code> settings&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>xrdb -merge .Xdefaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="snapshot-and-print-screen">Snapshot and Print Screen&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&amp;lt;WIN&amp;gt; + &amp;lt;Print&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="qutebrowser-quickstart">qutebrowser quickstart&lt;/h2>
&lt;p>To go to a new webpage, press o, then type a url, then press Enter (Use O to open the url in a new tab, go to edit the current URL)&lt;/p>
&lt;p>If what you’ve typed isn’t a url, then a search engine will be used instead (DuckDuckGo, by default)&lt;/p>
&lt;p>To switch between tabs, use J (next tab) and K (previous tab), or press &lt;!-- raw HTML omitted -->, where num is the position of the tab to switch to&lt;/p>
&lt;p>To close the current tab, press d (and press u to undo closing a tab)&lt;/p>
&lt;p>Use H and L to go back and forth in the history&lt;/p>
&lt;p>To click on something without using the mouse, press f to show the hints, then type the keys next to what you want to click on (if that sounds weird, then just try pressing f and see what happens)&lt;/p>
&lt;p>Press : to show the commandline&lt;/p>
&lt;p>To search in a page, press /, type the phrase to search for, then press Enter. Use n and N to go back and forth through the matches, and press Esc to stop doing the search.&lt;/p>
&lt;p>To close qutebrowser, press Alt-F4, or :q, or :wq to save the currently open tabs and quit (note that in the settings you can make qutebrowser always save the currently open tabs)&lt;/p>
&lt;figure class="left" >
&lt;img src="https://raw.githubusercontent.com/qutebrowser/qutebrowser/master/doc/img/cheatsheet-big.png" />
&lt;/figure></content></item><item><title>Continue journey to Emacs Desktop</title><link>/posts/2021-11-12/</link><pubDate>Fri, 12 Nov 2021 00:00:00 -0400</pubDate><guid>/posts/2021-11-12/</guid><description>Configure better the desktop environment 进入Linux下新的Emacs桌面系统
Keys Description Sys-1 Switch to workspace 1 Sys-2 Switch to workspace 2 Sys-3 Switch to workspace 3 Sys-4 Switch to workspace 4 Sys-SPC App Launcher Syc-R Reload session Dive in the font of emacs What&amp;rsquo;s the font? What&amp;rsquo;s the font face ? What&amp;rsquo;s the font set ? What&amp;rsquo;s the font family? New tab functions 21.17 Tab Bars
标签是一个命名的持久化窗口配置，包括多个缓冲区和窗口。
M-x tab-bar-mode.
This command applies to all frames, including frames yet to be created.</description><content>&lt;h2 id="configure-better-the-desktop-environment">Configure better the desktop environment&lt;/h2>
&lt;p>&lt;a href="/posts/2021-11-11/">进入Linux下新的Emacs桌面系统&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Keys&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Sys-1&lt;/td>
&lt;td>Switch to workspace 1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sys-2&lt;/td>
&lt;td>Switch to workspace 2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sys-3&lt;/td>
&lt;td>Switch to workspace 3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sys-4&lt;/td>
&lt;td>Switch to workspace 4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sys-SPC&lt;/td>
&lt;td>App Launcher&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Syc-R&lt;/td>
&lt;td>Reload session&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="dive-in-the-font-of-emacs">Dive in the font of emacs&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> What&amp;rsquo;s the font?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> What&amp;rsquo;s the font face ?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> What&amp;rsquo;s the font set ?&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> What&amp;rsquo;s the font family?&lt;/li>
&lt;/ul>
&lt;h2 id="new-tab-functions">New tab functions&lt;/h2>
&lt;p>21.17 Tab Bars&lt;/p>
&lt;p>标签是一个命名的持久化窗口配置，包括多个缓冲区和窗口。&lt;/p>
&lt;p>&lt;code>M-x tab-bar-mode&lt;/code>.&lt;/p>
&lt;p>This command applies to all frames, including frames yet to be created. To control the use of tab bars at startup, customize the variable tab-bar-mode.&lt;/p>
&lt;h3 id="打开新标签">打开新标签。&lt;/h3>
&lt;p>&lt;code>C-x t 2&lt;/code>&lt;/p>
&lt;p>Add a &lt;code>new tab (tab-new)&lt;/code>. You can control the choice of the buffer displayed in a new tab by customizing the variable tab-bar-new-tab-choice.&lt;/p>
&lt;h3 id="选择一个缓冲区-新开标签">选择一个缓冲区，新开标签&lt;/h3>
&lt;p>&lt;code>C-x t b bufname RET&lt;/code>&lt;/p>
&lt;p>&lt;code>Select buffer bufname&lt;/code> in another tab. This runs switch-to-buffer-other-tab.&lt;/p>
&lt;h3 id="搜索文件-新开标签">搜索文件，新开标签&lt;/h3>
&lt;p>&lt;code>C-x t f filename RET&lt;/code>&lt;/p>
&lt;p>Visit file filename and select its buffer in another tab. This runs find-file-other-tab. See Visiting.&lt;/p>
&lt;h3 id="选择目录-新开标签">选择目录，新开标签&lt;/h3>
&lt;p>&lt;code>C-x t d directory RET&lt;/code>&lt;/p>
&lt;p>Select a Dired buffer for directory directory in another tab. This runs dired-other-tab. See Dired.&lt;/p>
&lt;p>By default, a new tab starts with the buffer that was current before calling the command that adds a new tab. To start a new tab with other buffers, customize the variable tab-bar-new-tab-choice.&lt;/p>
&lt;p>The variable tab-bar-new-tab-to defines where to place a new tab. By default, a new tab is added on the right side of the current tab.&lt;/p>
&lt;p>The following commands can be used to delete tabs:&lt;/p>
&lt;h3 id="关闭标签">关闭标签&lt;/h3>
&lt;p>&lt;code>C-x t 0&lt;/code>&lt;/p>
&lt;p>Close the selected tab (tab-close). It has no effect if there is only one tab, unless the variable tab-bar-close-last-tab-choice is customized to a non-default value.&lt;/p>
&lt;h3 id="关闭全部其他标签">关闭全部其他标签&lt;/h3>
&lt;p>&lt;code>C-x t 1&lt;/code>&lt;/p>
&lt;p>Close all tabs on the selected frame, except the selected one.&lt;/p>
&lt;p>The variable tab-bar-close-tab-select defines what tab to select after closing the current tab. By default, it selects a recently used tab.&lt;/p>
&lt;p>The command tab-undo restores the last closed tab.&lt;/p>
&lt;p>The following commands can be used to switch between tabs:&lt;/p>
&lt;h3 id="下一个标签">下一个标签&lt;/h3>
&lt;p>&lt;code>C-x t o&lt;/code>&lt;/p>
&lt;p>&lt;code>C-TAB&lt;/code>&lt;/p>
&lt;p>Switch to the next tab. If you repeat this command, it cycles through all the tabs on the selected frame. With a positive numeric argument n, it switches to the next nth tab; with a negative argument -n, it switches back to the previous nth tab.&lt;/p>
&lt;h3 id="上一个标签">上一个标签&lt;/h3>
&lt;p>&lt;code>S-C-TAB&lt;/code>&lt;/p>
&lt;p>Switch to the previous tab. With a positive numeric argument n, it switches to the previous nth tab; with a negative argument -n, it switches back to the next nth tab.&lt;/p>
&lt;h3 id="按名字切换标签">按名字切换标签&lt;/h3>
&lt;p>&lt;code>C-x t RET tabname RET&lt;/code>&lt;/p>
&lt;p>Switch to the tab by its name, with completion on all tab names. Default values are tab names sorted by recency, so you can use M-n (next-history-element) to get the name of the last visited tab, the second last, and so on.&lt;/p>
&lt;p>&lt;code>modifier-tabnumber&lt;/code>&lt;/p>
&lt;p>Switch to the tab by its number. After customizing the variable tab-bar-select-tab-modifiers to specify a modifier key, you can select a tab by its ordinal number using the specified modifier in combination with the tab number to select. To display the tab number alongside the tab name, you can customize another variable tab-bar-tab-hints. This will help you to decide what key to press to select the tab by its number.&lt;/p>
&lt;p>&lt;code>modifier-0&lt;/code>&lt;/p>
&lt;p>Switch to the recent tab. The key combination is the modifier key defined by tab-bar-select-tab-modifiers and the key 0. With a numeric argument n, switch to the nth recent tab.&lt;/p>
&lt;p>The following commands can be used to operate on tabs:&lt;/p>
&lt;h3 id="标签重命名">标签重命名&lt;/h3>
&lt;p>&lt;code>C-x t r tabname RET&lt;/code>&lt;/p>
&lt;p>Rename the current tab to tabname. You can control the programmatic name given to a tab by default by customizing the variable tab-bar-tab-name-function.&lt;/p>
&lt;h3 id="标签后移m位">标签后移m位&lt;/h3>
&lt;p>&lt;code>C-x t m&lt;/code>&lt;/p>
&lt;p>Move the current tab n positions to the right with a positive numeric argument n. With a negative argument -n, move the current tab n positions to the left.&lt;/p>
&lt;p>You can enable &lt;code>tab-bar-history-mode&lt;/code> to remember window configurations used in every tab, and restore them.&lt;/p>
&lt;p>&lt;code>tab-bar-history-back&lt;/code>&lt;/p>
&lt;p>Restore a previous window configuration used in the current tab. This navigates back in the history of window configurations.&lt;/p>
&lt;p>&lt;code>tab-bar-history-forward&lt;/code>&lt;/p>
&lt;p>Cancel restoration of the previous window configuration. This navigates forward in the history of window configurations.&lt;/p></content></item><item><title>Emacs字体设置方法总结 - CodeAntenna</title><link>/posts/emacs/emacs%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93_codeantenna/</link><pubDate>Fri, 12 Nov 2021 00:00:00 -0400</pubDate><guid>/posts/emacs/emacs%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93_codeantenna/</guid><description>[2021-11-12 周五 11:13] 由于目前的状况是两种字体系统并存，我们安装字体时就必须同时照顾到两者。 有时候在网上我们会看到一些字体安装经验介绍，比如：“安装字体太简单了， 把字体丢到 ~/.fonts 下面，执行一下 fc-cache 命令，你就可以在 firefox 中 使用这个字体了。”实际上，这只是为 xft 字体系统安装字体的方法，按这种方 法安装的字体，采用核心字体系统的程序无法使用，也就是说 emacs 无法使用这 样安装的字体。
第一步，拷贝字体。选择一个目录，把想用的字体拷贝到这个目录下。比如：
cp simsun.ttf /path/to/my/truetype/font/simsun.ttf 第二步，生成 fonts.scale 与 fonts.dir 在你的字体目录下用 mkfontscale 命令生成 fonts.scale 文件，用 mkfontdir 命令生成 fonts.dir 文件，注意 命令的顺序不能颠倒，否则生成 的 fonts.dir 是空文件。其实这两个文件的内 容是一样的，因此也可以直接 cp fonts.scale fonts.dir
不知道是什么原因 mkfontscale/mkfontdir 命令生成的 fonts.scale 文件中 缺少对 gbk 字体的支持，因此需要手工编辑 fonts.scale，添加一行：
simsun.ttf -misc-simsun-medium-r-normal--0-0-0-0-p-0-gbk-0 如果你用的是不同的字体，这一行的内容可能不太一样，但需要注意的是必须要 加上一个以 gbk-0 结尾的行。同时，文件第一行的那个数字要加1。 fonts.dir文件也要进行相应的修改，使这两个文件保持一致。如果不进行这 一步，就无法使用 gbk 字体。
第三步，修改 /etc/X11/xorg.conf (如果你在用 XFree86, 那就修改 XF86Config-4): 找到 Section &amp;ldquo;Module&amp;rdquo;, 加载 freetype 模块： Section &amp;ldquo;Module&amp;rdquo; &amp;hellip;&amp;hellip; Load &amp;ldquo;freetype&amp;rdquo; &amp;hellip;&amp;hellip; EndSection 找到 Section &amp;ldquo;Files&amp;rdquo;, 添加你的字体路径： Section &amp;ldquo;Files&amp;rdquo; &amp;hellip;&amp;hellip; FontPath &amp;ldquo;/path/to/my/truetype/font&amp;rdquo; &amp;hellip;&amp;hellip; EndSection 最后重新启动 X，这时候用 xlsfonts 命令应该能看到你安装的字体。</description><content>&lt;h2 id="">&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->[2021-11-12 周五 11:13]&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/h2>
&lt;p>由于目前的状况是两种字体系统并存，我们安装字体时就必须同时照顾到两者。 有时候在网上我们会看到一些字体安装经验介绍，比如：“安装字体太简单了， 把字体丢到 ~/.fonts 下面，执行一下 fc-cache 命令，你就可以在 firefox 中 使用这个字体了。”实际上，这只是为 xft 字体系统安装字体的方法，按这种方 法安装的字体，采用核心字体系统的程序无法使用，也就是说 emacs 无法使用这 样安装的字体。&lt;/p>
&lt;p>第一步，拷贝字体。选择一个目录，把想用的字体拷贝到这个目录下。比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cp simsun.ttf /path/to/my/truetype/font/simsun.ttf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二步，生成 fonts.scale 与 fonts.dir 在你的字体目录下用 mkfontscale
命令生成 fonts.scale 文件，用 mkfontdir 命令生成 fonts.dir 文件，注意
命令的顺序不能颠倒，否则生成 的 fonts.dir 是空文件。其实这两个文件的内
容是一样的，因此也可以直接 cp fonts.scale fonts.dir&lt;/p>
&lt;p>不知道是什么原因 mkfontscale/mkfontdir 命令生成的 fonts.scale 文件中 缺少对 gbk 字体的支持，因此需要手工编辑 fonts.scale，添加一行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>simsun.ttf -misc-simsun-medium-r-normal--0-0-0-0-p-0-gbk-0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你用的是不同的字体，这一行的内容可能不太一样，但需要注意的是必须要 加上一个以 gbk-0 结尾的行。同时，文件第一行的那个数字要加1。 fonts.dir文件也要进行相应的修改，使这两个文件保持一致。如果不进行这 一步，就无法使用 gbk 字体。&lt;/p>
&lt;p>第三步，修改 /etc/X11/xorg.conf (如果你在用 XFree86, 那就修改 XF86Config-4): 找到 Section &amp;ldquo;Module&amp;rdquo;, 加载 freetype 模块： Section &amp;ldquo;Module&amp;rdquo; &amp;hellip;&amp;hellip; Load &amp;ldquo;freetype&amp;rdquo; &amp;hellip;&amp;hellip; EndSection 找到 Section &amp;ldquo;Files&amp;rdquo;, 添加你的字体路径： Section &amp;ldquo;Files&amp;rdquo; &amp;hellip;&amp;hellip; FontPath &amp;ldquo;/path/to/my/truetype/font&amp;rdquo; &amp;hellip;&amp;hellip; EndSection 最后重新启动 X，这时候用 xlsfonts 命令应该能看到你安装的字体。&lt;/p>
&lt;blockquote>
&lt;p>注意，只 有 xlsfonts 列出的字体，emacs 才能使用。&lt;/p>
&lt;/blockquote>
&lt;p>由于 emacs 是个支持多语言的程序，它支持很多种字符集，而一种字体一般只覆 盖一个或几个字符集，因此只用一种字体是无法显示 emacs 支持的所有文字的。 因此在emacs中需要设置 fontset，也就是多种字体的集合，或者叫做字体集。 如果我们不指定 fontset, 那么 emacs 会使用默认的 fontset-default 来显示 字体。如果你觉得这种字体不好看，就需要自己定义 fontset。&lt;/p>
&lt;p>定义 fontset 有 两种方式&lt;/p>
&lt;p>一种是在 ~/.emacs 中使用 create-fontset-from-fontset-spec 函 数，&lt;/p>
&lt;p>一种是在 ~/.Xdefaults 中定义资源。我们分别介绍这两种方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>-adobe-courier-medium-r-normal--0-0-0-0-p-0-iso8859-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-adobe-courier-medium-r-normal--14-*-*-*-p-*-fontset-courier
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>选定了字体就可以用 create-fontset-from-fontset-spec 函数定义 fontset 了，这个函数很简单，它的参数是个字符串：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(create-fontset-from-fontset-spec (&lt;span style="color:#a6e22e">concat&lt;/span> &lt;span style="color:#e6db74">&amp;#34;-*-courier-medium-r-normal-*-14-*-*-*-*-*-fontset-courier,&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;chinese-gb2312:-*-simsun-medium-r-*-*-14-*-*-*-c-*-gb2312*-*,&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;mule-unicode-0100-24ff:-*-simsun-medium-r-*-*-14-*-*-*-c-*-iso10646*-*,&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;korean-ksc5601:-*-*-medium-r-*-*-14-*-*-*-*-*-ksc5601*-*,&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;chinese-cns11643-5:-*-simsun-medium-r-*-*-14-*-*-*-c-*-gbk*-*,&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;chinese-cns11643-6:-*-simsun-medium-r-*-*-14-*-*-*-c-*-gbk*-*,&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;chinese-cns11643-7:-*-simsun-medium-r-*-*-14-*-*-*-c-*-gbk*-*,&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;sjis:-*-medium-r-normal--14-*-jisx0208*-*&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(set-default-font &lt;span style="color:#e6db74">&amp;#34;fontset-courier&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外，为了让 emacs 创建新的 frame 时 (C-x 5 系列命令) 采用我们指定的 fontset，还要进行下面的设置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq default-frame-alist (&lt;span style="color:#a6e22e">append&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((font &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;fontset-courier&amp;#34;&lt;/span>)) default-frame-alist))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Emacs.Fontset-0:-*-courier-medium-r-normal-*-14-*-*-*-*-*-fontset-courier,/ chinese-gb2312:-*-simsun-medium-r-*-*-14-*-*-*-c-*-*-*,/ mule-unicode-0100-24ff:-*-simsun-medium-r-*-*-14-*-*-*-c-*-iso10646*-*,/ korean-ksc5601:-*-*-medium-r-*-*-14-*-*-*-*-*-ksc5601*-*,/ chinese-cns11643-5:-*-simsun-medium-r-*-*-14-*-*-*-c-*-gbk*-*,/ chinese-cns11643-6:-*-simsun-medium-r-*-*-14-*-*-*-c-*-gbk*-*,/ chinese-cns11643-7:-*-simsun-medium-r-*-*-14-*-*-*-c-*-gbk*-*,/ sjis:-*-medium-r-normal--14-*-jisx0208*-*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Creating Timestamps (The Org Manual)</title><link>/posts/emacs/creating_timestamps_the_org_manual/</link><pubDate>Thu, 11 Nov 2021 00:00:00 -0400</pubDate><guid>/posts/emacs/creating_timestamps_the_org_manual/</guid><description>[学习] 创建活动时间戳 Org mode 识别专门标识的时间戳
C-c . (org-time-stamp) 提示日期和时间。如果时间戳已经存在，进行修改。
连续输入2次，插入时间段。
Prompt for a date and insert a corresponding timestamp.
When point is at an existing timestamp in the buffer, the command is used to modify this timestamp instead of inserting a new one.
When this command is used twice in succession, a time range is inserted
如果包括前缀，这采用替代格式。默认时间可以以5分钟倍数的形式取整。
When called with a prefix argument, use the alternative format which contains date and time.</description><content>&lt;h2 id="创建活动时间戳">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 创建活动时间戳&lt;/h2>
&lt;p>&lt;code>Org mode&lt;/code> 识别专门标识的时间戳&lt;/p>
&lt;ul>
&lt;li>C-c . (org-time-stamp)&lt;/li>
&lt;/ul>
&lt;p>提示日期和时间。如果时间戳已经存在，进行修改。&lt;/p>
&lt;p>连续输入2次，插入时间段。&lt;/p>
&lt;p>Prompt for a date and insert a corresponding timestamp.&lt;/p>
&lt;p>When point is at an existing timestamp in the buffer, the command is
used to modify this timestamp instead of inserting a new one.&lt;/p>
&lt;p>When this command is used twice in succession, a time range is
inserted&lt;/p>
&lt;p>如果包括前缀，这采用替代格式。默认时间可以以5分钟倍数的形式取整。&lt;/p>
&lt;p>When called with a prefix argument, use the alternative format which
contains date and time.&lt;/p>
&lt;p>The default time can be rounded to multiples
of 5 minutes. See the option org-time-stamp-rounding-minutes&lt;/p>
&lt;p>如果有2个前缀参数，插入活动时间戳，无任何提示。&lt;/p>
&lt;p>With two prefix arguments, insert an active timestamp with the current
time without prompting.&lt;/p>
&lt;h2 id="插入非活动时间戳">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 插入非活动时间戳&lt;/h2>
&lt;p>C-c ! (org-time-stamp-inactive)&lt;/p>
&lt;p>Like C-c ., but insert an inactive timestamp that does not cause an
agenda entry.&lt;/p>
&lt;h2 id="修正化时间戳">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 修正化时间戳&lt;/h2>
&lt;p>C-c C-c&lt;/p>
&lt;p>如发现时间确实或错误，尝试插入或更正时间&lt;/p>
&lt;p>Normalize timestamp, insert or fix day name if missing or wrong.&lt;/p>
&lt;h2 id="从日历获取日期">从日历获取日期&lt;/h2>
&lt;p>C-c &amp;lt; (org-date-from-calendar)&lt;/p>
&lt;p>Insert a timestamp corresponding to point date in the calendar.&lt;/p>
&lt;h2 id="访问日历中的日期">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 访问日历中的日期&lt;/h2>
&lt;p>C-c &amp;gt; (org-goto-calendar)&lt;/p>
&lt;p>Access the Emacs calendar for the current date. If there is a
timestamp in the current line, go to the corresponding date instead&lt;/p>
&lt;h2 id="打开ａｇｅｎｄａ行事历">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 打开Ａｇｅｎｄａ行事历&lt;/h2>
&lt;p>C-c C-o (org-open-at-point)&lt;/p>
&lt;p>Access the agenda for the date given by the timestamp or -range at
point (see Weekly/daily agenda).&lt;/p>
&lt;h2 id="加一天-减一天">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 加一天/减一天&lt;/h2>
&lt;p>S-LEFT (org-timestamp-down-day)
S-RIGHT (org-timestamp-up-day)&lt;/p>
&lt;p>Change date at point by one day. These key bindings conflict with
shift-selection and related modes (see Conflicts).&lt;/p>
&lt;h2 id="加时间-减时间">&lt;!-- raw HTML omitted -->[BUG]&lt;!-- raw HTML omitted --> 加时间/减时间&lt;/h2>
&lt;p>S-UP (org-timestamp-up)
S-DOWN (org-timestamp-down)&lt;/p>
&lt;p>如光标在时间戳开始或者括号处，可以修改类型。在时间戳内部，修改所在点的
内容。每个点可以是年月日等时间单位。如果是时间段，修改开始时间将改变结束时间。&lt;/p>
&lt;p>On the beginning or enclosing bracket of a timestamp, change its type.
Within a timestamp, change the item under point.&lt;/p>
&lt;p>Point can be on a year, month, day, hour or minute. When the
timestamp contains a time range like ‘15:30-16:30’, modifying the
first time also shifts the second, shifting the time block with
constant length. To change the length, modify the second time.&lt;/p>
&lt;p>Note that if point is in a headline and not at a timestamp, these same
keys modify the priority of an item (see Priorities).&lt;/p>
&lt;p>The key bindings also conflict with shift-selection and related modes
(see Conflicts)&lt;/p>
&lt;h2 id="验证时间段">验证时间段&lt;/h2>
&lt;p>C-c C-y (org-evaluate-time-range)&lt;/p>
&lt;p>Evaluate a time range by computing the difference between start and
end.&lt;/p>
&lt;p>With a prefix argument, insert result after the time range (in a
table: into the following column).&lt;/p></content></item><item><title>进入Linux下新的Emacs桌面系统</title><link>/posts/2021-11-11/</link><pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021-11-11/</guid><description>Window Management EXWM Configuration We use the excellent EXWM module as the basis for our Emacs Desktop Environment. The EXWM Wiki is a great place to find tips about how to configure everything!
NOTE: Make sure you&amp;rsquo;ve installed nm-applet, pasystray and blueman for the system tray apps to work!
(require &amp;#39;exwm) (require &amp;#39;exwm-config) (defun efs/run-in-background (command) (let ((command-parts (split-string command &amp;#34;[ ]+&amp;#34;))) (apply #&amp;#39;call-process `(,(car command-parts) nil 0 nil ,@(cdr command-parts))))) (defun efs/set-wallpaper () (interactive) ;; NOTE: You will need to update this to a valid background path!</description><content>&lt;h2 id="window-management">Window Management&lt;/h2>
&lt;h3 id="exwm-configuration">EXWM Configuration&lt;/h3>
&lt;p>We use the excellent &lt;a href="https://github.com/ch11ng/exwm">EXWM&lt;/a> module as the basis for our Emacs Desktop Environment. The &lt;a href="https://github.com/ch11ng/exwm/wiki">EXWM Wiki&lt;/a> is a great place to find tips about how to configure everything!&lt;/p>
&lt;p>&lt;strong>NOTE:&lt;/strong> Make sure you&amp;rsquo;ve installed &lt;code>nm-applet&lt;/code>, &lt;code>pasystray&lt;/code> and &lt;code>blueman&lt;/code> for the system tray apps to work!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (require &lt;span style="color:#e6db74">&amp;#39;exwm&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (require &lt;span style="color:#e6db74">&amp;#39;exwm-config&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/run-in-background (command)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((command-parts (split-string command &lt;span style="color:#e6db74">&amp;#34;[ ]+&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">apply&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;call-process&lt;/span> &lt;span style="color:#f92672">`&lt;/span>(&lt;span style="color:#f92672">,&lt;/span>(&lt;span style="color:#a6e22e">car&lt;/span> command-parts) &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#f92672">,@&lt;/span>(&lt;span style="color:#a6e22e">cdr&lt;/span> command-parts)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/set-wallpaper ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; NOTE: You will need to update this to a valid background path!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (start-process-shell-command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;feh&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;feh --bg-scale /mnt/sdb6/share/images/001c9104dcc396b76c6c7857e5f8547f.jpg&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; &amp;#34;/mnt/sdb6/share/images/001c9104dcc396b76c6c7857e5f8547f.jpg&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/exwm-init-hook ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Make workspace 1 be the one where we land at startup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (exwm-workspace-switch-create &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Open eshell by default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;;(eshell)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; NOTE: The next two are disabled because we now use Polybar!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Show battery status in the mode line&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (display-battery-mode 1)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Show the time and date in modeline&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (setq display-time-day-and-date t)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (display-time-mode 1)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Also take a look at display-time-format and format-time-string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Start the Polybar panel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/start-panel)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Launch apps that will run in the background&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/run-in-background &lt;span style="color:#e6db74">&amp;#34;dunst&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (efs/run-in-background &amp;#34;nm-applet&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/run-in-background &lt;span style="color:#e6db74">&amp;#34;pasystray&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/run-in-background &lt;span style="color:#e6db74">&amp;#34;blueman-applet&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/exwm-update-class ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (exwm-workspace-rename-buffer exwm-class-name))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/exwm-update-title ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (pcase exwm-class-name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Firefox&amp;#34;&lt;/span> (exwm-workspace-rename-buffer (&lt;span style="color:#a6e22e">format&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Firefox: %s&amp;#34;&lt;/span> exwm-title)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; This function isn&amp;#39;t currently used, only serves as an example how to&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; position a window&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/position-window ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let* ((pos (frame-position))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (pos-x (&lt;span style="color:#a6e22e">car&lt;/span> pos))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (pos-y (&lt;span style="color:#a6e22e">cdr&lt;/span> pos)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (exwm-floating-move (&lt;span style="color:#a6e22e">-&lt;/span> pos-x) (&lt;span style="color:#a6e22e">-&lt;/span> pos-y))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/configure-window-by-class ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (pcase exwm-class-name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Firefox&amp;#34;&lt;/span> (exwm-workspace-move-window &lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;Sol&amp;#34;&lt;/span> (exwm-workspace-move-window &lt;span style="color:#ae81ff">3&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;mpv&amp;#34;&lt;/span> (exwm-floating-toggle-floating)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (exwm-layout-toggle-mode-line))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; This function should be used only after configuring autorandr!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/update-displays ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/run-in-background &lt;span style="color:#e6db74">&amp;#34;autorandr --change --force&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/set-wallpaper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">message&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Display config: %s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (string-trim (shell-command-to-string &lt;span style="color:#e6db74">&amp;#34;autorandr --current&amp;#34;&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (use-package exwm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Set the default number of workspaces&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq exwm-workspace-number &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; When window &amp;#34;class&amp;#34; updates, use it to set the buffer name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook &lt;span style="color:#e6db74">&amp;#39;exwm-update-class-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>efs/exwm-update-class)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; When window title updates, use it to set the buffer name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook &lt;span style="color:#e6db74">&amp;#39;exwm-update-title-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>efs/exwm-update-title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Configure windows as they&amp;#39;re created&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook &lt;span style="color:#e6db74">&amp;#39;exwm-manage-finish-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>efs/configure-window-by-class)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; When EXWM starts up, do some extra confifuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook &lt;span style="color:#e6db74">&amp;#39;exwm-init-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>efs/exwm-init-hook)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Rebind CapsLock to Ctrl&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (start-process-shell-command &lt;span style="color:#e6db74">&amp;#34;xmodmap&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;xmodmap ~/.emacs.d/exwm/Xmodmap&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; NOTE: Uncomment the following two options if you want window buffers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; to be available on all workspaces!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Automatically move EXWM buffer to current workspace when selected&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (setq exwm-layout-show-all-buffers t)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Display all EXWM buffers in every workspace buffer list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (setq exwm-workspace-show-all-buffers t)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; NOTE: Uncomment this option if you want to detach the minibuffer!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Detach the minibuffer (show it with exwm-workspace-toggle-minibuffer)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;;(setq exwm-workspace-minibuffer-position &amp;#39;top)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Set the screen resolution (update this to be the correct resolution for your screen!)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (require &lt;span style="color:#e6db74">&amp;#39;exwm-randr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (exwm-randr-enable)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (start-process-shell-command &amp;#34;xrandr&amp;#34; nil &amp;#34;xrandr --output Virtual-1 --primary --mode 2048x1152 --pos 0x0 --rotate normal&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (start-process-shell-command &lt;span style="color:#e6db74">&amp;#34;xrandr&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;xrandr --output HDMI-1 --auto&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; This will need to be updated to the name of a display! You can find&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; the names of your displays by looking at arandr or the output of xrandr&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq exwm-randr-workspace-monitor-plist &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#e6db74">&amp;#34;HDMI-1&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#e6db74">&amp;#34;HDMI-1&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; NOTE: Uncomment these lines after setting up autorandr!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; React to display connectivity changes, do initial display update&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (add-hook &amp;#39;exwm-randr-screen-change-hook #&amp;#39;efs/update-displays)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (efs/update-displays)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Set the wallpaper after changing the resolution&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/set-wallpaper)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; NOTE: This is disabled because we now use Polybar!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Load the system tray before exwm-init&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (require &amp;#39;exwm-systemtray)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (setq exwm-systemtray-height 32)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; (exwm-systemtray-enable)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Automatically send the mouse cursor to the selected workspace&amp;#39;s display&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq exwm-workspace-warp-cursor &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Window focus should follow the mouse pointer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq mouse-autoselect-window &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> focus-follows-mouse &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; These keys should always pass through to Emacs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq exwm-input-prefix-keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">?\C&lt;/span>-x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">?\C&lt;/span>-u
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">?\C&lt;/span>-h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">?\M&lt;/span>-x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">?\M&lt;/span>&lt;span style="color:#a6e22e">-&lt;/span>&lt;span style="color:#f92672">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">?\M&lt;/span>-&amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">?\M&lt;/span>-:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">?\C&lt;/span>-\M-j &lt;span style="color:#75715e">;; Buffer list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">?\C&lt;/span>-\ )) &lt;span style="color:#75715e">;; Ctrl+Space&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Ctrl+Q will enable the next key to be sent directly&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">define-key&lt;/span> exwm-mode-map [&lt;span style="color:#e6db74">?\C&lt;/span>-q] &lt;span style="color:#e6db74">&amp;#39;exwm-input-send-next-key&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Set up global key bindings. These always work, no matter the input state!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Keep in mind that changing this list after EXWM initializes has no effect.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq exwm-input-global-keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Reset to line-mode (C-c C-k switches to char-mode via exwm-input-release-keyboard)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ([&lt;span style="color:#e6db74">?\s&lt;/span>-r] &lt;span style="color:#f92672">.&lt;/span> exwm-reset)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Move between windows&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ([s-left] &lt;span style="color:#f92672">.&lt;/span> windmove-left)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ([s-right] &lt;span style="color:#f92672">.&lt;/span> windmove-right)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ([s-up] &lt;span style="color:#f92672">.&lt;/span> windmove-up)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ([s-down] &lt;span style="color:#f92672">.&lt;/span> windmove-down)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Launch applications via shell command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ([&lt;span style="color:#e6db74">?\s&lt;/span>-&amp;amp;] &lt;span style="color:#f92672">.&lt;/span> (lambda (command)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive (&lt;span style="color:#a6e22e">list&lt;/span> (read-shell-command &lt;span style="color:#e6db74">&amp;#34;$ &amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (start-process-shell-command command &lt;span style="color:#66d9ef">nil&lt;/span> command)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Switch workspace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ([&lt;span style="color:#e6db74">?\s&lt;/span>-w] &lt;span style="color:#f92672">.&lt;/span> exwm-workspace-switch)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ([&lt;span style="color:#e6db74">?\s&lt;/span>&lt;span style="color:#a6e22e">-&lt;/span>&lt;span style="color:#f92672">`&lt;/span>] &lt;span style="color:#f92672">.&lt;/span> (lambda () (interactive) (exwm-workspace-switch-create &lt;span style="color:#ae81ff">0&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; &amp;#39;s-N&amp;#39;: Switch to certain workspace with Super (Win) plus a number key (0 - 9)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">,@&lt;/span>(&lt;span style="color:#a6e22e">mapcar&lt;/span> (lambda (i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>(&lt;span style="color:#f92672">,&lt;/span>(kbd (&lt;span style="color:#a6e22e">format&lt;/span> &lt;span style="color:#e6db74">&amp;#34;s-%d&amp;#34;&lt;/span> i)) &lt;span style="color:#f92672">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (lambda ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (exwm-workspace-switch-create &lt;span style="color:#f92672">,&lt;/span>i))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (number-sequence &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (exwm-input-set-key (kbd &lt;span style="color:#e6db74">&amp;#34;s-SPC&amp;#34;&lt;/span>) &lt;span style="color:#e6db74">&amp;#39;counsel-linux-app&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (exwm-enable))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="desktop-environment">Desktop Environment&lt;/h2>
&lt;h3 id="desktop-key-bindings">Desktop Key Bindings&lt;/h3>
&lt;p>We use the &lt;a href="https://github.com/DamienCassou/desktop-environment">desktop-environment&lt;/a> package to automatically bind to well-known programs for controlling the volume, screen brightness, media playback, and doing other things like locking the screen and taking screenshots. Make sure that you install the necessary programs to make this functionality work! Check the &lt;a href="https://github.com/DamienCassou/desktop-environment#default-configuration">default programs&lt;/a> list to know what you need to install.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (use-package desktop-environment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :after exwm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :config (desktop-environment-mode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :custom
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (desktop-environment-brightness-small-increment &lt;span style="color:#e6db74">&amp;#34;2%+&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (desktop-environment-brightness-small-decrement &lt;span style="color:#e6db74">&amp;#34;2%-&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (desktop-environment-brightness-normal-increment &lt;span style="color:#e6db74">&amp;#34;5%+&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (desktop-environment-brightness-normal-decrement &lt;span style="color:#e6db74">&amp;#34;5%-&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="desktop-file">Desktop File&lt;/h3>
&lt;p>This file is used by your &amp;ldquo;login manager&amp;rdquo; (GDM, LightDM, etc) to display EXWM as a desktop environment option when you log in.&lt;/p>
&lt;p>&lt;strong>IMPORTANT&lt;/strong>: Make sure you create a symbolic link for this file into &lt;code>/usr/share/xsessions&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo ln -f ~/.emacs.d/exwm/EXWM.desktop /usr/share/xsessions/EXWM.desktop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>Desktop Entry&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name&lt;span style="color:#f92672">=&lt;/span>EXWM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Comment&lt;span style="color:#f92672">=&lt;/span>Emacs Window Manager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Exec&lt;span style="color:#f92672">=&lt;/span>sh /home/daviwil/.emacs.d/exwm/start-exwm.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TryExec&lt;span style="color:#f92672">=&lt;/span>sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type&lt;span style="color:#f92672">=&lt;/span>Application
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> X-LightDM-DesktopName&lt;span style="color:#f92672">=&lt;/span>exwm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DesktopNames&lt;span style="color:#f92672">=&lt;/span>exwm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="launcher-script">Launcher Script&lt;/h3>
&lt;p>This launcher script is invoked by &lt;code>EXWM.desktop&lt;/code> to start Emacs and load our desktop environment configuration. We also start up some other helpful applications to configure the desktop experience.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Set the screen DPI (uncomment this if needed!)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># xrdb ~/.emacs.d/exwm/Xresources&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Run the screen compositor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> compton &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Enable screen locking on suspend&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xss-lock -- slock &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Fire it up&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exec dbus-launch --exit-with-session emacs -mm --debug-init -l ~/.emacs.d/desktop.el
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="keyboard-configuration">Keyboard Configuration&lt;/h3>
&lt;p>The &lt;code>Xmodmap&lt;/code> file will be used with the &lt;code>xmodmap&lt;/code> program to remap CapsLock to Ctrl inside of our desktop environment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clear lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clear control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keycode 66 &lt;span style="color:#f92672">=&lt;/span> Control_L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add control &lt;span style="color:#f92672">=&lt;/span> Control_L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add Lock &lt;span style="color:#f92672">=&lt;/span> Control_R
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dpi-configuration">DPI configuration&lt;/h3>
&lt;p>The &lt;code>Xresources&lt;/code> file will be used with &lt;code>xrdb&lt;/code> in &lt;code>start-exwm.sh&lt;/code> to set our screen DPI:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">
Xft.dpi: 100 # Set this to your desired DPI! Larger number means bigger text and UI
&lt;/code>&lt;/pre>&lt;h3 id="panel-with-polybar">Panel with Polybar&lt;/h3>
&lt;p>Polybar provides a great, minimalistic panel for your EXWM desktop configuration. The following config integrates &lt;code>emacsclient&lt;/code> and Polybar with &lt;code>polybar-msg&lt;/code> to enable you to gather &lt;strong>any&lt;/strong> information from Emacs and display it in the panel!&lt;/p>
&lt;p>Check out the Polybar wiki for more details on how to configure it: &lt;a href="https://github.com/polybar/polybar/wiki">https://github.com/polybar/polybar/wiki&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Make sure the server is started (better to do this in your main Emacs config!)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (server-start)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defvar efs/polybar-process &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Holds the process of the running Polybar instance, if any&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/kill-panel ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when efs/polybar-process
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (ignore-errors
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">kill-process&lt;/span> efs/polybar-process)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq efs/polybar-process &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/start-panel ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/kill-panel)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq efs/polybar-process (start-process-shell-command &lt;span style="color:#e6db74">&amp;#34;polybar&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;polybar panel&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/send-polybar-hook (module-name hook-index)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (start-process-shell-command &lt;span style="color:#e6db74">&amp;#34;polybar-msg&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> (&lt;span style="color:#a6e22e">format&lt;/span> &lt;span style="color:#e6db74">&amp;#34;polybar-msg hook %s %s&amp;#34;&lt;/span> module-name hook-index)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/send-polybar-exwm-workspace ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (efs/send-polybar-hook &lt;span style="color:#e6db74">&amp;#34;exwm-workspace&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Update panel indicator when workspace changes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-hook &lt;span style="color:#e6db74">&amp;#39;exwm-workspace-switch-hook&lt;/span> &lt;span style="color:#a6e22e">#&amp;#39;&lt;/span>efs/send-polybar-exwm-workspace)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The configuration for our ingeniously named panel, &amp;ldquo;panel&amp;rdquo;. Invoke it with &lt;code>polybar panel&lt;/code> on the command line!&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">
; Docs: https://github.com/polybar/polybar
;==========================================================
[settings]
screenchange-reload = true
[global/wm]
margin-top = 0
margin-bottom = 0
[colors]
background = #f0232635
background-alt = #576075
foreground = #A6Accd
foreground-alt = #555
primary = #ffb52a
secondary = #e60053
alert = #bd2c40
underline-1 = #c792ea
[bar/panel]
width = 100%
height = 35
offset-x = 0
offset-y = 0
fixed-center = true
enable-ipc = true
background = ${colors.background}
foreground = ${colors.foreground}
line-size = 2
line-color = #f00
border-size = 0
border-color = #00000000
padding-top = 5
padding-left = 1
padding-right = 1
module-margin = 1
font-0 = &amp;#34;Cantarell:size=18:weight=bold;2&amp;#34;
font-1 = &amp;#34;Font Awesome:size=14;2&amp;#34;
font-2 = &amp;#34;Material Icons:size=20;5&amp;#34;
font-3 = &amp;#34;Fira Mono:size=13;-3&amp;#34;
modules-left = exwm-workspace
modules-right = cpu temperature battery
tray-position = right
tray-padding = 2
tray-maxsize = 28
cursor-click = pointer
cursor-scroll = ns-resize
[module/exwm-workspace]
type = custom/ipc
hook-0 = emacsclient -e &amp;#34;exwm-workspace-current-index&amp;#34; | sed -e &amp;#39;s/^&amp;#34;//&amp;#39; -e &amp;#39;s/&amp;#34;$//&amp;#39;
initial = 1
format-underline = ${colors.underline-1}
format-padding = 1
[module/cpu]
type = internal/cpu
interval = 2
format = &amp;lt;label&amp;gt; &amp;lt;ramp-coreload&amp;gt;
format-underline = ${colors.underline-1}
click-left = emacsclient -e &amp;#34;(proced)&amp;#34;
label = %percentage:2%%
ramp-coreload-spacing = 0
ramp-coreload-0 = ▁
ramp-coreload-0-foreground = ${colors.foreground-alt}
ramp-coreload-1 = ▂
ramp-coreload-2 = ▃
ramp-coreload-3 = ▄
ramp-coreload-4 = ▅
ramp-coreload-5 = ▆
ramp-coreload-6 = ▇
[module/date]
type = internal/date
interval = 5
date = &amp;#34;%a %b %e&amp;#34;
date-alt = &amp;#34;%A %B %d %Y&amp;#34;
time = %l:%M %p
time-alt = %H:%M:%S
format-prefix-foreground = ${colors.foreground-alt}
format-underline = ${colors.underline-1}
label = %date% %time%
[module/battery]
type = internal/battery
battery = BAT0
adapter = ADP1
full-at = 98
time-format = %-l:%M
label-charging = %percentage%% / %time%
format-charging = &amp;lt;animation-charging&amp;gt; &amp;lt;label-charging&amp;gt;
format-charging-underline = ${colors.underline-1}
label-discharging = %percentage%% / %time%
format-discharging = &amp;lt;ramp-capacity&amp;gt; &amp;lt;label-discharging&amp;gt;
format-discharging-underline = ${self.format-charging-underline}
format-full = &amp;lt;ramp-capacity&amp;gt; &amp;lt;label-full&amp;gt;
format-full-underline = ${self.format-charging-underline}
ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 
animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-framerate = 750
[module/temperature]
type = internal/temperature
thermal-zone = 0
warn-temperature = 60
format = &amp;lt;label&amp;gt;
format-underline = ${colors.underline-1}
format-warn = &amp;lt;label-warn&amp;gt;
format-warn-underline = ${self.format-underline}
label = %temperature-c%
label-warn = %temperature-c%!
label-warn-foreground = ${colors.secondary}
&lt;/code>&lt;/pre>&lt;h3 id="desktop-notifications-with-dunst">Desktop Notifications with Dunst&lt;/h3>
&lt;p>We use an application called &lt;a href="https://dunst-project.org/">Dunst&lt;/a> to enable the display of desktop notifications from Emacs and other applications running within EXWM. Consult the &lt;a href="https://dunst-project.org/documentation/">documentation&lt;/a> for more details on how to configure this to your liking!&lt;/p>
&lt;p>Here are some things you might want to consider changing:&lt;/p>
&lt;ul>
&lt;li>&lt;code>format&lt;/code> - Customize how notification text contents are displayed&lt;/li>
&lt;li>&lt;code>geometry&lt;/code> - Where the notification appears and how large it should be by default&lt;/li>
&lt;li>&lt;code>urgency_normal&lt;/code>, etc - configures the background and frame color for notifications of different types&lt;/li>
&lt;li>&lt;code>max_icon_size&lt;/code> - Constrain icon display since some icons will be larger than others&lt;/li>
&lt;li>&lt;code>icon_path&lt;/code> - Important if your icons are not in a common location (like when using GNU Guix)&lt;/li>
&lt;li>&lt;code>idle_threshold&lt;/code> - Wait for user to become active for this long before hiding notifications&lt;/li>
&lt;li>&lt;code>mouse_left/right/middle_click&lt;/code> - Action to take when clicking a notification&lt;/li>
&lt;li>Any of the key bindings in the &lt;code>shortcuts&lt;/code> section (though these are deprecated in 1.5.0, use &lt;code>dunstctl&lt;/code>)&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">
[global]
### Display ###
monitor = 0
# The geometry of the window:
# [{width}]x{height}[+/-{x}+/-{y}]
geometry = &amp;#34;500x10-10+50&amp;#34;
# Show how many messages are currently hidden (because of geometry).
indicate_hidden = yes
# Shrink window if it&amp;#39;s smaller than the width. Will be ignored if
# width is 0.
shrink = no
# The transparency of the window. Range: [0; 100].
transparency = 10
# The height of the entire notification. If the height is smaller
# than the font height and padding combined, it will be raised
# to the font height and padding.
notification_height = 0
# Draw a line of &amp;#34;separator_height&amp;#34; pixel height between two
# notifications.
# Set to 0 to disable.
separator_height = 1
separator_color = frame
# Padding between text and separator.
padding = 8
# Horizontal padding.
horizontal_padding = 8
# Defines width in pixels of frame around the notification window.
# Set to 0 to disable.
frame_width = 2
# Defines color of the frame around the notification window.
frame_color = &amp;#34;#89AAEB&amp;#34;
# Sort messages by urgency.
sort = yes
# Don&amp;#39;t remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
idle_threshold = 120
### Text ###
font = Cantarell 20
# The spacing between lines. If the height is smaller than the
# font height, it will get raised to the font height.
line_height = 0
markup = full
# The format of the message. Possible variables are:
# %a appname
# %s summary
# %b body
# %i iconname (including its path)
# %I iconname (without its path)
# %p progress value if set ([ 0%] to [100%]) or nothing
# %n progress value if set without any extra characters
# %% Literal %
# Markup is allowed
format = &amp;#34;&amp;lt;b&amp;gt;%s&amp;lt;/b&amp;gt;\n%b&amp;#34;
# Alignment of message text.
# Possible values are &amp;#34;left&amp;#34;, &amp;#34;center&amp;#34; and &amp;#34;right&amp;#34;.
alignment = left
# Show age of message if message is older than show_age_threshold
# seconds.
# Set to -1 to disable.
show_age_threshold = 60
# Split notifications into multiple lines if they don&amp;#39;t fit into
# geometry.
word_wrap = yes
# When word_wrap is set to no, specify where to make an ellipsis in long lines.
# Possible values are &amp;#34;start&amp;#34;, &amp;#34;middle&amp;#34; and &amp;#34;end&amp;#34;.
ellipsize = middle
# Ignore newlines &amp;#39;\n&amp;#39; in notifications.
ignore_newline = no
# Stack together notifications with the same content
stack_duplicates = true
# Hide the count of stacked notifications with the same content
hide_duplicate_count = false
# Display indicators for URLs (U) and actions (A).
show_indicators = yes
### Icons ###
# Align icons left/right/off
icon_position = left
# Scale larger icons down to this size, set to 0 to disable
max_icon_size = 88
# Paths to default icons.
icon_path = /usr/share/icons/Adwaita/96x96/status:/usr/share/icons/Adwaita/96x96/emblems
### History ###
# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = no
# Maximum amount of notifications kept in history
history_length = 20
### Misc/Advanced ###
# Browser for opening urls in context menu.
browser = qutebrowser
# Always run rule-defined scripts, even if the notification is suppressed
always_run_script = true
# Define the title of the windows spawned by dunst
title = Dunst
# Define the class of the windows spawned by dunst
class = Dunst
startup_notification = false
verbosity = mesg
# Define the corner radius of the notification window
# in pixel size. If the radius is 0, you have no rounded
# corners.
# The radius will be automatically lowered if it exceeds half of the
# notification height to avoid clipping text and/or icons.
corner_radius = 4
mouse_left_click = close_current
mouse_middle_click = do_action
mouse_right_click = close_all
# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
# Calculate the dpi to use on a per-monitor basis.
# If this setting is enabled the Xft.dpi value will be ignored and instead
# dunst will attempt to calculate an appropriate dpi value for each monitor
# using the resolution and physical size. This might be useful in setups
# where there are multiple screens with very different dpi values.
per_monitor_dpi = false
[shortcuts]
# Shortcuts are specified as [modifier+][modifier+]...key
# Available modifiers are &amp;#34;ctrl&amp;#34;, &amp;#34;mod1&amp;#34; (the alt-key), &amp;#34;mod2&amp;#34;,
# &amp;#34;mod3&amp;#34; and &amp;#34;mod4&amp;#34; (windows-key).
# Xev might be helpful to find names for keys.
# Close notification.
#close = ctrl+space
# Close all notifications.
#close_all = ctrl+shift+space
# Redisplay last message(s).
# On the US keyboard layout &amp;#34;grave&amp;#34; is normally above TAB and left
# of &amp;#34;1&amp;#34;. Make sure this key actually exists on your keyboard layout,
# e.g. check output of &amp;#39;xmodmap -pke&amp;#39;
history = ctrl+grave
# Context menu.
context = ctrl+shift+period
[urgency_low]
# IMPORTANT: colors have to be defined in quotation marks.
# Otherwise the &amp;#34;#&amp;#34; and following would be interpreted as a comment.
background = &amp;#34;#222222&amp;#34;
foreground = &amp;#34;#888888&amp;#34;
timeout = 10
# Icon for notifications with low urgency, uncomment to enable
#icon = /path/to/icon
[urgency_normal]
background = &amp;#34;#1c1f26&amp;#34;
foreground = &amp;#34;#ffffff&amp;#34;
timeout = 10
# Icon for notifications with normal urgency, uncomment to enable
#icon = /path/to/icon
[urgency_critical]
background = &amp;#34;#900000&amp;#34;
foreground = &amp;#34;#ffffff&amp;#34;
frame_color = &amp;#34;#ff0000&amp;#34;
timeout = 0
# Icon for notifications with critical urgency, uncomment to enable
#icon = /path/to/icon
&lt;/code>&lt;/pre>&lt;p>We can also set up some functions for enabling and disabling notifications at any time:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/disable-desktop-notifications ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (start-process-shell-command &lt;span style="color:#e6db74">&amp;#34;notify-send&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;notify-send \&amp;#34;DUNST_COMMAND_PAUSE\&amp;#34;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/enable-desktop-notifications ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (start-process-shell-command &lt;span style="color:#e6db74">&amp;#34;notify-send&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;notify-send \&amp;#34;DUNST_COMMAND_RESUME\&amp;#34;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun efs/toggle-desktop-notifications ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (start-process-shell-command &lt;span style="color:#e6db74">&amp;#34;notify-send&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;notify-send \&amp;#34;DUNST_COMMAND_TOGGLE\&amp;#34;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Go spider framework</title><link>/posts/go/go-spider-framework/</link><pubDate>Sun, 11 Apr 2021 08:31:52 -0400</pubDate><guid>/posts/go/go-spider-framework/</guid><description>Go爬虫框架 简洁明了的用户界面 使用cobra构建命令行基本程序
chromedp 调用chrome的Api后台访问网页
因为vps服务器上没有安装chrome，所以我们可以使用docker的镜像来调用
docker-compose.yml文件 version: &amp;#39;3&amp;#39; services: db: image: postgres container_name: db restart: always ports: - 5432:5432 environment: - POSTGRES_USER=spider - POSTGRES_PASSWORD=20090909 - POSTGRES_DB=spider volumes: - postgres-data:/var/lib/postgresql/data/ adminer: image: adminer container_name: adminer links: - db restart: always environment: - POSTGRES_HOST=db - POSTGRES_PORT=5432 - POSTGRES_USER=spider - POSTGRES_PASSWORD=20090909 - POSTGRES_DB=spider ports: - 9433:8080 spider: image: chromedp/headless-shell:latest container_name: spider depends_on: - db links: - db restart: always ports: - 9222:9222 environment: - POSTGRES_HOST=db - POSTGRES_PORT=5432 - POSTGRES_USER=spider - POSTGRES_PASSWORD=20090909 - POSTGRES_DB=spider volumes: - /root/go/bin:/root/go/bin - .</description><content>&lt;h1 id="go爬虫框架">Go爬虫框架&lt;/h1>
&lt;h2 id="简洁明了的用户界面">简洁明了的用户界面&lt;/h2>
&lt;p>使用cobra构建命令行基本程序&lt;/p>
&lt;h2 id="chromedp">chromedp&lt;/h2>
&lt;p>调用&lt;code>chrome&lt;/code>的&lt;code>Api&lt;/code>后台访问网页&lt;/p>
&lt;p>因为&lt;code>vps&lt;/code>服务器上没有安装&lt;code>chrome&lt;/code>，所以我们可以使用&lt;code>docker&lt;/code>的镜像来调用&lt;/p>
&lt;h3 id="docker-composeyml文件">&lt;code>docker-compose.yml&lt;/code>文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">db&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">postgres&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">5432&lt;/span>:&lt;span style="color:#ae81ff">5432&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_USER=spider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_PASSWORD=20090909&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_DB=spider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">postgres-data:/var/lib/postgresql/data/ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">adminer&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">adminer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">adminer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">links&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_HOST=db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_PORT=5432&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_USER=spider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_PASSWORD=20090909&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_DB=spider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">9433&lt;/span>:&lt;span style="color:#ae81ff">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">spider&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">chromedp/headless-shell:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">spider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">depends_on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">links&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">9222&lt;/span>:&lt;span style="color:#ae81ff">9222&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_HOST=db&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_PORT=5432&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_USER=spider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_PASSWORD=20090909&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">POSTGRES_DB=spider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">/root/go/bin:/root/go/bin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./crontab_job:/etc/cron.d/container_cronjob&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">chmod 644 /etc/cron.d/container_cronjob &amp;amp;&amp;amp; cron&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">postgres-data&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行命令&lt;code>docker-compose -up&lt;/code>将启动&lt;/p>
&lt;p>![docker chrome spider](./docs/assets/docker-chrome-spider.png]&lt;/p>
&lt;h2 id="goquery">goquery&lt;/h2>
&lt;p>查询页面元素&lt;/p>
&lt;h2 id="go-prisma">go prisma&lt;/h2>
&lt;h3 id="prismaschema文件">&lt;code>prisma.schema&lt;/code>文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>generator db &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;go run github.com/prisma/prisma-client-go&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datasource db &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> provider &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;postgresql&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;postgresql://spider:20090909@db:5432/spider?schema=public&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model movies &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id Int @id @default&lt;span style="color:#f92672">(&lt;/span>autoincrement&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> title String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subtitle String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> other String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> desc String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> year String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> area String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tag String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> star String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> comment String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> quote String?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> created_at DateTime @default&lt;span style="color:#f92672">(&lt;/span>now&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> updated_at DateTime @default&lt;span style="color:#f92672">(&lt;/span>now&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用prisma的go语言客户端更优于使用gorm等框架">使用&lt;code>prisma&lt;/code>的&lt;code>go&lt;/code>语言客户端，更优于使用&lt;code>gorm&lt;/code>等框架&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>go run github.com/prisma/prisma-client-go generate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="设置环境参数">设置环境参数&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>如果的vps中运行，修改hosts文件，将db指向&lt;code>127.0.0.1&lt;/code>主机&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果在docker中运行，修改docker-compose.yml文件，指向&lt;code>db&lt;/code>容器&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="使用deno初始化数据库">使用&lt;code>deno&lt;/code>初始化数据库&lt;/h2>
&lt;p>echo &amp;ldquo;postgresql://spider:20090909@db:5432/spider?schema=public&amp;rdquo;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>deno run -A --unstable https://raw.githubusercontent.com/linuxing3/gospider/main/create_table.ts&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用go-admin构建前端界面">使用&lt;code>go admin&lt;/code>构建前端界面&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>go install github.com/GoAdminGroup/go-admin/adm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Make better emacs workflow</title><link>/posts/20211108/</link><pubDate>Tue, 16 Feb 2021 14:06:05 -0400</pubDate><guid>/posts/20211108/</guid><description>1 [修改中] 更好地发布博客日志 1.1 [学习] 使用 org-capture 自动生成 org (或 md ) 文件在 OneDrive/org/journal 目录下 1.2 [学习] 书写博客的内容 1.3 [学习] 1. 使用 org-publish 发布 html 1.3.1 [学习] 使用 org-publish-project 进行发布，直接导出为 workspace/github.io/blog 目录下，生成 html 文件 1.4 [学习] 2. 使用 ox-hugo 发布 md 1.4.1 [学习] 使用 org-hugo-export-to-md 直接导出为 workspace/awesome-hugo-blog/post 目录下, 生成 md 文件 1.5 生成其他的物料 1.5.1 [学习] 插入 plantuml 图片 1.5.2 [学习] 发布 images 项目到 workspace/github.io/assets/images 目录下 1.5.3 [BUG] 发布 css 项目到 workspace/github.</description><content>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;!-- raw HTML omitted -->1&lt;!-- raw HTML omitted --> &lt;a href="#%E6%9B%B4%E5%A5%BD%E5%9C%B0%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2%E6%97%A5%E5%BF%97">&lt;!-- raw HTML omitted -->[修改中]&lt;!-- raw HTML omitted --> 更好地发布博客日志&lt;/a>
&lt;ul>
&lt;li>&lt;!-- raw HTML omitted -->1.1&lt;!-- raw HTML omitted --> &lt;a href="#%E4%BD%BF%E7%94%A8-org-capture-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90-org--%E6%88%96-md--%E6%96%87%E4%BB%B6%E5%9C%A8-onedrive-org-journal-%E7%9B%AE%E5%BD%95%E4%B8%8B">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 使用 &lt;code>org-capture&lt;/code> 自动生成 &lt;code>org&lt;/code> (或 &lt;code>md&lt;/code> ) 文件在 &lt;code>OneDrive/org/journal&lt;/code> 目录下&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->1.2&lt;!-- raw HTML omitted --> &lt;a href="#%E4%B9%A6%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%86%85%E5%AE%B9">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 书写博客的内容&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->1.3&lt;!-- raw HTML omitted --> &lt;a href="#1-dot-%E4%BD%BF%E7%94%A8-org-publish-%E5%8F%91%E5%B8%83-html">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 1. 使用 &lt;code>org-publish&lt;/code> 发布 &lt;strong>html&lt;/strong>&lt;/a>
&lt;ul>
&lt;li>&lt;!-- raw HTML omitted -->1.3.1&lt;!-- raw HTML omitted --> &lt;a href="#%E4%BD%BF%E7%94%A8-org-publish-project-%E8%BF%9B%E8%A1%8C%E5%8F%91%E5%B8%83-%E7%9B%B4%E6%8E%A5%E5%AF%BC%E5%87%BA%E4%B8%BA-workspace-github-dot-io-blog-%E7%9B%AE%E5%BD%95%E4%B8%8B-%E7%94%9F%E6%88%90-html-%E6%96%87%E4%BB%B6">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 使用 &lt;code>org-publish-project&lt;/code> 进行发布，直接导出为 &lt;code>workspace/github.io/blog&lt;/code> 目录下，生成 &lt;code>html&lt;/code> 文件&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->1.4&lt;!-- raw HTML omitted --> &lt;a href="#2-dot-%E4%BD%BF%E7%94%A8-ox-hugo-%E5%8F%91%E5%B8%83-md">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 2. 使用 &lt;code>ox-hugo&lt;/code> 发布 &lt;strong>md&lt;/strong>&lt;/a>
&lt;ul>
&lt;li>&lt;!-- raw HTML omitted -->1.4.1&lt;!-- raw HTML omitted --> &lt;a href="#%E4%BD%BF%E7%94%A8-org-hugo-export-to-md-%E7%9B%B4%E6%8E%A5%E5%AF%BC%E5%87%BA%E4%B8%BA-workspace-awesome-hugo-blog-post-%E7%9B%AE%E5%BD%95%E4%B8%8B-%E7%94%9F%E6%88%90-md-%E6%96%87%E4%BB%B6">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 使用 &lt;code>org-hugo-export-to-md&lt;/code> 直接导出为 &lt;code>workspace/awesome-hugo-blog/post&lt;/code> 目录下, 生成 &lt;code>md&lt;/code> 文件&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->1.5&lt;!-- raw HTML omitted --> &lt;a href="#%E7%94%9F%E6%88%90%E5%85%B6%E4%BB%96%E7%9A%84%E7%89%A9%E6%96%99">生成其他的物料&lt;/a>
&lt;ul>
&lt;li>&lt;!-- raw HTML omitted -->1.5.1&lt;!-- raw HTML omitted --> &lt;a href="#%E6%8F%92%E5%85%A5-plantuml-%E5%9B%BE%E7%89%87">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 插入 &lt;code>plantuml&lt;/code> 图片&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->1.5.2&lt;!-- raw HTML omitted --> &lt;a href="#%E5%8F%91%E5%B8%83-images-%E9%A1%B9%E7%9B%AE%E5%88%B0-workspace-github-dot-io-assets-images-%E7%9B%AE%E5%BD%95%E4%B8%8B">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 发布 &lt;code>images&lt;/code> 项目到 &lt;code>workspace/github.io/assets/images&lt;/code> 目录下&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->1.5.3&lt;!-- raw HTML omitted --> &lt;a href="#%E5%8F%91%E5%B8%83-css-%E9%A1%B9%E7%9B%AE%E5%88%B0-workspace-github-dot-io-assets-css-%E7%9B%AE%E5%BD%95%E4%B8%8B">&lt;!-- raw HTML omitted -->[BUG]&lt;!-- raw HTML omitted --> 发布 &lt;code>css&lt;/code> 项目到 &lt;code>workspace/github.io/assets/css&lt;/code> 目录下&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->1.6&lt;!-- raw HTML omitted --> &lt;a href="#%E6%B5%8F%E8%A7%88%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 浏览你的博客!!!&lt;/a>
&lt;ul>
&lt;li>&lt;!-- raw HTML omitted -->1.6.1&lt;!-- raw HTML omitted --> &lt;a href="#%E5%90%AF%E5%8A%A8-hugo-%E8%AE%BF%E9%97%AE-http-localhost-1313">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 启动 &lt;code>hugo&lt;/code> , 访问 &lt;strong>http://localhost:1313&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->1.6.2&lt;!-- raw HTML omitted --> &lt;a href="#%E5%90%AF%E5%8A%A8-simple-httpd-%E8%AE%BF%E9%97%AE-http-localhost-8080">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 启动 &lt;code>simple-httpd&lt;/code> , 访问 &lt;strong>http://localhost:8080&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted --> &lt;a href="#%E5%85%B6%E4%BB%96%E5%B7%A5%E4%BD%9C">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> 其他工作&lt;/a>
&lt;ul>
&lt;li>&lt;!-- raw HTML omitted -->2.1&lt;!-- raw HTML omitted --> &lt;a href="#%E6%B7%B1%E5%85%A5%E6%89%93%E5%A5%BD%E6%B1%A1%E6%9F%93%E9%98%B2%E6%B2%BB%E6%94%BB%E5%9D%9A%E6%88%98">深入打好污染防治攻坚战&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->2.2&lt;!-- raw HTML omitted --> &lt;a href="#%E8%A7%82%E7%9C%8B%E6%96%B0%E9%97%BB%E8%81%94%E6%92%AD">观看新闻联播&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->2.3&lt;!-- raw HTML omitted --> &lt;a href="#%E7%A5%9D%E8%B4%BA%E6%96%B0%E5%8D%8E%E7%A4%BE%E6%88%90%E7%AB%8B90%E5%91%A8%E5%B9%B4">祝贺新华社成立90周年&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->2.4&lt;!-- raw HTML omitted --> &lt;a href="#%E9%A6%96%E6%AC%A1%E9%99%8D%E9%9B%AA">❄ 首次降雪&lt;/a>&lt;/li>
&lt;li>&lt;!-- raw HTML omitted -->2.5&lt;!-- raw HTML omitted --> &lt;a href="#%E5%88%B6%E4%BD%9C%E5%BE%AE%E4%BF%A1%E7%94%B5%E5%AD%90%E7%9B%B8%E5%86%8C">制作微信电子相册&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;h2 id="更好地发布博客日志">&lt;!-- raw HTML omitted -->[修改中]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1&lt;!-- raw HTML omitted --> 更好地发布博客日志&lt;/h2>
&lt;h3 id="使用-org-capture-自动生成-org--或-md--文件在-onedrive-org-journal-目录下">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.1&lt;!-- raw HTML omitted --> 使用 &lt;code>org-capture&lt;/code> 自动生成 &lt;code>org&lt;/code> (或 &lt;code>md&lt;/code> ) 文件在 &lt;code>OneDrive/org/journal&lt;/code> 目录下&lt;/h3>
&lt;h3 id="书写博客的内容">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.2&lt;!-- raw HTML omitted --> 书写博客的内容&lt;/h3>
&lt;h3 id="1-dot-使用-org-publish-发布-html">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.3&lt;!-- raw HTML omitted --> 1. 使用 &lt;code>org-publish&lt;/code> 发布 &lt;strong>html&lt;/strong>&lt;/h3>
&lt;h4 id="使用-org-publish-project-进行发布-直接导出为-workspace-github-dot-io-blog-目录下-生成-html-文件">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.3.1&lt;!-- raw HTML omitted --> 使用 &lt;code>org-publish-project&lt;/code> 进行发布，直接导出为 &lt;code>workspace/github.io/blog&lt;/code> 目录下，生成 &lt;code>html&lt;/code> 文件&lt;/h4>
&lt;h3 id="2-dot-使用-ox-hugo-发布-md">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.4&lt;!-- raw HTML omitted --> 2. 使用 &lt;code>ox-hugo&lt;/code> 发布 &lt;strong>md&lt;/strong>&lt;/h3>
&lt;h4 id="使用-org-hugo-export-to-md-直接导出为-workspace-awesome-hugo-blog-post-目录下-生成-md-文件">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.4.1&lt;!-- raw HTML omitted --> 使用 &lt;code>org-hugo-export-to-md&lt;/code> 直接导出为 &lt;code>workspace/awesome-hugo-blog/post&lt;/code> 目录下, 生成 &lt;code>md&lt;/code> 文件&lt;/h4>
&lt;!-- raw HTML omitted -->
&lt;ol>
&lt;li>
&lt;p>设置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; 设定`hugo的目录&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(setq org-hugo-base-dir (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;workspace/awesome-hugo-blog&amp;#34;&lt;/span> home-directory))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; 博客 blog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂ ✂&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; for Hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defvar blog-hugo-process &lt;span style="color:#e6db74">&amp;#34;Hugo Server&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Name of &amp;#39;gridsome develop&amp;#39; process process&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +modern-blog-hugo-find-dir ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Open hugo blog files&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-file (workspace-path &lt;span style="color:#e6db74">&amp;#34;awesome-hugo-blog/content/posts&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +modern-blog-hugo-deploy ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Run gridsome cli and push changes upstream.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (with-dir org-hugo-base-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; deploy to github for ci&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;cd &amp;#34;&lt;/span> org-hugo-base-dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;git add .&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (--&amp;gt; (&lt;span style="color:#a6e22e">current-time-string&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">concat&lt;/span> &lt;span style="color:#e6db74">&amp;#34;git commit -m \&amp;#34;&amp;#34;&lt;/span> it &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command it))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;git push&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +modern-blog-hugo-start-server ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Run gridsome server if not already running and open its webpage.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (with-dir org-hugo-base-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;cd &amp;#34;&lt;/span> org-hugo-base-dir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (unless (&lt;span style="color:#a6e22e">get-process&lt;/span> blog-hugo-process)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">start-process&lt;/span> blog-hugo-process &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hugo&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;server&amp;#34;&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun +modern-blog-hugo-end-server ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;End gridsome server process if running.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (--when-let (&lt;span style="color:#a6e22e">get-process&lt;/span> blog-hugo-process)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">delete-process&lt;/span> it)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="生成其他的物料">&lt;!-- raw HTML omitted -->1.5&lt;!-- raw HTML omitted --> 生成其他的物料&lt;/h3>
&lt;h4 id="插入-plantuml-图片">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.5.1&lt;!-- raw HTML omitted --> 插入 &lt;code>plantuml&lt;/code> 图片&lt;/h4>
&lt;h4 id="发布-images-项目到-workspace-github-dot-io-assets-images-目录下">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.5.2&lt;!-- raw HTML omitted --> 发布 &lt;code>images&lt;/code> 项目到 &lt;code>workspace/github.io/assets/images&lt;/code> 目录下&lt;/h4>
&lt;h4 id="发布-css-项目到-workspace-github-dot-io-assets-css-目录下">&lt;!-- raw HTML omitted -->[BUG]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.5.3&lt;!-- raw HTML omitted --> 发布 &lt;code>css&lt;/code> 项目到 &lt;code>workspace/github.io/assets/css&lt;/code> 目录下&lt;/h4>
&lt;h3 id="浏览你的博客">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.6&lt;!-- raw HTML omitted --> 浏览你的博客!!!&lt;/h3>
&lt;h4 id="启动-hugo-访问-http-localhost-1313">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.6.1&lt;!-- raw HTML omitted --> 启动 &lt;code>hugo&lt;/code> , 访问 &lt;strong>&lt;a href="http://localhost:1313">http://localhost:1313&lt;/a>&lt;/strong>&lt;/h4>
&lt;h4 id="启动-simple-httpd-访问-http-localhost-8080">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->1.6.2&lt;!-- raw HTML omitted --> 启动 &lt;code>simple-httpd&lt;/code> , 访问 &lt;strong>&lt;a href="http://localhost:8080">http://localhost:8080&lt;/a>&lt;/strong>&lt;/h4>
&lt;h2 id="其他工作">&lt;!-- raw HTML omitted -->[学习]&lt;!-- raw HTML omitted --> &lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted --> 其他工作&lt;/h2>
&lt;h3 id="深入打好污染防治攻坚战">&lt;!-- raw HTML omitted -->2.1&lt;!-- raw HTML omitted --> 深入打好污染防治攻坚战&lt;/h3>
&lt;h3 id="观看新闻联播">&lt;!-- raw HTML omitted -->2.2&lt;!-- raw HTML omitted --> 观看新闻联播&lt;/h3>
&lt;h3 id="祝贺新华社成立90周年">&lt;!-- raw HTML omitted -->2.3&lt;!-- raw HTML omitted --> 祝贺新华社成立90周年&lt;/h3>
&lt;h3 id="首次降雪">&lt;!-- raw HTML omitted -->2.4&lt;!-- raw HTML omitted --> ❄ 首次降雪&lt;/h3>
&lt;h3 id="制作微信电子相册">&lt;!-- raw HTML omitted -->2.5&lt;!-- raw HTML omitted --> 制作微信电子相册&lt;/h3>
&lt;figure class="left" >
&lt;img src="/ox-hugo/weichat_digital_album.png" />
&lt;/figure></content></item><item><title>Micro but awesome editor</title><link>/posts/vim/micro/</link><pubDate>Tue, 16 Feb 2021 14:06:05 -0400</pubDate><guid>/posts/vim/micro/</guid><description>micro is a terminal-based text editor that aims to be easy to use and intuitive, while also taking advantage of the capabilities of modern terminals. It comes as a single, batteries-included, static binary with no dependencies; you can download and use it right now!
As its name indicates, micro aims to be somewhat of a successor to the nano editor by being easy to install and use. It strives to be enjoyable as a full-time editor for people who prefer to work in a terminal, or those who regularly edit files over SSH.</description><content>&lt;!-- raw HTML omitted -->
&lt;p>&lt;a href="https://travis-ci.org/zyedidia/micro">&lt;img src="https://travis-ci.org/zyedidia/micro.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://goreportcard.com/report/github.com/zyedidia/micro">&lt;img src="https://goreportcard.com/badge/github.com/zyedidia/micro" alt="Go Report Card">&lt;/a>
&lt;a href="https://github.com/zyedidia/micro/releases">&lt;img src="https://img.shields.io/github/release/zyedidia/micro.svg?label=Release" alt="Release">&lt;/a>
&lt;a href="https://github.com/zyedidia/micro/blob/master/LICENSE">&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="MIT License">&lt;/a>
&lt;a href="https://gitter.im/zyedidia/micro?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge">&lt;img src="https://badges.gitter.im/zyedidia/micro.svg" alt="Join the chat at https://gitter.im/zyedidia/micro">&lt;/a>
&lt;a href="https://snapcraft.io/micro">&lt;img src="https://snapcraft.io/micro/badge.svg" alt="Snap Status">&lt;/a>&lt;/p>
&lt;p>&lt;strong>micro&lt;/strong> is a terminal-based text editor that aims to be easy to use and intuitive, while also taking advantage of the capabilities
of modern terminals. It comes as a single, batteries-included, static binary with no dependencies; you can download and use it right now!&lt;/p>
&lt;p>As its name indicates, micro aims to be somewhat of a successor to the nano editor by being easy to install and use.
It strives to be enjoyable as a full-time editor for people who prefer to work in a terminal, or those who regularly edit files over SSH.&lt;/p>
&lt;p>Here is a picture of micro editing its source code.&lt;/p>
&lt;p>&lt;img src="C:/Users/Administrator/go/src/github.com/linuxing3/micro/assets/micro-solarized.png" alt="Screenshot">&lt;/p>
&lt;p>To see more screenshots of micro, showcasing some of the default color schemes, see &lt;a href="https://micro-editor.github.io">here&lt;/a>.&lt;/p>
&lt;p>You can also check out the website for Micro at &lt;a href="https://micro-editor.github.io">https://micro-editor.github.io&lt;/a>.&lt;/p>
&lt;h2 id="table-of-contents">Table of Contents&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="#features">Features&lt;/a>&lt;/li>
&lt;li>&lt;a href="#installation">Installation&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#prebuilt-binaries">Prebuilt binaries&lt;/a>&lt;/li>
&lt;li>&lt;a href="#package-managers">Package Managers&lt;/a>&lt;/li>
&lt;li>&lt;a href="#building-from-source">Building from source&lt;/a>&lt;/li>
&lt;li>&lt;a href="#fully-static-binary">Fully static binary&lt;/a>&lt;/li>
&lt;li>&lt;a href="#macos-terminal">macOS terminal&lt;/a>&lt;/li>
&lt;li>&lt;a href="#linux-clipboard-support">Linux clipboard support&lt;/a>&lt;/li>
&lt;li>&lt;a href="#colors-and-syntax-highlighting">Colors and syntax highlighting&lt;/a>&lt;/li>
&lt;li>&lt;a href="#cygwin-mingw-plan9">Cygwin, Mingw, Plan9&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#usage">Usage&lt;/a>&lt;/li>
&lt;li>&lt;a href="#documentation-and-help">Documentation and Help&lt;/a>&lt;/li>
&lt;li>&lt;a href="#contributing">Contributing&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Easy to use and install.&lt;/li>
&lt;li>No dependencies or external files are needed — just the binary you can download further down the page.&lt;/li>
&lt;li>Multiple cursors.&lt;/li>
&lt;li>Common keybindings (&lt;!-- raw HTML omitted -->Ctrl-s&lt;!-- raw HTML omitted -->, &lt;!-- raw HTML omitted -->Ctrl-c&lt;!-- raw HTML omitted -->, &lt;!-- raw HTML omitted -->Ctrl-v&lt;!-- raw HTML omitted -->, &lt;!-- raw HTML omitted -->Ctrl-z&lt;!-- raw HTML omitted -->, …).
&lt;ul>
&lt;li>Keybindings can be rebound to your liking.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Sane defaults.
&lt;ul>
&lt;li>You shouldn&amp;rsquo;t have to configure much out of the box (and it is extremely easy to configure).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Splits and tabs.&lt;/li>
&lt;li>nano-like menu to help you remember the keybindings.&lt;/li>
&lt;li>Extremely good mouse support.
&lt;ul>
&lt;li>This means mouse dragging to create a selection, double click to select by word, and triple click to select by line.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Cross-platform (it should work on all the platforms Go runs on).
&lt;ul>
&lt;li>Note that while Windows is supported Mingw/Cygwin is not (see below).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Plugin system (plugins are written in Lua).
&lt;ul>
&lt;li>micro has a built-in plugin manager to automatically install, remove, and update plugins.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Built-in diff gutter.&lt;/li>
&lt;li>Simple autocompletion.&lt;/li>
&lt;li>Persistent undo.&lt;/li>
&lt;li>Automatic linting and error notifications.&lt;/li>
&lt;li>Syntax highlighting for over &lt;a href="runtime/syntax">130 languages&lt;/a>.&lt;/li>
&lt;li>Color scheme support.
&lt;ul>
&lt;li>By default, micro comes with 16, 256, and true color themes.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>True color support (set the &lt;code>MICRO_TRUECOLOR&lt;/code> environment variable to 1 to enable it).&lt;/li>
&lt;li>Copy and paste with the system clipboard.&lt;/li>
&lt;li>Small and simple.&lt;/li>
&lt;li>Easily configurable.&lt;/li>
&lt;li>Macros.&lt;/li>
&lt;li>Common editor features such as undo/redo, line numbers, Unicode support, soft wrapping, …&lt;/li>
&lt;/ul>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>To install micro, you can download a &lt;a href="https://github.com/zyedidia/micro/releases">prebuilt binary&lt;/a>, or you can build it from source.&lt;/p>
&lt;p>If you want more information about ways to install micro, see this &lt;a href="https://github.com/zyedidia/micro/wiki/Installing-Micro">wiki page&lt;/a>.&lt;/p>
&lt;p>Use &lt;code>micro -version&lt;/code> to get the version information after installing. It is only guaranteed that you are installing the most recent
stable version if you install from the prebuilt binaries, Homebrew, or Snap.&lt;/p>
&lt;p>A desktop entry file and man page can be found in the &lt;a href="https://github.com/zyedidia/micro/tree/master/assets/packaging">assets/packaging&lt;/a> directory.&lt;/p>
&lt;h3 id="prebuilt-binaries">Prebuilt binaries&lt;/h3>
&lt;p>All you need to install micro is one file, the binary itself. It&amp;rsquo;s as simple as that!&lt;/p>
&lt;p>Download the binary from the &lt;a href="https://github.com/zyedidia/micro/releases">releases&lt;/a> page.&lt;/p>
&lt;h3 id="installation-script">Installation script&lt;/h3>
&lt;p>There is a script which can install micro for you by downloading the latest prebuilt binary. You can find it at &lt;a href="https://getmic.ro">https://getmic.ro&lt;/a>.&lt;/p>
&lt;p>You can easily install micro by running&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl https://getmic.ro | bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The script will place the micro binary in the current directory. From there, you can move it to a directory on your path of your choosing (e.g. &lt;code>sudo mv micro /usr/bin&lt;/code>). See its &lt;a href="https://github.com/benweissmann/getmic.ro">GitHub repository&lt;/a> for more information.&lt;/p>
&lt;p>To uninstall micro, simply remove the binary, and the configuration directory at &lt;code>~/.config/micro&lt;/code>.&lt;/p>
&lt;h3 id="package-managers">Package managers&lt;/h3>
&lt;p>You can install micro using Homebrew on Mac:&lt;/p>
&lt;pre tabindex="0">&lt;code>brew install micro
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Note for Mac:&lt;/strong> All micro keybindings use the control or alt (option) key, not the command
key. By default, macOS terminals do not forward alt key events. To fix this, please see
the section on &lt;a href="https://github.com/zyedidia/micro#macos-terminal">macOS terminals&lt;/a> further below.&lt;/p>
&lt;p>On Linux, you can install micro through &lt;a href="https://snapcraft.io/docs/core/install">snap&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>snap install micro --classic
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Note for Linux:&lt;/strong> for interfacing with the local system clipboard, &lt;code>xclip&lt;/code> or &lt;code>xsel&lt;/code>
must be installed. Please see the section on &lt;a href="https://github.com/zyedidia/micro#linux-clipboard-support">Linux clipboard support&lt;/a>
further below.&lt;/p>
&lt;p>Micro is also available through other package managers on Linux such as apt, dnf, AUR, Nix, and package managers
for other operating systems. These packages are not guaranteed to be up-to-date.&lt;/p>
&lt;ul>
&lt;li>Linux: Available in distro-specific package managers.
&lt;ul>
&lt;li>&lt;code>apt install micro&lt;/code> (Ubuntu 20.04 &lt;code>focal&lt;/code>, and Debian &lt;code>unstable | testing | buster-backports&lt;/code>). At the moment, this package (2.0.1-1) is outdated and has a known bug where debug mode is enabled.&lt;/li>
&lt;li>&lt;code>dnf install micro&lt;/code> (Fedora).&lt;/li>
&lt;li>&lt;code>pacman -S micro&lt;/code> (Arch Linux).&lt;/li>
&lt;li>&lt;code>eopkg install micro&lt;/code> (Solus).&lt;/li>
&lt;li>See &lt;a href="https://github.com/zyedidia/micro/wiki/Installing-Micro">wiki&lt;/a> for details about CRUX, Termux.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Windows: &lt;a href="https://chocolatey.org">Chocolatey&lt;/a> and &lt;a href="https://github.com/lukesampson/scoop">Scoop&lt;/a>.
&lt;ul>
&lt;li>&lt;code>choco install micro&lt;/code>.&lt;/li>
&lt;li>&lt;code>scoop install micro&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>OpenBSD: Available in the ports tree and also available as a binary package.
&lt;ul>
&lt;li>&lt;code>pkd_add -v micro&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NetBSD, macOS, Linux, Illumos, etc. with &lt;a href="http://www.pkgsrc.org/">pkgsrc&lt;/a>-current:
&lt;ul>
&lt;li>&lt;code>pkg_add micro&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="building-from-source">Building from source&lt;/h3>
&lt;p>If your operating system does not have a binary release, but does run Go, you can build from source.&lt;/p>
&lt;p>Make sure that you have Go version 1.11 or greater and Go modules are enabled.&lt;/p>
&lt;pre tabindex="0">&lt;code>git clone https://github.com/zyedidia/micro
cd micro
make build
sudo mv micro /usr/local/bin # optional
&lt;/code>&lt;/pre>&lt;p>The binary will be placed in the current directory and can be moved to
anywhere you like (for example &lt;code>/usr/local/bin&lt;/code>).&lt;/p>
&lt;p>The command &lt;code>make install&lt;/code> will install the binary to &lt;code>$GOPATH/bin&lt;/code> or &lt;code>$GOBIN&lt;/code>.&lt;/p>
&lt;p>You can install directly with &lt;code>go get&lt;/code> (&lt;code>go get github.com/zyedidia/micro/cmd/micro&lt;/code>) but this isn&amp;rsquo;t
recommended because it doesn&amp;rsquo;t build micro with version information (necessary for the plugin manager),
and doesn&amp;rsquo;t disable debug mode.&lt;/p>
&lt;h3 id="fully-static-binary">Fully static binary&lt;/h3>
&lt;p>By default, the micro binary will dynamically link with core system libraries (this is generally
recommended for security and portability). However, there is a fully static prebuilt binary that
is provided for amd64 as &lt;code>linux-static.tar.gz&lt;/code>, and to build a fully static binary from source, run&lt;/p>
&lt;pre tabindex="0">&lt;code>CGO_ENABLED=0 make build
&lt;/code>&lt;/pre>&lt;h3 id="macos-terminal">macOS terminal&lt;/h3>
&lt;p>If you are using macOS, you should consider using &lt;a href="http://iterm2.com/">iTerm2&lt;/a> instead of the default terminal (Terminal.app). The iTerm2 terminal has much better mouse support as well as better handling of key events. For best keybinding behavior, choose &lt;code>xterm defaults&lt;/code> under &lt;code>Preferences-&amp;gt;Profiles-&amp;gt;Keys-&amp;gt;Presets...&lt;/code>, and select &lt;code>Esc+&lt;/code> for &lt;code>Left Option Key&lt;/code> in the same menu. The newest versions also support true color.&lt;/p>
&lt;p>If you still insist on using the default Mac terminal, be sure to set &lt;code>Use Option key as Meta key&lt;/code> under
&lt;code>Preferences-&amp;gt;Profiles-&amp;gt;Keyboard&lt;/code> to use &lt;!-- raw HTML omitted -->option&lt;!-- raw HTML omitted --> as &lt;!-- raw HTML omitted -->alt&lt;!-- raw HTML omitted -->.&lt;/p>
&lt;h3 id="linux-clipboard-support">Linux clipboard support&lt;/h3>
&lt;p>On Linux, clipboard support requires:&lt;/p>
&lt;ul>
&lt;li>On X11, the &lt;code>xclip&lt;/code> or &lt;code>xsel&lt;/code> commands (for Ubuntu: &lt;code>sudo apt install xclip&lt;/code>)&lt;/li>
&lt;li>On Wayland, the &lt;code>wl-clipboard&lt;/code> command&lt;/li>
&lt;/ul>
&lt;p>If you don&amp;rsquo;t have these commands, micro will use an internal clipboard for copy and paste, but it won&amp;rsquo;t work with external applications.&lt;/p>
&lt;h3 id="colors-and-syntax-highlighting">Colors and syntax highlighting&lt;/h3>
&lt;p>If you open micro and it doesn&amp;rsquo;t seem like syntax highlighting is working, this is probably because
you are using a terminal which does not support 256 color mode. Try changing the color scheme to &lt;code>simple&lt;/code>
by pressing &lt;!-- raw HTML omitted -->Ctrl-e&lt;!-- raw HTML omitted --> in micro and typing &lt;code>set colorscheme simple&lt;/code>.&lt;/p>
&lt;p>If you are using the default Ubuntu terminal, to enable 256 make sure your &lt;code>TERM&lt;/code> variable is set
to &lt;code>xterm-256color&lt;/code>.&lt;/p>
&lt;p>Many of the Windows terminals don&amp;rsquo;t support more than 16 colors, which means
that micro&amp;rsquo;s default color scheme won&amp;rsquo;t look very good. You can either set
the color scheme to &lt;code>simple&lt;/code>, or download and configure a better terminal emulator
than the Windows default.&lt;/p>
&lt;h3 id="cygwin-mingw-plan9">Cygwin, Mingw, Plan9&lt;/h3>
&lt;p>Cygwin, Mingw, and Plan9 are unfortunately not officially supported. In Cygwin and Mingw, micro will often work when run using
the &lt;code>winpty&lt;/code> utility:&lt;/p>
&lt;pre tabindex="0">&lt;code>winpty micro.exe ...
&lt;/code>&lt;/pre>&lt;p>Micro uses the amazing &lt;a href="https://github.com/gdamore/tcell">tcell library&lt;/a>, but this
means that micro is restricted to the platforms tcell supports. As a result, micro does not support
Plan9, and Cygwin (although this may change in the future). Micro also doesn&amp;rsquo;t support NaCl (which is deprecated anyway).&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>Once you have built the editor, start it by running &lt;code>micro path/to/file.txt&lt;/code> or &lt;code>micro&lt;/code> to open an empty buffer.&lt;/p>
&lt;p>micro also supports creating buffers from &lt;code>stdin&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ifconfig | micro
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can move the cursor around with the arrow keys and mouse.&lt;/p>
&lt;p>You can also use the mouse to manipulate the text. Simply clicking and dragging
will select text. You can also double click to enable word selection, and triple
click to enable line selection.&lt;/p>
&lt;h2 id="documentation-and-help">Documentation and Help&lt;/h2>
&lt;p>micro has a built-in help system which you can access by pressing &lt;!-- raw HTML omitted -->Ctrl-e&lt;!-- raw HTML omitted --> and typing &lt;code>help&lt;/code>. Additionally, you can
view the help files here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/zyedidia/micro/tree/master/runtime/help/help.md">main help&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zyedidia/micro/tree/master/runtime/help/keybindings.md">keybindings&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zyedidia/micro/tree/master/runtime/help/commands.md">commands&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zyedidia/micro/tree/master/runtime/help/colors.md">colors&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zyedidia/micro/tree/master/runtime/help/options.md">options&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/zyedidia/micro/tree/master/runtime/help/plugins.md">plugins&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I also recommend reading the &lt;a href="https://github.com/zyedidia/micro/tree/master/runtime/help/tutorial.md">tutorial&lt;/a> for
a brief introduction to the more powerful configuration features micro offers.&lt;/p>
&lt;h2 id="contributing">Contributing&lt;/h2>
&lt;p>If you find any bugs, please report them! I am also happy to accept pull requests from anyone.&lt;/p>
&lt;p>You can use the &lt;a href="https://github.com/zyedidia/micro/issues">GitHub issue tracker&lt;/a>
to report bugs, ask questions, or suggest new features.&lt;/p>
&lt;p>For a more informal setting to discuss the editor, you can join the &lt;a href="https://gitter.im/zyedidia/micro">Gitter chat&lt;/a>.&lt;/p>
&lt;p>Sometimes I am unresponsive, and I apologize! If that happens, please ping me.&lt;/p></content></item><item><title>Bash Tutorial</title><link>/posts/misc/bash-tutorial/</link><pubDate>Thu, 11 Feb 2021 08:31:52 -0400</pubDate><guid>/posts/misc/bash-tutorial/</guid><description>Bash BASH CHEATSHEET (中文速查表) - by skywind (created on 2018/02/14) Version: 47, Last Modified: 2019/09/24 17:58 https://github.com/skywind3000/awesome-cheatsheets
############################################################################## ############################################################################## # 常用快捷键（默认使用 Emacs 键位） ############################################################################## CTRL+A # 移动到行首，同 &amp;lt;Home&amp;gt; CTRL+B # 向后移动，同 &amp;lt;Left&amp;gt; CTRL+C # 结束当前命令 CTRL+D # 删除光标前的字符，同 &amp;lt;Delete&amp;gt; ，或者没有内容时，退出会话 CTRL+E # 移动到行末，同 &amp;lt;End&amp;gt; CTRL+F # 向前移动，同 &amp;lt;Right&amp;gt; CTRL+G # 退出当前编辑（比如正在 CTRL+R 搜索历史时） CTRL+H # 删除光标左边的字符，同 &amp;lt;Backspace&amp;gt; CTRL+K # 删除光标位置到行末的内容 CTRL+L # 清屏并重新显示 CTRL+N # 移动到命令历史的下一行，同 &amp;lt;Down&amp;gt; CTRL+O # 类似回车，但是会显示下一行历史 CTRL+P # 移动到命令历史的上一行，同 &amp;lt;Up&amp;gt; CTRL+R # 历史命令反向搜索，使用 CTRL+G 退出搜索 CTRL+S # 历史命令正向搜索，使用 CTRL+G 退出搜索 CTRL+T # 交换前后两个字符 CTRL+U # 删除字符到行首 CTRL+V # 输入字符字面量，先按 CTRL+V 再按任意键 CTRL+W # 删除光标左边的一个单词 CTRL+X # 列出可能的补全 CTRL+Y # 粘贴前面 CTRL+u/k/w 删除过的内容 CTRL+Z # 暂停前台进程返回 bash，需要时可用 fg 将其切换回前台 CTRL+_ # 撤销（undo），有的终端将 CTRL+_ 映射为 CTRL+/ 或 CTRL+7 ALT+b # 向后（左边）移动一个单词 ALT+d # 删除光标后（右边）一个单词 ALT+f # 向前（右边）移动一个单词 ALT+t # 交换字符 ALT+BACKSPACE # 删除光标前面一个单词，类似 CTRL+W，但不影响剪贴板 CTRL+X CTRL+X # 连续按两次 CTRL+X，光标在当前位置和行首来回跳转 CTRL+X CTRL+E # 用你指定的编辑器，编辑当前命令 ############################################################################## # BASH 基本操作 ############################################################################## exit # 退出当前登陆 env # 显示环境变量 echo $SHELL # 显示你在使用什么 SHELL bash # 使用 bash，用 exit 返回 which bash # 搜索 $PATH，查找哪个程序对应命令 bash whereis bash # 搜索可执行，头文件和帮助信息的位置，使用系统内建数据库 whatis bash # 查看某个命令的解释，一句话告诉你这是干什么的 clear # 清初屏幕内容 reset # 重置终端（当你不小心 cat 了一个二进制，终端状态乱掉时使用） ############################################################################## # 目录操作 ############################################################################## cd # 返回自己 $HOME 目录 cd {dirname} # 进入目录 pwd # 显示当前所在目录 mkdir {dirname} # 创建目录 mkdir -p {dirname} # 递归创建目录 pushd {dirname} # 目录压栈并进入新目录 popd # 弹出并进入栈顶的目录 dirs -v # 列出当前目录栈 cd - # 回到之前的目录 cd -{N} # 切换到目录栈中的第 N个目录，比如 cd -2 将切换到第二个 ############################################################################## # 文件操作 ############################################################################## ls # 显示当前目录内容，后面可接目录名：ls {dir} 显示指定目录 ls -l # 列表方式显示目录内容，包括文件日期，大小，权限等信息 ls -1 # 列表方式显示目录内容，只显示文件名称，减号后面是数字 1 ls -a # 显示所有文件和目录，包括隐藏文件（.</description><content>&lt;h2 id="bash">Bash&lt;/h2>
&lt;p>BASH CHEATSHEET (中文速查表) - by skywind (created on 2018/02/14)
Version: 47, Last Modified: 2019/09/24 17:58
&lt;a href="https://github.com/skywind3000/awesome-cheatsheets">https://github.com/skywind3000/awesome-cheatsheets&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 常用快捷键（默认使用 Emacs 键位）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+A &lt;span style="color:#75715e"># 移动到行首，同 &amp;lt;Home&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+B &lt;span style="color:#75715e"># 向后移动，同 &amp;lt;Left&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+C &lt;span style="color:#75715e"># 结束当前命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+D &lt;span style="color:#75715e"># 删除光标前的字符，同 &amp;lt;Delete&amp;gt; ，或者没有内容时，退出会话&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+E &lt;span style="color:#75715e"># 移动到行末，同 &amp;lt;End&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+F &lt;span style="color:#75715e"># 向前移动，同 &amp;lt;Right&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+G &lt;span style="color:#75715e"># 退出当前编辑（比如正在 CTRL+R 搜索历史时）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+H &lt;span style="color:#75715e"># 删除光标左边的字符，同 &amp;lt;Backspace&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+K &lt;span style="color:#75715e"># 删除光标位置到行末的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+L &lt;span style="color:#75715e"># 清屏并重新显示&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+N &lt;span style="color:#75715e"># 移动到命令历史的下一行，同 &amp;lt;Down&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+O &lt;span style="color:#75715e"># 类似回车，但是会显示下一行历史&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+P &lt;span style="color:#75715e"># 移动到命令历史的上一行，同 &amp;lt;Up&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+R &lt;span style="color:#75715e"># 历史命令反向搜索，使用 CTRL+G 退出搜索&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+S &lt;span style="color:#75715e"># 历史命令正向搜索，使用 CTRL+G 退出搜索&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+T &lt;span style="color:#75715e"># 交换前后两个字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+U &lt;span style="color:#75715e"># 删除字符到行首&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+V &lt;span style="color:#75715e"># 输入字符字面量，先按 CTRL+V 再按任意键&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+W &lt;span style="color:#75715e"># 删除光标左边的一个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+X &lt;span style="color:#75715e"># 列出可能的补全&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+Y &lt;span style="color:#75715e"># 粘贴前面 CTRL+u/k/w 删除过的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+Z &lt;span style="color:#75715e"># 暂停前台进程返回 bash，需要时可用 fg 将其切换回前台&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+_ &lt;span style="color:#75715e"># 撤销（undo），有的终端将 CTRL+_ 映射为 CTRL+/ 或 CTRL+7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ALT+b &lt;span style="color:#75715e"># 向后（左边）移动一个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ALT+d &lt;span style="color:#75715e"># 删除光标后（右边）一个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ALT+f &lt;span style="color:#75715e"># 向前（右边）移动一个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ALT+t &lt;span style="color:#75715e"># 交换字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ALT+BACKSPACE &lt;span style="color:#75715e"># 删除光标前面一个单词，类似 CTRL+W，但不影响剪贴板&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+X CTRL+X &lt;span style="color:#75715e"># 连续按两次 CTRL+X，光标在当前位置和行首来回跳转 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CTRL+X CTRL+E &lt;span style="color:#75715e"># 用你指定的编辑器，编辑当前命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># BASH 基本操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit &lt;span style="color:#75715e"># 退出当前登陆&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>env &lt;span style="color:#75715e"># 显示环境变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $SHELL &lt;span style="color:#75715e"># 显示你在使用什么 SHELL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bash &lt;span style="color:#75715e"># 使用 bash，用 exit 返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>which bash &lt;span style="color:#75715e"># 搜索 $PATH，查找哪个程序对应命令 bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>whereis bash &lt;span style="color:#75715e"># 搜索可执行，头文件和帮助信息的位置，使用系统内建数据库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>whatis bash &lt;span style="color:#75715e"># 查看某个命令的解释，一句话告诉你这是干什么的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clear &lt;span style="color:#75715e"># 清初屏幕内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reset &lt;span style="color:#75715e"># 重置终端（当你不小心 cat 了一个二进制，终端状态乱掉时使用）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 目录操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd &lt;span style="color:#75715e"># 返回自己 $HOME 目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd &lt;span style="color:#f92672">{&lt;/span>dirname&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 进入目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pwd &lt;span style="color:#75715e"># 显示当前所在目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir &lt;span style="color:#f92672">{&lt;/span>dirname&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 创建目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#f92672">{&lt;/span>dirname&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 递归创建目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pushd &lt;span style="color:#f92672">{&lt;/span>dirname&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 目录压栈并进入新目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>popd &lt;span style="color:#75715e"># 弹出并进入栈顶的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dirs -v &lt;span style="color:#75715e"># 列出当前目录栈&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd - &lt;span style="color:#75715e"># 回到之前的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd -&lt;span style="color:#f92672">{&lt;/span>N&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 切换到目录栈中的第 N个目录，比如 cd -2 将切换到第二个&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 文件操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls &lt;span style="color:#75715e"># 显示当前目录内容，后面可接目录名：ls {dir} 显示指定目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls -l &lt;span style="color:#75715e"># 列表方式显示目录内容，包括文件日期，大小，权限等信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls -1 &lt;span style="color:#75715e"># 列表方式显示目录内容，只显示文件名称，减号后面是数字 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls -a &lt;span style="color:#75715e"># 显示所有文件和目录，包括隐藏文件（.开头的文件/目录名）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span>link&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 给指定文件创建一个软链接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp &lt;span style="color:#f92672">{&lt;/span>src&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span>dest&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 拷贝文件，cp -r dir1 dir2 可以递归拷贝（目录）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 删除文件，rm -r 递归删除目录，rm -f 强制删除&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv &lt;span style="color:#f92672">{&lt;/span>src&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span>dest&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 移动文件，如果 dest 是目录，则移动，是文件名则覆盖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 创建或者更新一下制定文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 输出文件原始内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>any_cmd &amp;gt; &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 执行任意命令并将标准输出重定向到指定文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>more &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 逐屏显示某文件内容，空格翻页，q 退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>less &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 更高级点的 more，更多操作，q 退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>head &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 显示文件头部数行，可用 head -3 abc.txt 显示头三行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tail &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 显示文件尾部数行，可用 tail -3 abc.txt 显示尾部三行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tail -f &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 持续显示文件尾部数据，可用于监控日志&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nano &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 使用 nano 编辑器编辑文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 使用 vim 编辑文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diff &lt;span style="color:#f92672">{&lt;/span>f1&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span>f2&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 比较两个文件的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wc &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 统计文件有多少行，多少个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">644&lt;/span> &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 修改文件权限为 644，可以接 -R 对目录循环改权限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chgrp group &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 修改文件所属的用户组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown user1 &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 修改文件所有人为 user1, chown user1:group1 fn 可以修改组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>file &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 检测文件的类型和编码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>basename &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看文件的名字（不包括路径）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dirname &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看文件的路径（不包括名字）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>grep &lt;span style="color:#f92672">{&lt;/span>pat&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 在文件中查找出现过 pat 的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>grep -r &lt;span style="color:#f92672">{&lt;/span>pat&lt;span style="color:#f92672">}&lt;/span> . &lt;span style="color:#75715e"># 在当前目录下递归查找所有出现过 pat 的文件内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stat &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 显示文件的详细信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 用户管理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>whoami &lt;span style="color:#75715e"># 显示我的用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>who &lt;span style="color:#75715e"># 显示已登陆用户信息，w / who / users 内容略有不同&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>w &lt;span style="color:#75715e"># 显示已登陆用户信息，w / who / users 内容略有不同&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>users &lt;span style="color:#75715e"># 显示已登陆用户信息，w / who / users 内容略有不同&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>passwd &lt;span style="color:#75715e"># 修改密码，passwd {user} 可以用于 root 修改别人密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>finger &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 显示某用户信息，包括 id, 名字, 登陆状态等&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adduser &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 添加用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deluser &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 删除用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>w &lt;span style="color:#75715e"># 查看谁在线&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>su &lt;span style="color:#75715e"># 切换到 root 用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>su - &lt;span style="color:#75715e"># 切换到 root 用户并登陆（执行登陆脚本）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>su &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 切换到某用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>su -&lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 切换到某用户并登陆（执行登陆脚本）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看用户的 uid，gid 以及所属其他用户组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id -u &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 打印用户 uid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id -g &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 打印用户 gid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>write &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 向某用户发送一句消息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>last &lt;span style="color:#75715e"># 显示最近用户登陆列表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>last &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 显示登陆记录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lastb &lt;span style="color:#75715e"># 显示失败登陆记录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lastlog &lt;span style="color:#75715e"># 显示所有用户的最近登陆记录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo &lt;span style="color:#f92672">{&lt;/span>command&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 以 root 权限执行某命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 进程管理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps &lt;span style="color:#75715e"># 查看当前会话进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps ax &lt;span style="color:#75715e"># 查看所有进程，类似 ps -e&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps aux &lt;span style="color:#75715e"># 查看所有进程详细信息，类似 ps -ef&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps auxww &lt;span style="color:#75715e"># 查看所有进程，并且显示进程的完整启动命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps -u &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看某用户进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps axjf &lt;span style="color:#75715e"># 列出进程树&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps xjf -u &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 列出某用户的进程树&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps -eo pid,user,command &lt;span style="color:#75715e"># 按用户指定的格式查看进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps aux | grep httpd &lt;span style="color:#75715e"># 查看名为 httpd 的所有进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps --ppid &lt;span style="color:#f92672">{&lt;/span>pid&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看父进程为 pid 的所有进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pstree &lt;span style="color:#75715e"># 树形列出所有进程，pstree 默认一般不带，需安装&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pstree &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 进程树列出某用户的进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pstree -u &lt;span style="color:#75715e"># 树形列出所有进程以及所属用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pgrep &lt;span style="color:#f92672">{&lt;/span>procname&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 搜索名字匹配的进程的 pid，比如 pgrep apache2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kill &lt;span style="color:#f92672">{&lt;/span>pid&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 结束进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kill -9 &lt;span style="color:#f92672">{&lt;/span>pid&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 强制结束进程，9/SIGKILL 是强制不可捕获结束信号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kill -KILL &lt;span style="color:#f92672">{&lt;/span>pid&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 强制执行进程，kill -9 的另外一种写法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kill -l &lt;span style="color:#75715e"># 查看所有信号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kill -l TERM &lt;span style="color:#75715e"># 查看 TERM 信号的编号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>killall &lt;span style="color:#f92672">{&lt;/span>procname&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 按名称结束所有进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pkill &lt;span style="color:#f92672">{&lt;/span>procname&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 按名称结束进程，除名称外还可以有其他参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>top &lt;span style="color:#75715e"># 查看最活跃的进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>top -u &lt;span style="color:#f92672">{&lt;/span>user&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看某用户最活跃的进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>any_command &amp;amp; &lt;span style="color:#75715e"># 在后台运行某命令，也可用 CTRL+Z 将当前进程挂到后台&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jobs &lt;span style="color:#75715e"># 查看所有后台进程（jobs）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bg &lt;span style="color:#75715e"># 查看后台进程，并切换过去&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fg &lt;span style="color:#75715e"># 切换后台进程到前台&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fg &lt;span style="color:#f92672">{&lt;/span>job&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 切换特定后台进程到前台&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trap cmd sig1 sig2 &lt;span style="color:#75715e"># 在脚本中设置信号处理命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trap &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> sig1 sig2 &lt;span style="color:#75715e"># 在脚本中屏蔽某信号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trap - sig1 sig2 &lt;span style="color:#75715e"># 恢复默认信号处理行为&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup &lt;span style="color:#f92672">{&lt;/span>command&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 长期运行某程序，在你退出登陆都保持它运行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup &lt;span style="color:#f92672">{&lt;/span>command&lt;span style="color:#f92672">}&lt;/span> &amp;amp; &lt;span style="color:#75715e"># 在后台长期运行某程序&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>disown &lt;span style="color:#f92672">{&lt;/span>PID|JID&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 将进程从后台任务列表（jobs）移除&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wait &lt;span style="color:#75715e"># 等待所有后台进程任务结束&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 常用命令：SSH / 系统信息 / 网络&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh user@host &lt;span style="color:#75715e"># 以用户 user 登陆到远程主机 host&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh -p &lt;span style="color:#f92672">{&lt;/span>port&lt;span style="color:#f92672">}&lt;/span> user@host &lt;span style="color:#75715e"># 指定端口登陆主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh-copy-id user@host &lt;span style="color:#75715e"># 拷贝你的 ssh key 到远程主机，避免重复输入密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scp &lt;span style="color:#f92672">{&lt;/span>fn&lt;span style="color:#f92672">}&lt;/span> user@host:path &lt;span style="color:#75715e"># 拷贝文件到远程主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scp user@host:path dest &lt;span style="color:#75715e"># 从远程主机拷贝文件回来&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scp -P &lt;span style="color:#f92672">{&lt;/span>port&lt;span style="color:#f92672">}&lt;/span> ... &lt;span style="color:#75715e"># 指定端口远程拷贝文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uname -a &lt;span style="color:#75715e"># 查看内核版本等信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>man &lt;span style="color:#f92672">{&lt;/span>help&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看帮助&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>man -k &lt;span style="color:#f92672">{&lt;/span>keyword&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看哪些帮助文档里包含了该关键字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>info &lt;span style="color:#f92672">{&lt;/span>help&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看 info pages，比 man 更强的帮助系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uptime &lt;span style="color:#75715e"># 查看系统启动时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date &lt;span style="color:#75715e"># 显示日期&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cal &lt;span style="color:#75715e"># 显示日历&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vmstat &lt;span style="color:#75715e"># 显示内存和 CPU 使用情况&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vmstat &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#75715e"># 每 10 秒打印一行内存和 CPU情况，CTRL+C 退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>free &lt;span style="color:#75715e"># 显示内存和交换区使用情况&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>df &lt;span style="color:#75715e"># 显示磁盘使用情况&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>du &lt;span style="color:#75715e"># 显示当前目录占用，du . --max-depth=2 可以指定深度&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uname &lt;span style="color:#75715e"># 显示系统版本号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hostname &lt;span style="color:#75715e"># 显示主机名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>showkey -a &lt;span style="color:#75715e"># 查看终端发送的按键编码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ping &lt;span style="color:#f92672">{&lt;/span>host&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># ping 远程主机并显示结果，CTRL+C 退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ping -c N &lt;span style="color:#f92672">{&lt;/span>host&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># ping 远程主机 N 次&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>traceroute &lt;span style="color:#f92672">{&lt;/span>host&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 侦测路由连通情况&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mtr &lt;span style="color:#f92672">{&lt;/span>host&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 高级版本 traceroute&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>host &lt;span style="color:#f92672">{&lt;/span>domain&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># DNS 查询，{domain} 前面可加 -a 查看详细信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>whois &lt;span style="color:#f92672">{&lt;/span>domain&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 取得域名 whois 信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dig &lt;span style="color:#f92672">{&lt;/span>domain&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 取得域名 dns 信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>route -n &lt;span style="color:#75715e"># 查看路由表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -a &lt;span style="color:#75715e"># 列出所有端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -an &lt;span style="color:#75715e"># 查看所有连接信息，不解析域名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -anp &lt;span style="color:#75715e"># 查看所有连接信息，包含进程信息（需要 sudo）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -l &lt;span style="color:#75715e"># 查看所有监听的端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -t &lt;span style="color:#75715e"># 查看所有 TCP 链接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -lntu &lt;span style="color:#75715e"># 显示所有正在监听的 TCP 和 UDP 信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -lntup &lt;span style="color:#75715e"># 显示所有正在监听的 socket 及进程信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -i &lt;span style="color:#75715e"># 显示网卡信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -rn &lt;span style="color:#75715e"># 显示当前系统路由表，同 route -n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ss -an &lt;span style="color:#75715e"># 比 netstat -an 更快速更详细&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ss -s &lt;span style="color:#75715e"># 统计 TCP 的 established, wait 等&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget &lt;span style="color:#f92672">{&lt;/span>url&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 下载文件，可加 --no-check-certificate 忽略 ssl 验证&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -qO- &lt;span style="color:#f92672">{&lt;/span>url&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 下载文件并输出到标准输出（不保存）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -sL &lt;span style="color:#f92672">{&lt;/span>url&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 同 wget -qO- {url} 没有 wget 的时候使用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sz &lt;span style="color:#f92672">{&lt;/span>file&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 发送文件到终端，zmodem 协议&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rz &lt;span style="color:#75715e"># 接收终端发送过来的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 变量操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>varname&lt;span style="color:#f92672">=&lt;/span>value &lt;span style="color:#75715e"># 定义变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>varname&lt;span style="color:#f92672">=&lt;/span>value command &lt;span style="color:#75715e"># 定义子进程变量并执行子进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $varname &lt;span style="color:#75715e"># 查看变量内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $$ &lt;span style="color:#75715e"># 查看当前 shell 的进程号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $! &lt;span style="color:#75715e"># 查看最近调用的后台任务进程号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $? &lt;span style="color:#75715e"># 查看最近一条命令的返回码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export VARNAME&lt;span style="color:#f92672">=&lt;/span>value &lt;span style="color:#75715e"># 设置环境变量（将会影响到子进程）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>array&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]=&lt;/span>valA &lt;span style="color:#75715e"># 定义数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>array&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">]=&lt;/span>valB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>array&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">]=&lt;/span>valC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>array&lt;span style="color:#f92672">=([&lt;/span>0&lt;span style="color:#f92672">]=&lt;/span>valA &lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">]=&lt;/span>valB &lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">]=&lt;/span>valC&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 另一种方式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>array&lt;span style="color:#f92672">=(&lt;/span>valA valB valC&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 另一种方式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>array[i]&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 取得数组中的元素&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${#&lt;/span>array[@]&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 取得数组的长度&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${#&lt;/span>array[i]&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 取得数组中某个变量的长度&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>declare -a &lt;span style="color:#75715e"># 查看所有数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>declare -f &lt;span style="color:#75715e"># 查看所有函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>declare -F &lt;span style="color:#75715e"># 查看所有函数，仅显示函数名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>declare -i &lt;span style="color:#75715e"># 查看所有整数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>declare -r &lt;span style="color:#75715e"># 查看所有只读变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>declare -x &lt;span style="color:#75715e"># 查看所有被导出成环境变量的东西&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>declare -p varname &lt;span style="color:#75715e"># 输出变量是怎么定义的（类型+值）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>varname&lt;span style="color:#66d9ef">:-&lt;/span>word&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 如果变量不为空则返回变量，否则返回 word&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>varname:=word&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 如果变量不为空则返回变量，否则赋值成 word 并返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>varname:?message&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 如果变量不为空则返回变量，否则打印错误信息并退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>varname:+word&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 如果变量不为空则返回 word，否则返回 null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>varname:offset:len&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 取得字符串的子字符串&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>variable#pattern&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 如果变量头部匹配 pattern，则删除最小匹配部分返回剩下的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>variable##pattern&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 如果变量头部匹配 pattern，则删除最大匹配部分返回剩下的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>variable%pattern&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 如果变量尾部匹配 pattern，则删除最小匹配部分返回剩下的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>variable%%pattern&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 如果变量尾部匹配 pattern，则删除最大匹配部分返回剩下的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>variable/pattern/str&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 将变量中第一个匹配 pattern 的替换成 str，并返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${&lt;/span>variable//pattern/str&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 将变量中所有匹配 pattern 的地方替换成 str 并返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">${#&lt;/span>varname&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 返回字符串长度&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*&lt;span style="color:#f92672">(&lt;/span>patternlist&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 零次或者多次匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+&lt;span style="color:#f92672">(&lt;/span>patternlist&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 一次或者多次匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>?&lt;span style="color:#f92672">(&lt;/span>patternlist&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 零次或者一次匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@&lt;span style="color:#f92672">(&lt;/span>patternlist&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 单词匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!&lt;span style="color:#f92672">(&lt;/span>patternlist&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 不匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>array&lt;span style="color:#f92672">=(&lt;/span>$text&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 按空格分隔 text 成数组，并赋值给变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IFS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> array&lt;span style="color:#f92672">=(&lt;/span>$text&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 按斜杆分隔字符串 text 成数组，并赋值给变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>text&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>array[*]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 用空格链接数组并赋值给变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>text&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>IFS&lt;span style="color:#f92672">=&lt;/span>/; echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>array[*]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#75715e"># 用斜杠链接数组并赋值给变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>A&lt;span style="color:#f92672">=(&lt;/span> foo bar &lt;span style="color:#e6db74">&amp;#34;a b c&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">42&lt;/span> &lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 数组定义&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>B&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>A[@]:1:2&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 数组切片：B=( bar &amp;#34;a b c&amp;#34; )&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>C&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>A[@]:1&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 数组切片：C=( bar &amp;#34;a b c&amp;#34; 42 )&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>B[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#75715e"># bar a b c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>B[1]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#75715e"># a b c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>C[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#75715e"># bar a b c 42&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>C[@]: -2:2&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#75715e"># a b c 42 减号前的空格是必须的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">$(&lt;/span>UNIX command&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#75715e"># 运行命令，并将标准输出内容捕获并返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>varname&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>id -u user&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#75715e"># 将用户名为 user 的 uid 赋值给 varname 变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>expr &lt;span style="color:#ae81ff">1&lt;/span> + 2&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#75715e"># 兼容 posix sh 的计算，使用 expr 命令计算结果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>expr $num + 1&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#75715e"># 数字自增&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>expr &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">\*&lt;/span> &lt;span style="color:#ae81ff">\(&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> + &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#ae81ff">\)&lt;/span> &lt;span style="color:#75715e"># 兼容 posix sh 的复杂计算，输出 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$((&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#66d9ef">))&lt;/span> &lt;span style="color:#75715e"># 计算 1+2 赋值给 num，使用 bash 独有的 $((..)) 计算&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$((&lt;/span>$num &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">))&lt;/span> &lt;span style="color:#75715e"># 变量递增&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$((&lt;/span>num &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">))&lt;/span> &lt;span style="color:#75715e"># 变量递增，双括号内的 $ 可以省略&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$((&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#66d9ef">))&lt;/span> &lt;span style="color:#75715e"># 复杂计算&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 事件指示符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!! &lt;span style="color:#75715e"># 上一条命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!^ &lt;span style="color:#75715e"># 上一条命令的第一个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!:n &lt;span style="color:#75715e"># 上一条命令的第n个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!:n-$ &lt;span style="color:#75715e"># 上一条命令的第n个单词到最后一个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!$ &lt;span style="color:#75715e"># 上一条命令的最后一个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!-n:$ &lt;span style="color:#75715e"># 上n条命令的最后一个单词&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!string &lt;span style="color:#75715e"># 最近一条包含string的命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!^string1^string2 &lt;span style="color:#75715e"># 最近一条包含string1的命令, 快速替换string1为string2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!# &lt;span style="color:#75715e"># 本条命令之前所有的输入内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>!#:n &lt;span style="color:#75715e"># 本条命令之前的第n个单词, 快速备份cp /etc/passwd !#:1.bak&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 定义一个新函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> myfunc&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># $1 代表第一个参数，$N 代表第 N 个参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># $# 代表参数个数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># $0 代表被调用者自身的名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># $@ 代表所有参数，类型是个数组，想传递所有参数给其他命令用 cmd &amp;#34;$@&amp;#34; &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># $* 空格链接起来的所有参数，类型是字符串&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span>shell commands ...&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myfunc &lt;span style="color:#75715e"># 调用函数 myfunc &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myfunc arg1 arg2 arg3 &lt;span style="color:#75715e"># 带参数的函数调用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myfunc &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$@&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 将所有参数传递给函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myfunc &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>array[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 将一个数组当作多个参数传递给函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shift &lt;span style="color:#75715e"># 参数左移&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unset -f myfunc &lt;span style="color:#75715e"># 删除函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>declare -f &lt;span style="color:#75715e"># 列出函数定义&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 条件判断（兼容 posix sh 的条件判断）：man test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>statement1 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> statement2 &lt;span style="color:#75715e"># and 操作符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>statement1 &lt;span style="color:#f92672">||&lt;/span> statement2 &lt;span style="color:#75715e"># or 操作符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exp1 -a exp2 &lt;span style="color:#75715e"># exp1 和 exp2 同时为真时返回真（POSIX XSI扩展）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exp1 -o exp2 &lt;span style="color:#75715e"># exp1 和 exp2 有一个为真就返回真（POSIX XSI扩展）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span> expression &lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 如果 expression 为真时返回真，输入注意括号前反斜杆&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>! expression &lt;span style="color:#75715e"># 如果 expression 为假那返回真&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>str1 &lt;span style="color:#f92672">=&lt;/span> str2 &lt;span style="color:#75715e"># 判断字符串相等，如 [ &amp;#34;$x&amp;#34; = &amp;#34;$y&amp;#34; ] &amp;amp;&amp;amp; echo yes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>str1 !&lt;span style="color:#f92672">=&lt;/span> str2 &lt;span style="color:#75715e"># 判断字符串不等，如 [ &amp;#34;$x&amp;#34; != &amp;#34;$y&amp;#34; ] &amp;amp;&amp;amp; echo yes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>str1 &amp;lt; str2 &lt;span style="color:#75715e"># 字符串小于，如 [ &amp;#34;$x&amp;#34; \&amp;lt; &amp;#34;$y&amp;#34; ] &amp;amp;&amp;amp; echo yes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>str2 &amp;gt; str2 &lt;span style="color:#75715e"># 字符串大于，注意 &amp;lt; 或 &amp;gt; 是字面量，输入时要加反斜杆&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-n str1 &lt;span style="color:#75715e"># 判断字符串不为空（长度大于零）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-z str1 &lt;span style="color:#75715e"># 判断字符串为空（长度等于零）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-a file &lt;span style="color:#75715e"># 判断文件存在，如 [ -a /tmp/abc ] &amp;amp;&amp;amp; echo &amp;#34;exists&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-d file &lt;span style="color:#75715e"># 判断文件存在，且该文件是一个目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-e file &lt;span style="color:#75715e"># 判断文件存在，和 -a 等价&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-f file &lt;span style="color:#75715e"># 判断文件存在，且该文件是一个普通文件（非目录等）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r file &lt;span style="color:#75715e"># 判断文件存在，且可读&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-s file &lt;span style="color:#75715e"># 判断文件存在，且尺寸大于0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-w file &lt;span style="color:#75715e"># 判断文件存在，且可写&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-x file &lt;span style="color:#75715e"># 判断文件存在，且执行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-N file &lt;span style="color:#75715e"># 文件上次修改过后还没有读取过&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-O file &lt;span style="color:#75715e"># 文件存在且属于当前用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-G file &lt;span style="color:#75715e"># 文件存在且匹配你的用户组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>file1 -nt file2 &lt;span style="color:#75715e"># 文件1 比 文件2 新&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>file1 -ot file2 &lt;span style="color:#75715e"># 文件1 比 文件2 旧&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num1 -eq num2 &lt;span style="color:#75715e"># 数字判断：num1 == num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num1 -ne num2 &lt;span style="color:#75715e"># 数字判断：num1 != num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num1 -lt num2 &lt;span style="color:#75715e"># 数字判断：num1 &amp;lt; num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num1 -le num2 &lt;span style="color:#75715e"># 数字判断：num1 &amp;lt;= num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num1 -gt num2 &lt;span style="color:#75715e"># 数字判断：num1 &amp;gt; num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num1 -ge num2 &lt;span style="color:#75715e"># 数字判断：num1 &amp;gt;= num2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 分支控制：if 和经典 test，兼容 posix sh 的条件判断语句&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test &lt;span style="color:#f92672">{&lt;/span>expression&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 判断条件为真的话 test 程序返回0 否则非零&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> expression &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#75715e"># 判断条件为真的话返回0 否则非零&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test &lt;span style="color:#e6db74">&amp;#34;abc&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;def&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 查看返回值 echo $? 显示 1，因为条件为假&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test &lt;span style="color:#e6db74">&amp;#34;abc&amp;#34;&lt;/span> !&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;def&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 查看返回值 echo $? 显示 0，因为条件为真&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test -a /tmp; echo $? &lt;span style="color:#75715e"># 调用 test 判断 /tmp 是否存在，并打印 test 的返回值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> -a /tmp &lt;span style="color:#f92672">]&lt;/span>; echo $? &lt;span style="color:#75715e"># 和上面完全等价，/tmp 肯定是存在的，所以输出是 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test cond &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cmd1 &lt;span style="color:#75715e"># 判断条件为真时执行 cmd1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> cond &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cmd1 &lt;span style="color:#75715e"># 和上面完全等价&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> cond &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cmd1 &lt;span style="color:#f92672">||&lt;/span> cmd2 &lt;span style="color:#75715e"># 条件为真执行 cmd1 否则执行 cmd2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 判断 /etc/passwd 文件是否存在&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 经典的 if 语句就是判断后面的命令返回值为0的话，认为条件为真，否则为假&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> test -e /etc/passwd; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;alright it exists ... &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;it doesn&amp;#39;t exist ... &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 和上面完全等价，[ 是个和 test 一样的可执行程序，但最后一个参数必须为 ]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这个名字为 &amp;#34;[&amp;#34; 的可执行程序一般就在 /bin 或 /usr/bin 下面，比 test 优雅些&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -e /etc/passwd &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;alright it exists ... &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;it doesn&amp;#39;t exist ... &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 和上面两个完全等价，其实到 bash 时代 [ 已经是内部命令了，用 enable 可以看到&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> -e /etc/passwd &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;alright it exists&amp;#34;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;it doesn&amp;#39;t exist&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 判断变量的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$varname&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;foo&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;this is foo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">elif&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$varname&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bar&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;this is bar&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;neither&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 复杂条件判断，注意 || 和 &amp;amp;&amp;amp; 是完全兼容 POSIX 的推荐写法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $x -gt &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $x -lt &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;yes, between 10 and 20&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 可以用 &amp;amp;&amp;amp; 命令连接符来做和上面完全等价的事情&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> $x -gt &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $x -lt &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;yes, between 10 and 20&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 小括号和 -a -o 是 POSIX XSI 扩展写法，小括号是字面量，输入时前面要加反斜杆&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#ae81ff">\(&lt;/span> $x -gt &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">\)&lt;/span> -a &lt;span style="color:#ae81ff">\(&lt;/span> $x -lt &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">\)&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;yes, between 10 and 20&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 同样可以用 &amp;amp;&amp;amp; 命令连接符来做和上面完全等价的事情&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#ae81ff">\(&lt;/span> $x -gt &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">\)&lt;/span> -a &lt;span style="color:#ae81ff">\(&lt;/span> $x -lt &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">\)&lt;/span> &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;yes, between 10 and 20&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 判断程序存在的话就执行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> -x /bin/ls &lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> /bin/ls -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果不考虑兼容 posix sh 和 dash 这些的话，可用 bash 独有的 ((..)) 和 [[..]]:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://www.ibm.com/developerworks/library/l-bash-test/index.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 流程控制：while / for / case / until &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># while 循环&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> condition; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statements
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $i -le &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo $i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>expr $i + 1&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># for 循环：上面的 while 语句等价&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i in &lt;span style="color:#f92672">{&lt;/span>1..10&lt;span style="color:#f92672">}&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo $i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> name &lt;span style="color:#f92672">[&lt;/span>in list&lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statements
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># for 列举某目录下面的所有文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> f in /home/*; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo $f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># bash 独有的 (( .. )) 语句，更接近 C 语言，但是不兼容 posix sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">((&lt;/span> initialisation ; ending condition ; update &lt;span style="color:#f92672">))&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statements
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 和上面的写法等价&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">((&lt;/span>i &lt;span style="color:#f92672">=&lt;/span> 0; i &amp;lt; 10; i++&lt;span style="color:#f92672">))&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span> echo $i; &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># case 判断&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">case&lt;/span> expression in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pattern1 &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statements ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pattern2 &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statements ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> otherwise ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># until 语句&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">until&lt;/span> condition; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statements
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># select 语句&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> name &lt;span style="color:#f92672">[&lt;/span>in list&lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statements that can use $name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 命令处理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>command ls &lt;span style="color:#75715e"># 忽略 alias 直接执行程序或者内建命令 ls&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builtin cd &lt;span style="color:#75715e"># 忽略 alias 直接运行内建的 cd 命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable &lt;span style="color:#75715e"># 列出所有 bash 内置命令，或禁止某命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>help &lt;span style="color:#f92672">{&lt;/span>builtin_command&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 查看内置命令的帮助（仅限 bash 内置命令）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eval $script &lt;span style="color:#75715e"># 对 script 变量中的字符串求值（执行）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 输出/输入 重定向&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cmd1 | cmd2 &lt;span style="color:#75715e"># 管道，cmd1 的标准输出接到 cmd2 的标准输入&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; file &lt;span style="color:#75715e"># 将文件内容重定向为命令的标准输入&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; file &lt;span style="color:#75715e"># 将命令的标准输出重定向到文件，会覆盖文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt; file &lt;span style="color:#75715e"># 将命令的标准输出重定向到文件，追加不覆盖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;| file &lt;span style="color:#75715e"># 强制输出到文件，即便设置过：set -o noclobber&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;gt;| file &lt;span style="color:#75715e"># 强制将文件描述符 n的输出重定向到文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&amp;gt; file &lt;span style="color:#75715e"># 同时使用该文件作为标准输入和标准输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;lt;&amp;gt; file &lt;span style="color:#75715e"># 同时使用文件作为文件描述符 n 的输出和输入&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;gt; file &lt;span style="color:#75715e"># 重定向文件描述符 n 的输出到文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;lt; file &lt;span style="color:#75715e"># 重定向文件描述符 n 的输入为文件内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;gt;&amp;amp; &lt;span style="color:#75715e"># 将标准输出 dup/合并 到文件描述符 n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;lt;&amp;amp; &lt;span style="color:#75715e"># 将标准输入 dump/合并 定向为描述符 n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;gt;&amp;amp;m &lt;span style="color:#75715e"># 文件描述符 n 被作为描述符 m 的副本，输出用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;lt;&amp;amp;m &lt;span style="color:#75715e"># 文件描述符 n 被作为描述符 m 的副本，输入用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;amp;&amp;gt;file &lt;span style="color:#75715e"># 将标准输出和标准错误重定向到文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&amp;amp;- &lt;span style="color:#75715e"># 关闭标准输入&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;amp;- &lt;span style="color:#75715e"># 关闭标准输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;gt;&amp;amp;- &lt;span style="color:#75715e"># 关闭作为输出的文件描述符 n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n&amp;lt;&amp;amp;- &lt;span style="color:#75715e"># 关闭作为输入的文件描述符 n&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diff &amp;lt;&lt;span style="color:#f92672">(&lt;/span>cmd1&lt;span style="color:#f92672">)&lt;/span> &amp;lt;&lt;span style="color:#f92672">(&lt;/span>cmd2&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 比较两个命令的输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 文本处理 - cut&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cut -c 1-16 &lt;span style="color:#75715e"># 截取每行头16个字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cut -c 1-16 file &lt;span style="color:#75715e"># 截取指定文件中每行头 16个字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cut -c3- &lt;span style="color:#75715e"># 截取每行从第三个字符开始到行末的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cut -d&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> -f5 &lt;span style="color:#75715e"># 截取用冒号分隔的第五列内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cut -d&lt;span style="color:#e6db74">&amp;#39;;&amp;#39;&lt;/span> -f2,10 &lt;span style="color:#75715e"># 截取用分号分隔的第二和第十列内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cut -d&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span> -f3-7 &lt;span style="color:#75715e"># 截取空格分隔的三到七列&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span> | cut -c1-3 &lt;span style="color:#75715e"># 显示 hel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;hello sir&amp;#34;&lt;/span> | cut -d&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span> -f2 &lt;span style="color:#75715e"># 显示 sir&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps | tr -s &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span> | cut -d &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span> -f 2,3,4 &lt;span style="color:#75715e"># cut 搭配 tr 压缩字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 文本处理 - awk / sed &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awk &lt;span style="color:#e6db74">&amp;#39;{print $5}&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 打印文件中以空格分隔的第五列&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awk -F &lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{print $5}&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 打印文件中以逗号分隔的第五列&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awk &lt;span style="color:#e6db74">&amp;#39;/str/ {print $2}&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 打印文件中包含 str 的所有行的第二列&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awk -F &lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{print $NF}&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 打印逗号分隔的文件中的每行最后一列 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awk &lt;span style="color:#e6db74">&amp;#39;{s+=$1} END {print s}&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 计算所有第一列的合&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awk &lt;span style="color:#e6db74">&amp;#39;NR%3==1&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 从第一行开始，每隔三行打印一行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed &lt;span style="color:#e6db74">&amp;#39;s/find/replace/&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 替换文件中首次出现的字符串并输出结果 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed &lt;span style="color:#e6db74">&amp;#39;10s/find/replace/&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 替换文件第 10 行内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed &lt;span style="color:#e6db74">&amp;#39;10,20s/find/replace/&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 替换文件中 10-20 行内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -r &lt;span style="color:#e6db74">&amp;#39;s/regex/replace/g&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 替换文件中所有出现的字符串&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;s/find/replace/g&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 替换文件中所有出现的字符并且覆盖文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;/find/i\newline&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 在文件的匹配文本前插入行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;/find/a\newline&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 在文件的匹配文本后插入行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed &lt;span style="color:#e6db74">&amp;#39;/line/s/find/replace/&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 先搜索行特征再执行替换&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -e &lt;span style="color:#e6db74">&amp;#39;s/f/r/&amp;#39;&lt;/span> -e &lt;span style="color:#e6db74">&amp;#39;s/f/r&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 执行多次替换&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed &lt;span style="color:#e6db74">&amp;#39;s#find#replace#&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 使用 # 替换 / 来避免 pattern 中有斜杆&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i -r &lt;span style="color:#e6db74">&amp;#39;s/^\s+//g&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 删除文件每行头部空格&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed &lt;span style="color:#e6db74">&amp;#39;/^$/d&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 删除文件空行并打印&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;s/\s\+$//&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 删除文件每行末尾多余空格&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -n &lt;span style="color:#e6db74">&amp;#39;2p&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 打印文件第二行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -n &lt;span style="color:#e6db74">&amp;#39;2,5p&amp;#39;&lt;/span> file &lt;span style="color:#75715e"># 打印文件第二到第五行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 排序 - sort&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sort file &lt;span style="color:#75715e"># 排序文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sort -r file &lt;span style="color:#75715e"># 反向排序（降序）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sort -n file &lt;span style="color:#75715e"># 使用数字而不是字符串进行比较&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sort -t: -k 3n /etc/passwd &lt;span style="color:#75715e"># 按 passwd 文件的第三列进行排序&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sort -u file &lt;span style="color:#75715e"># 去重排序&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 快速跳转 - https://github.com/rupa/z&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source /path/to/z.sh &lt;span style="color:#75715e"># .bashrc 中初始化 z.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>z &lt;span style="color:#75715e"># 列出所有历史路径以及他们的权重&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>z foo &lt;span style="color:#75715e"># 跳到历史路径中匹配 foo 的权重最大的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>z foo bar &lt;span style="color:#75715e"># 跳到历史路径中匹配 foo 和 bar 权重最大的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>z -l foo &lt;span style="color:#75715e"># 列出所有历史路径中匹配 foo 的目录及权重&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>z -r foo &lt;span style="color:#75715e"># 按照最高访问次数优先进行匹配跳转&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>z -t foo &lt;span style="color:#75715e"># 按照最近访问优先进行匹配跳转&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 键盘绑定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\eh&amp;#34;:&amp;#34;\C-b&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+h 为光标左移，同 CTRL+b / &amp;lt;Left&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\el&amp;#34;:&amp;#34;\C-f&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+l 为光标右移，同 CTRL+f / &amp;lt;Right&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\ej&amp;#34;:&amp;#34;\C-n&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+j 为下条历史，同 CTRL+n / &amp;lt;Down&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\ek&amp;#34;:&amp;#34;\C-p&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+k 为上条历史，同 CTRL+p / &amp;lt;Up&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\eH&amp;#34;:&amp;#34;\eb&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+H 为光标左移一个单词，同 ALT-b &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\eL&amp;#34;:&amp;#34;\ef&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+L 为光标右移一个单词，同 ALT-f &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\eJ&amp;#34;:&amp;#34;\C-a&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+J 为移动到行首，同 CTRL+a / &amp;lt;Home&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\eK&amp;#34;:&amp;#34;\C-e&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+K 为移动到行末，同 CTRL+e / &amp;lt;End&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\e;&amp;#34;:&amp;#34;ls -l\n&amp;#34;&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 绑定 ALT+; 为执行 ls -l 命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 网络管理：ip / ifconfig / nmap ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip a &lt;span style="color:#75715e"># 显示所有网络地址，同 ip address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip a show eth1 &lt;span style="color:#75715e"># 显示网卡 IP 地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip a add 172.16.1.23/24 dev eth1 &lt;span style="color:#75715e"># 添加网卡 IP 地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip a del 172.16.1.23/24 dev eth1 &lt;span style="color:#75715e"># 删除网卡 IP 地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip link show dev eth0 &lt;span style="color:#75715e"># 显示网卡设备属性&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip link set eth1 up &lt;span style="color:#75715e"># 激活网卡&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip link set eth1 down &lt;span style="color:#75715e"># 关闭网卡&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip link set eth1 address &lt;span style="color:#f92672">{&lt;/span>mac&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 修改 MAC 地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip neighbour &lt;span style="color:#75715e"># 查看 ARP 缓存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip route &lt;span style="color:#75715e"># 查看路由表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip route add 10.1.0.0/24 via 10.0.0.253 dev eth0 &lt;span style="color:#75715e"># 添加静态路由&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip route del 10.1.0.0/24 &lt;span style="color:#75715e"># 删除静态路由&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig &lt;span style="color:#75715e"># 显示所有网卡和接口信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig -a &lt;span style="color:#75715e"># 显示所有网卡（包括开机没启动的）信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig eth0 &lt;span style="color:#75715e"># 指定设备显示信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig eth0 up &lt;span style="color:#75715e"># 激活网卡&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig eth0 down &lt;span style="color:#75715e"># 关闭网卡&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig eth0 192.168.120.56 &lt;span style="color:#75715e"># 给网卡配置 IP 地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig eth0 10.0.0.8 netmask 255.255.255.0 up &lt;span style="color:#75715e"># 配置 IP 并启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ifconfig eth0 hw ether 00:aa:bb:cc:dd:ee &lt;span style="color:#75715e"># 修改 MAC 地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nmap 10.0.0.12 &lt;span style="color:#75715e"># 扫描主机 1-1000 端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nmap -p 1024-65535 10.0.0.12 &lt;span style="color:#75715e"># 扫描给定端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nmap 10.0.0.0/24 &lt;span style="color:#75715e"># 给定网段扫描局域网内所有主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nmap -O -sV 10.0.0.12 &lt;span style="color:#75715e"># 探测主机服务和操作系统版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 有趣的命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>man hier &lt;span style="color:#75715e"># 查看文件系统的结构和含义&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>man test &lt;span style="color:#75715e"># 查看 posix sh 的条件判断帮助&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>man ascii &lt;span style="color:#75715e"># 显示 ascii 表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>getconf LONG_BIT &lt;span style="color:#75715e"># 查看系统是 32 位还是 64 位&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind -P &lt;span style="color:#75715e"># 列出所有 bash 的快捷键&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount | column -t &lt;span style="color:#75715e"># 漂亮的列出当前加载的文件系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl ip.cn &lt;span style="color:#75715e"># 取得外网 ip 地址和服务商信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>disown -a &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> exit &lt;span style="color:#75715e"># 关闭所有后台任务并退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat /etc/issue &lt;span style="color:#75715e"># 查看 Linux 发行版信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lsof -i port:80 &lt;span style="color:#75715e"># 哪个程序在使用 80 端口？&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>showkey -a &lt;span style="color:#75715e"># 取得按键的 ASCII 码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>svn diff | view - &lt;span style="color:#75715e"># 使用 Vim 来显示带色彩的 diff 输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv filename.&lt;span style="color:#f92672">{&lt;/span>old,new&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 快速文件改名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time read &lt;span style="color:#75715e"># 使用 CTRL-D 停止，最简单的计时功能&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp file.txt&lt;span style="color:#f92672">{&lt;/span>,.bak&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># 快速备份文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo touch /forcefsck &lt;span style="color:#75715e"># 强制在下次重启时扫描磁盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>find ~ -mmin &lt;span style="color:#ae81ff">60&lt;/span> -type f &lt;span style="color:#75715e"># 查找 $HOME 目录中，60 分钟内修改过的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl wttr.in/~beijing &lt;span style="color:#75715e"># 查看北京的天气预报&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">${&lt;/span>SSH_CLIENT%% *&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#75715e"># 取得你是从什么 IP 链接到当前主机上的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $&lt;span style="color:#f92672">[&lt;/span>RANDOM%X+1&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#75715e"># 取得 1 到 X 之间的随机数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bind -x &lt;span style="color:#e6db74">&amp;#39;&amp;#34;\C-l&amp;#34;:ls -l&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 设置 CTRL+l 为执行 ls -l 命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>find / -type f -size +5M &lt;span style="color:#75715e"># 查找大于 5M 的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod --reference f1 f2 &lt;span style="color:#75715e"># 将 f2 的权限设置成 f1 一模一样的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -L cheat.sh &lt;span style="color:#75715e"># 速查表大全&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 常用技巧&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 列出最常使用的命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>history | awk &lt;span style="color:#e6db74">&amp;#39;{a[$2]++}END{for(i in a){print a[i] &amp;#34; &amp;#34; i}}&amp;#39;&lt;/span> | sort -rn | head
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 列出所有网络状态：ESTABLISHED / TIME_WAIT / FIN_WAIT1 / FIN_WAIT2 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netstat -n | awk &lt;span style="color:#e6db74">&amp;#39;/^tcp/ {++tt[$NF]} END {for (a in tt) print a, tt[a]}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 通过 SSH 来 mount 文件系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sshfs name@server:/path/to/folder /path/to/mount/point
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 显示前十个运行的进程并按内存使用量排序&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps aux | sort -nk +4 | tail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 在右上角显示时钟&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> sleep 1;&lt;span style="color:#66d9ef">do&lt;/span> tput sc;tput cup &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">$(($(&lt;/span>tput cols&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">29&lt;/span>&lt;span style="color:#66d9ef">))&lt;/span>;date;tput rc;&lt;span style="color:#66d9ef">done&lt;/span>&amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 从网络上的压缩文件中解出一个文件来，并避免保存中间文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -qO - &lt;span style="color:#e6db74">&amp;#34;http://www.tarball.com/tarball.gz&amp;#34;&lt;/span> | tar zxvf -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 性能测试：测试处理器性能&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python -c &lt;span style="color:#e6db74">&amp;#34;import test.pystone;print(test.pystone.pystones())&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 性能测试：测试内存带宽&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dd &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">=&lt;/span>/dev/zero of&lt;span style="color:#f92672">=&lt;/span>/dev/null bs&lt;span style="color:#f92672">=&lt;/span>1M count&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">32768&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Linux 下挂载一个 iso 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount /path/to/file.iso /mnt/cdrom -oloop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 通过主机 A 直接 ssh 到主机 B&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh -t hostA ssh hostB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 下载一个网站的所有图片&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -r -l1 --no-parent -nH -nd -P/tmp -A&lt;span style="color:#e6db74">&amp;#34;.gif,.jpg&amp;#34;&lt;/span> http://example.com/images
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 快速创建项目目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p work/&lt;span style="color:#f92672">{&lt;/span>project1,project2&lt;span style="color:#f92672">}&lt;/span>/&lt;span style="color:#f92672">{&lt;/span>src,bin,bak&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 按日期范围查找文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>find . -type f -newermt &lt;span style="color:#e6db74">&amp;#34;2010-01-01&amp;#34;&lt;/span> ! -newermt &lt;span style="color:#e6db74">&amp;#34;2010-06-01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 显示当前正在使用网络的进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lsof -P -i -n | cut -f &lt;span style="color:#ae81ff">1&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>| uniq | tail -n +2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Vim 中保存一个没有权限的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:w !sudo tee &amp;gt; /dev/null %
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 在 .bashrc / .bash_profile 中加载另外一个文件（比如你保存在 github 上的配置）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source ~/github/profiles/my_bash_init.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 反向代理：将外网主机（202.115.8.1）端口（8443）转发到内网主机 192.168.1.2:443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh -CqTnN -R 0.0.0.0:8443:192.168.1.2:443 user@202.115.8.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 正向代理：将本地主机的 8443 端口，通过 192.168.1.3 转发到 192.168.1.2:443 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh -CqTnN -L 0.0.0.0:8443:192.168.1.2:443 user@192.168.1.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># socks5 代理：把本地 1080 端口的 socks5 的代理请求通过远程主机转发出去&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh -CqTnN -D localhost:1080 user@202.115.8.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 终端下正确设置 ALT 键和 BackSpace 键&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://www.skywind.me/blog/archives/2021
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 有用的函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 自动解压：判断文件后缀名并调用相应解压命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> q-extract&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -f $1 &lt;span style="color:#f92672">]&lt;/span> ; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> $1 in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tar.bz2&lt;span style="color:#f92672">)&lt;/span> tar -xvjf $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tar.gz&lt;span style="color:#f92672">)&lt;/span> tar -xvzf $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tar.xz&lt;span style="color:#f92672">)&lt;/span> tar -xvJf $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.bz2&lt;span style="color:#f92672">)&lt;/span> bunzip2 $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.rar&lt;span style="color:#f92672">)&lt;/span> rar x $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.gz&lt;span style="color:#f92672">)&lt;/span> gunzip $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tar&lt;span style="color:#f92672">)&lt;/span> tar -xvf $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tbz2&lt;span style="color:#f92672">)&lt;/span> tar -xvjf $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tgz&lt;span style="color:#f92672">)&lt;/span> tar -xvzf $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.zip&lt;span style="color:#f92672">)&lt;/span> unzip $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.Z&lt;span style="color:#f92672">)&lt;/span> uncompress $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.7z&lt;span style="color:#f92672">)&lt;/span> 7z x $1 ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *&lt;span style="color:#f92672">)&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;don&amp;#39;t know how to extract &amp;#39;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#39;...&amp;#34;&lt;/span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#39; is not a valid file!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 自动压缩：判断后缀名并调用相应压缩程序&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> q-compress&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -n &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span> ; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FILE&lt;span style="color:#f92672">=&lt;/span>$1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> $FILE in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tar&lt;span style="color:#f92672">)&lt;/span> shift &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> tar -cf $FILE $* ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tar.bz2&lt;span style="color:#f92672">)&lt;/span> shift &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> tar -cjf $FILE $* ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tar.xz&lt;span style="color:#f92672">)&lt;/span> shift &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> tar -cJf $FILE $* ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tar.gz&lt;span style="color:#f92672">)&lt;/span> shift &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> tar -czf $FILE $* ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.tgz&lt;span style="color:#f92672">)&lt;/span> shift &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> tar -czf $FILE $* ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.zip&lt;span style="color:#f92672">)&lt;/span> shift &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> zip $FILE $* ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *.rar&lt;span style="color:#f92672">)&lt;/span> shift &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> rar $FILE $* ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;usage: q-compress &amp;lt;foo.tar.gz&amp;gt; ./foo ./bar&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 漂亮的带语法高亮的 color cat ，需要先 pip install pygments&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> ccat&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local style&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;monokai&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $# -eq &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pygmentize -P style&lt;span style="color:#f92672">=&lt;/span>$style -P tabsize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span> -f terminal256 -g
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> NAME in $@; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pygmentize -P style&lt;span style="color:#f92672">=&lt;/span>$style -P tabsize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span> -f terminal256 -g &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$NAME&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 好玩的配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 放到你的 ~/.bashrc 配置文件中，给 man 增加漂亮的色彩高亮&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_mb&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E[1m\E[32m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_mh&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E[2m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_mr&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E[7m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_md&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E[1m\E[36m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_ZW&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_us&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E[4m\E[1m\E[37m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_me&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E(B\E[m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_ue&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E[24m\E(B\E[m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_ZO&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_ZN&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_se&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E[27m\E(B\E[m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_ZV&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export LESS_TERMCAP_so&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">$&amp;#39;\E[1m\E[33m\E[44m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ALT+hjkl/HJKL 快速移动光标，将下面内容添加到 ~/.inputrc 中可作用所有工具，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 包括 bash/zsh/python/lua 等使用 readline 的工具，帮助见：info rluserman&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;\eh&amp;#34;&lt;/span>: backward-char
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;\el&amp;#34;&lt;/span>: forward-char
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;\ej&amp;#34;&lt;/span>: next-history
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;\ek&amp;#34;&lt;/span>: previous-history
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;\eH&amp;#34;&lt;/span>: backward-word
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;\eL&amp;#34;&lt;/span>: forward-word
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;\eJ&amp;#34;&lt;/span>: beginning-of-line
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;\eK&amp;#34;&lt;/span>: end-of-line
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># References&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##############################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://github.com/Idnan/bash-guide
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://www.linuxstall.com/linux-command-line-tips-that-every-linux-user-should-know/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://ss64.com/bash/syntax-keyboard.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http://wiki.bash-hackers.org/commands/classictest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://www.ibm.com/developerworks/library/l-bash-test/index.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://www.cyberciti.biz/faq/bash-loop-over-file/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://linuxconfig.org/bash-scripting-tutorial
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://github.com/LeCoupa/awesome-cheatsheets/blob/master/languages/bash.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://devhints.io/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://github.com/jlevy/the-art-of-command-line
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>https://yq.aliyun.com/articles/68541
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># vim: set ts=4 sw=4 tw=0 et :&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Goadmin Tutorial</title><link>/posts/go/go-admin-tutorial/</link><pubDate>Thu, 11 Feb 2021 08:31:52 -0400</pubDate><guid>/posts/go/go-admin-tutorial/</guid><description>Go admin Goadmin是一个帮助你自动生成代码的辅助框架，很方便地可以根据后台数据库的数据结构，生成想要的前端代码。
安装 adm new -l cn 使用 下载sql的配置文件，导入到数据库中
自动生成代码
adm generate -l cn -c admin.ini</description><content>&lt;h2 id="go-admin">Go admin&lt;/h2>
&lt;p>Goadmin是一个帮助你自动生成代码的辅助框架，很方便地可以根据后台数据库的数据结构，生成想要的前端代码。&lt;/p>
&lt;h3 id="安装">安装&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>adm new -l cn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用">使用&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>下载sql的配置文件，导入到数据库中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自动生成代码&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>adm generate -l cn -c admin.ini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Asambly Language Tutorial</title><link>/posts/go/asambly-language-tutorial/</link><pubDate>Fri, 05 Feb 2021 08:31:52 -0400</pubDate><guid>/posts/go/asambly-language-tutorial/</guid><description>汇编 汇而编之，才是汇编。这是废话。
学汇编，是和计算机底层打交道。
开篇
编程语言的发展 机器语言 由0和1组成
汇编语言(Assembly Language) 用符号代替了0和1，比机器语言便于阅读和记忆
高级语言 C\C++\Java\Swift等，更接近人类自然语言
操作：将寄存器BX的内容送入寄存器AX
机器语言：1000100111011000 汇编语言：mov ax, bx 高级语言：ax = bx; 汇编语言的特点 可以直接访问、控制各种硬件设备，比如存储器、CPU等，能最大限度地发挥硬件的功能
汇编指令是机器指令的助记符,同机器指令一一对应。每一种CPU都有自己的机器指令集\汇编指令集，所以汇编语言不具备可移植性
知识点过多，开发者需要对CPU等硬件结构有所了解，不易于编写、调试、维护
不区分大小写，比如mov和MOV是一样的
进制理解是关键 二进制 十六进制 内存管理是难点 址方式
寻址计算 不同的寻址方式
调用指令要艺术 assume cs:code ds:data ss:stack ; 栈段 stack segment db 100 dup(0) stack ends ;数据段 data segment db 100 dup(0) string db &amp;#39;Hello!$&amp;#39; data ends ;代码段 code segment start: ;手动设置ds, ss mov ax,data mov ds,ax mov ax,stack mov ss, ax ; 业务逻辑 call print ;调用print标识的指令 ; 退出 mov ah,4cH int 21h ; 用到才需要调用 print: ; 打印 (中断指令) ; ds:dx告诉字符串打印地址 mov dx, offset string mov ah,9h int 21h ret ;执行完该指令后 能够返回上次需要执行的下一条指令 即回到 call print 下一条指令 code ends 文章参考 汇编入门完全指北</description><content>&lt;h2 id="汇编">汇编&lt;/h2>
&lt;p>汇而编之，才是汇编。这是废话。&lt;/p>
&lt;p>学汇编，是和计算机底层打交道。&lt;/p>
&lt;p>开篇&lt;/p>
&lt;h4 id="编程语言的发展">编程语言的发展&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>机器语言
由0和1组成&lt;/p>
&lt;/li>
&lt;li>
&lt;p>汇编语言(Assembly Language)
用符号代替了0和1，比机器语言便于阅读和记忆&lt;/p>
&lt;/li>
&lt;li>
&lt;p>高级语言
C\C++\Java\Swift等，更接近人类自然语言&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作：将寄存器BX的内容送入寄存器AX&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>机器语言：1000100111011000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>汇编语言：mov ax, bx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>高级语言：ax &lt;span style="color:#f92672">=&lt;/span> bx;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="汇编语言的特点">汇编语言的特点&lt;/h3>
&lt;p>可以直接访问、控制各种硬件设备，比如存储器、CPU等，能最大限度地发挥硬件的功能&lt;/p>
&lt;p>汇编指令是机器指令的助记符,同机器指令一一对应。每一种CPU都有自己的机器指令集\汇编指令集，所以汇编语言不具备可移植性&lt;/p>
&lt;p>知识点过多，开发者需要对CPU等硬件结构有所了解，不易于编写、调试、维护&lt;/p>
&lt;p>不区分大小写，比如mov和MOV是一样的&lt;/p>
&lt;h3 id="进制理解是关键">进制理解是关键&lt;/h3>
&lt;h4 id="二进制">二进制&lt;/h4>
&lt;h4 id="十六进制">十六进制&lt;/h4>
&lt;h3 id="内存管理是难点">内存管理是难点&lt;/h3>
&lt;p>&lt;img src="https://lvchenqiang.github.io/lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/Snip20190401_103.png" alt="寄存器">&lt;/p>
&lt;p>&lt;img src="https://lvchenqiang.github.io/lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/Snip20190401_104.png" alt="寄存器2">&lt;/p>
&lt;p>址方式&lt;/p>
&lt;p>&lt;img src="https://lvchenqiang.github.io/lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/Snip20190331_47.png" alt="address">&lt;/p>
&lt;p>寻址计算
&lt;img src="https://lvchenqiang.github.io/lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/Snip20190331_48.png" alt="address calculating">&lt;/p>
&lt;p>不同的寻址方式&lt;/p>
&lt;p>&lt;img src="https://lvchenqiang.github.io/lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/Snip20190401_96.png" alt="indexing">&lt;/p>
&lt;p>&lt;img src="https://lvchenqiang.github.io/lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/Snip20190401_97.png" alt="indexing2">&lt;/p>
&lt;p>&lt;img src="https://lvchenqiang.github.io/lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/Snip20190331_55.png" alt="register">&lt;/p>
&lt;p>&lt;img src="https://lvchenqiang.github.io/lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/register_01.png" alt="register2">&lt;/p>
&lt;h3 id="调用指令要艺术">调用指令要艺术&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-asm" data-lang="asm">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">assume&lt;/span> &lt;span style="color:#66d9ef">cs&lt;/span>:&lt;span style="color:#66d9ef">code&lt;/span> &lt;span style="color:#66d9ef">ds&lt;/span>:&lt;span style="color:#66d9ef">data&lt;/span> &lt;span style="color:#66d9ef">ss&lt;/span>:&lt;span style="color:#66d9ef">stack&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 栈段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">stack&lt;/span> &lt;span style="color:#66d9ef">segment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#66d9ef">dup&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">stack&lt;/span> &lt;span style="color:#66d9ef">ends&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;数据段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">data&lt;/span> &lt;span style="color:#66d9ef">segment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#66d9ef">dup&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">string&lt;/span> &lt;span style="color:#66d9ef">db&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">Hello&lt;/span>!&lt;span style="color:#66d9ef">$&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">data&lt;/span> &lt;span style="color:#66d9ef">ends&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;代码段
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">code&lt;/span> &lt;span style="color:#66d9ef">segment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>start:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;手动设置ds, ss
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">mov&lt;/span> &lt;span style="color:#66d9ef">ax&lt;/span>,&lt;span style="color:#66d9ef">data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mov&lt;/span> &lt;span style="color:#66d9ef">ds&lt;/span>,&lt;span style="color:#66d9ef">ax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mov&lt;/span> &lt;span style="color:#66d9ef">ax&lt;/span>,&lt;span style="color:#66d9ef">stack&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mov&lt;/span> &lt;span style="color:#66d9ef">ss&lt;/span>, &lt;span style="color:#66d9ef">ax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; 业务逻辑
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">call&lt;/span> &lt;span style="color:#66d9ef">print&lt;/span> &lt;span style="color:#75715e">;调用print标识的指令
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; 退出
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">mov&lt;/span> &lt;span style="color:#66d9ef">ah&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#66d9ef">cH&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">int&lt;/span> &lt;span style="color:#ae81ff">21&lt;/span>&lt;span style="color:#66d9ef">h&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 用到才需要调用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>print:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; 打印 (中断指令)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">; ds:dx告诉字符串打印地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">mov&lt;/span> &lt;span style="color:#66d9ef">dx&lt;/span>, &lt;span style="color:#66d9ef">offset&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mov&lt;/span> &lt;span style="color:#66d9ef">ah&lt;/span>,&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#66d9ef">h&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">int&lt;/span> &lt;span style="color:#ae81ff">21&lt;/span>&lt;span style="color:#66d9ef">h&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ret&lt;/span> &lt;span style="color:#75715e">;执行完该指令后 能够返回上次需要执行的下一条指令 即回到 call print 下一条指令
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">code&lt;/span> &lt;span style="color:#66d9ef">ends&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="文章参考">文章参考&lt;/h3>
&lt;p>&lt;a href="https://lvchenqiang.github.io/2019/03/31/%E6%B1%87%E7%BC%96%E7%AE%80%E4%BB%8B/">汇编入门完全指北&lt;/a>&lt;/p></content></item><item><title>using-ipython-with-lsp.org</title><link>/posts/emacs/using-ipython-with-lsp/</link><pubDate>Fri, 01 May 2020 20:03:50 -0400</pubDate><guid>/posts/emacs/using-ipython-with-lsp/</guid><description> Skills Using Ipython within org
import sys sys.version Lsp Already included int the recent PR of `doom-emacs`
(def-package! lsp-typescript :when (featurep! +lsp) :when (featurep! :feature-x lsp) :hook ((js2-mode web-mode typescript-mode) . lsp-typescript-enable)) (def-package! tide :config (map! :map tide-mode-map :localleader :n &amp;#34;R&amp;#34; #&amp;#39;tide-restart-server :n &amp;#34;E&amp;#34; #&amp;#39;tide-project-errors :n &amp;#34;D&amp;#34; #&amp;#39;tide-documentation-at-point :n &amp;#34;o&amp;#34; #&amp;#39;tide-organize-imports :n &amp;#34;d&amp;#34; #&amp;#39;tide-jsdoc-template :n &amp;#34;F&amp;#34; #&amp;#39;tide-refactor :n &amp;#34;X&amp;#34; #&amp;#39;tide-fix :n &amp;#34;s&amp;#34; #&amp;#39;tide-rename-symbol :n &amp;#34;f&amp;#34; #&amp;#39;tide-rename-file))</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Skills
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
Using Ipython within org&lt;/p>
&lt;div class="src src-python">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sys&lt;span style="color:#f92672">.&lt;/span>version&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Lsp
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>
Already included int the recent PR of `doom-emacs`&lt;/p>
&lt;div class="src src-emacs-lsp">
&lt;pre tabindex="0">&lt;code class="language-emacs-lsp" data-lang="emacs-lsp"> (def-package! lsp-typescript
:when (featurep! +lsp)
:when (featurep! :feature-x lsp)
:hook ((js2-mode web-mode typescript-mode) . lsp-typescript-enable))
(def-package! tide
:config
(map! :map tide-mode-map
:localleader
:n &amp;#34;R&amp;#34; #&amp;#39;tide-restart-server
:n &amp;#34;E&amp;#34; #&amp;#39;tide-project-errors
:n &amp;#34;D&amp;#34; #&amp;#39;tide-documentation-at-point
:n &amp;#34;o&amp;#34; #&amp;#39;tide-organize-imports
:n &amp;#34;d&amp;#34; #&amp;#39;tide-jsdoc-template
:n &amp;#34;F&amp;#34; #&amp;#39;tide-refactor
:n &amp;#34;X&amp;#34; #&amp;#39;tide-fix
:n &amp;#34;s&amp;#34; #&amp;#39;tide-rename-symbol
:n &amp;#34;f&amp;#34; #&amp;#39;tide-rename-file))&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>go module tutorial</title><link>/posts/go/go-module-tutorial/</link><pubDate>Wed, 05 Feb 2020 14:05:34 -0400</pubDate><guid>/posts/go/go-module-tutorial/</guid><description>Go Module 工程模块化 创建一个叫hello的模块 目录/home/gopher/hello
package hello func Hello() string { return &amp;#34;Hello, world.&amp;#34; } hello_test测试文件 package hello import &amp;#34;testing&amp;#34; func TestHello(t *testing.T) { want := &amp;#34;Hello, world.&amp;#34; if got := Hello(); got != want { t.Errorf(&amp;#34;Hello() = %q, want %q&amp;#34;, got, want) } } 测试一下
$ go test PASS ok _/home/gopher/hello 0.020s $ 初始化模块 go mod init example.com/hello go test // 下载依赖并缓存 添加依赖 package hello import &amp;#34;rsc.io/quote&amp;#34; func Hello() string { return quote.</description><content>&lt;h1 id="go-module-工程模块化">Go Module 工程模块化&lt;/h1>
&lt;h2 id="创建一个叫hello的模块">创建一个叫&lt;code>hello&lt;/code>的模块&lt;/h2>
&lt;p>目录&lt;code>/home/gopher/hello&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">Hello&lt;/span>() &lt;span style="color:#66d9ef">string&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello, world.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="hello_test测试文件">&lt;code>hello_test&lt;/code>测试文件&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;testing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">TestHello&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">testing&lt;/span>.&lt;span style="color:#a6e22e">T&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">want&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello, world.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">got&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">Hello&lt;/span>(); &lt;span style="color:#a6e22e">got&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#a6e22e">want&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">t&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello() = %q, want %q&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">got&lt;/span>, &lt;span style="color:#a6e22e">want&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>测试一下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ go test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PASS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ok _/home/gopher/hello 0.020s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="初始化模块">初始化模块&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>go mod init example.com/hello
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go test // 下载依赖并缓存
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="添加依赖">添加依赖&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;rsc.io/quote&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">Hello&lt;/span>() &lt;span style="color:#66d9ef">string&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">quote&lt;/span>.&lt;span style="color:#a6e22e">Hello&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="下载依赖">下载依赖&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#a6e22e">all&lt;/span> &lt;span style="color:#75715e">// 列出全部模块
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">get&lt;/span> &lt;span style="color:#a6e22e">golang&lt;/span>.&lt;span style="color:#a6e22e">org&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">x&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">text&lt;/span> &lt;span style="color:#75715e">// 单独升级一个依赖, 将依赖改为indirect
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">versions&lt;/span> &lt;span style="color:#a6e22e">rsc&lt;/span>.&lt;span style="color:#a6e22e">io&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">sampler&lt;/span> &lt;span style="color:#75715e">// 显示全部版本
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">m&lt;/span> &lt;span style="color:#a6e22e">rsc&lt;/span>.&lt;span style="color:#a6e22e">io&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">q&lt;/span>&lt;span style="color:#f92672">...&lt;/span> &lt;span style="color:#75715e">// 显示各版本
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">doc&lt;/span> &lt;span style="color:#a6e22e">rsc&lt;/span>.&lt;span style="color:#a6e22e">io&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">quote&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">v3&lt;/span> &lt;span style="color:#75715e">// 显示文档
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">get&lt;/span> &lt;span style="color:#a6e22e">rsc&lt;/span>.&lt;span style="color:#a6e22e">io&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">sampler&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#a6e22e">v1&lt;/span>&lt;span style="color:#ae81ff">.3.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">mod&lt;/span> &lt;span style="color:#a6e22e">tidy&lt;/span> &lt;span style="color:#75715e">// 删除无用依赖
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="发布模块">发布模块&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>go mod tidy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># a final time to make sure everything is working.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go test ./...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add go.mod go.sum hello.go hello_test.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#e6db74">&amp;#34;hello: changes for v1.0.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># git tag&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git tag v1.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin v1.0.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="关于测试">关于测试&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>文件名后面加上 &lt;code>_test.go&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>文件中加上一个测试函数&lt;code>TestXXX&lt;/code>, 签名为 &lt;code>func (t *testing.T)&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果出现&lt;code>t.Error&lt;/code>或&lt;code>t.Fail&lt;/code>，测试失败。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">morestrings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;testing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">TestReverseRunes&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">testing&lt;/span>.&lt;span style="color:#a6e22e">T&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cases&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> []&lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">in&lt;/span>, &lt;span style="color:#a6e22e">want&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;Hello, world&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;dlrow ,olleH&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;Hello, 世界&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;界世 ,olleH&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">cases&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">got&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">ReverseRunes&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">in&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">got&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">want&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">t&lt;/span>.&lt;span style="color:#a6e22e">Errorf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ReverseRunes(%q) == %q, want %q&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">in&lt;/span>, &lt;span style="color:#a6e22e">got&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">want&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="总结">总结&lt;/h1>
&lt;p>&lt;code>go mod init&lt;/code> creates a new module, initializing the go.mod file that describes it.&lt;/p>
&lt;p>&lt;code>go build&lt;/code>, &lt;code>go test&lt;/code>, and other package-building commands add new dependencies to go.mod as needed.&lt;/p>
&lt;p>&lt;code>go list -m all&lt;/code> prints the current module’s dependencies.&lt;/p>
&lt;p>&lt;code>go get&lt;/code> changes the required version of a dependency (or adds a new dependency).&lt;/p>
&lt;p>&lt;code>go mod tidy&lt;/code> removes unused dependencies.&lt;/p></content></item><item><title>goful awesome finder</title><link>/posts/go/goful/</link><pubDate>Wed, 05 Feb 2020 14:05:34 -0400</pubDate><guid>/posts/go/goful/</guid><description>G# Goful
本项目基于anmitsu/goful，进行了自己的配置
Goful 跨平台的简单快捷终端文件管理器
跨平台 多窗口，多工作区 命令行执行bash和tmux 模糊查找, 异步拷贝, 文件块, 批量重命名等 安装 Go version &amp;gt;= 1.16 $ go install github.com/linuxing3/goful@latest ... $ goful Go version &amp;lt; 1.16 $ go get github.com/linuxing3/goful ... $ goful 用法 Tutorial Demos key function C-n down j Move cursor down C-p up k Move cursor up C-a home u Move cursor top C-e end G Move cursor bottom C-f C-i right l Move cursor right C-b left h Move cursor left C-d More move cursor down C-u More move cursor up C-v pgdn Page down M-v pgup Page up M-n Scroll down M-p Scroll up C-h backspace u Change to upper directory ~ Change to home directory \ Change to root directory w Change to neighbor directory C-o Create directory window C-w Close directory window M-f Move next workspace M-b Move previous workspace M-C-o Create workspace M-C-w Close workspace space Toggle mark C-space Invert mark C-l Reload C-m o Open i Open by pager s Sort v View b Bookmark e Editor x Command X External command f / Find : Shell ; Shell suspend n Make file K Make directory c Copy m Move r Rename R Bulk rename by regexp D Remove d Change directory g Glob $ Glob recursive C-g C-[ Cancel q Q Quit 更多信息请查看 main.</description><content>&lt;p>G# Goful&lt;/p>
&lt;p>&lt;a href="https://goreportcard.com/report/github.com/linuxing3/goful">&lt;img src="https://goreportcard.com/badge/github.com/linuxing3/goful" alt="Go Report Card">&lt;/a>
&lt;a href="https://pkg.go.dev/github.com/linuxing3/goful">&lt;img src="https://pkg.go.dev/badge/github.com/linuxing3/goful.svg" alt="Go Reference">&lt;/a>
&lt;a href="https://github.com/linuxing3/goful/blob/master/LICENSE">&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="MIT License">&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>本项目基于&lt;code>anmitsu/goful&lt;/code>，进行了自己的配置&lt;/p>
&lt;/blockquote>
&lt;p>Goful 跨平台的简单快捷终端文件管理器&lt;/p>
&lt;ul>
&lt;li>跨平台&lt;/li>
&lt;li>多窗口，多工作区&lt;/li>
&lt;li>命令行执行bash和tmux&lt;/li>
&lt;li>模糊查找, 异步拷贝, 文件块, 批量重命名等&lt;/li>
&lt;/ul>
&lt;h2 id="安装">安装&lt;/h2>
&lt;h3 id="go-version--116">Go version &amp;gt;= 1.16&lt;/h3>
&lt;pre>&lt;code>$ go install github.com/linuxing3/goful@latest
...
$ goful
&lt;/code>&lt;/pre>
&lt;h3 id="go-version--116-1">Go version &amp;lt; 1.16&lt;/h3>
&lt;pre>&lt;code>$ go get github.com/linuxing3/goful
...
$ goful
&lt;/code>&lt;/pre>
&lt;h2 id="用法">用法&lt;/h2>
&lt;h3 id="tutorial-demosgithubdemomd">&lt;a href=".github/demo.md">Tutorial Demos&lt;/a>&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>key&lt;/th>
&lt;th>function&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-n&lt;/code> &lt;code>down&lt;/code> &lt;code>j&lt;/code>&lt;/td>
&lt;td>Move cursor down&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-p&lt;/code> &lt;code>up&lt;/code> &lt;code>k&lt;/code>&lt;/td>
&lt;td>Move cursor up&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-a&lt;/code> &lt;code>home&lt;/code> &lt;code>u&lt;/code>&lt;/td>
&lt;td>Move cursor top&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-e&lt;/code> &lt;code>end&lt;/code> &lt;code>G&lt;/code>&lt;/td>
&lt;td>Move cursor bottom&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-f&lt;/code> &lt;code>C-i&lt;/code> &lt;code>right&lt;/code> &lt;code>l&lt;/code>&lt;/td>
&lt;td>Move cursor right&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-b&lt;/code> &lt;code>left&lt;/code> &lt;code>h&lt;/code>&lt;/td>
&lt;td>Move cursor left&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-d&lt;/code>&lt;/td>
&lt;td>More move cursor down&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-u&lt;/code>&lt;/td>
&lt;td>More move cursor up&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-v&lt;/code> &lt;code>pgdn&lt;/code>&lt;/td>
&lt;td>Page down&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M-v&lt;/code> &lt;code>pgup&lt;/code>&lt;/td>
&lt;td>Page up&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M-n&lt;/code>&lt;/td>
&lt;td>Scroll down&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M-p&lt;/code>&lt;/td>
&lt;td>Scroll up&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-h&lt;/code> &lt;code>backspace&lt;/code> &lt;code>u&lt;/code>&lt;/td>
&lt;td>Change to upper directory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>~&lt;/code>&lt;/td>
&lt;td>Change to home directory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\&lt;/code>&lt;/td>
&lt;td>Change to root directory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>w&lt;/code>&lt;/td>
&lt;td>Change to neighbor directory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-o&lt;/code>&lt;/td>
&lt;td>Create directory window&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-w&lt;/code>&lt;/td>
&lt;td>Close directory window&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M-f&lt;/code>&lt;/td>
&lt;td>Move next workspace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M-b&lt;/code>&lt;/td>
&lt;td>Move previous workspace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M-C-o&lt;/code>&lt;/td>
&lt;td>Create workspace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M-C-w&lt;/code>&lt;/td>
&lt;td>Close workspace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>space&lt;/code>&lt;/td>
&lt;td>Toggle mark&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-space&lt;/code>&lt;/td>
&lt;td>Invert mark&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-l&lt;/code>&lt;/td>
&lt;td>Reload&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-m&lt;/code> &lt;code>o&lt;/code>&lt;/td>
&lt;td>Open&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>i&lt;/code>&lt;/td>
&lt;td>Open by pager&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>s&lt;/code>&lt;/td>
&lt;td>Sort&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>v&lt;/code>&lt;/td>
&lt;td>View&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>b&lt;/code>&lt;/td>
&lt;td>Bookmark&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>e&lt;/code>&lt;/td>
&lt;td>Editor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>x&lt;/code>&lt;/td>
&lt;td>Command&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>X&lt;/code>&lt;/td>
&lt;td>External command&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>f&lt;/code> &lt;code>/&lt;/code>&lt;/td>
&lt;td>Find&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>:&lt;/code>&lt;/td>
&lt;td>Shell&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>;&lt;/code>&lt;/td>
&lt;td>Shell suspend&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>n&lt;/code>&lt;/td>
&lt;td>Make file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>K&lt;/code>&lt;/td>
&lt;td>Make directory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>c&lt;/code>&lt;/td>
&lt;td>Copy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>m&lt;/code>&lt;/td>
&lt;td>Move&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>r&lt;/code>&lt;/td>
&lt;td>Rename&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>R&lt;/code>&lt;/td>
&lt;td>Bulk rename by regexp&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>D&lt;/code>&lt;/td>
&lt;td>Remove&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>d&lt;/code>&lt;/td>
&lt;td>Change directory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>g&lt;/code>&lt;/td>
&lt;td>Glob&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$&lt;/code>&lt;/td>
&lt;td>Glob recursive&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-g&lt;/code> &lt;code>C-[&lt;/code>&lt;/td>
&lt;td>Cancel&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>q&lt;/code> &lt;code>Q&lt;/code>&lt;/td>
&lt;td>Quit&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>更多信息请查看 &lt;a href="main.go">main.go&lt;/a>&lt;/p>
&lt;h2 id="自定义">自定义&lt;/h2>
&lt;p>Goful内有配置文件，可以直接修改&lt;code>main.go&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>修改添加快捷键 Change and add keybindings&lt;/li>
&lt;li>更改命令行程序 Change terminal and shell&lt;/li>
&lt;li>修改文件打开程序 Change file opener (editor, pager and more)&lt;/li>
&lt;li>添加书签 Adding bookmarks&lt;/li>
&lt;li>设置颜色和外观 Setting colors and looks&lt;/li>
&lt;/ul>
&lt;p>克隆原仓库到本地，删除所有子文件夹，仅保留&lt;code>main.go&lt;/code>文件等&lt;/p>
&lt;pre>&lt;code>$ cd $GOPATH/src/github.com/linuxing3/goful
$ go mod init github.com/&amp;lt;yourname&amp;gt;/goful
$ go install
&lt;/code>&lt;/pre>
&lt;h2 id="贡献">贡献&lt;/h2>
&lt;p>&lt;a href=".github/CONTRIBUTING.md">Contributing Guide&lt;/a>&lt;/p></content></item><item><title>Cp Work Pedro</title><link>/posts/misc/cp-work-pedro/</link><pubDate>Sun, 25 Mar 2018 23:22:58 -0400</pubDate><guid>/posts/misc/cp-work-pedro/</guid><description/><content/></item><item><title>using-macros-in-emacs.org</title><link>/posts/hugo/using-macros-in-emacs/</link><pubDate>Sun, 18 Feb 2018 10:49:42 -0400</pubDate><guid>/posts/hugo/using-macros-in-emacs/</guid><description/><content/></item><item><title>Edit Hugo Faster</title><link>/posts/hugo/edit-hugo-faster/</link><pubDate>Sun, 18 Feb 2018 00:27:05 -0400</pubDate><guid>/posts/hugo/edit-hugo-faster/</guid><description>For fast hugo, I defined some aliases alias blog_deploy=&amp;#34;sh ~/Dropbox/xingwenju.com/hugo/deploy.sh&amp;#34; alias blog_new=&amp;#34;cd ~/Dropbox/xingwenju.com/hugo &amp;amp;&amp;amp; hugo new $1&amp;#34; alias blog_gen=&amp;#34;cd ~/Dropbox/xingwenju.com/hugo &amp;amp;&amp;amp; hugo&amp;#34; alias blog_serve=&amp;#34;cd ~/Dropbox/xingwenju.com/hugo &amp;amp;&amp;amp; hugo server –disableFastRender&amp;#34;
The Deploy.sh is like this. #!/bin/bash
echo -e &amp;#34;\033[0;32mDeploying updates to GitHub…\033[0m&amp;#34;
echo -e &amp;#34;~/Dropbox/xingwenju.com/hugo/&amp;#34;
cd ~/Dropbox/xingwenju.com/hugo
hugo # if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`
cd public
git add -A
msg=&amp;#34;rebuilding site `date`&amp;#34; if [ $# -eq 1 ] then msg=&amp;#34;$1&amp;#34; fi git commit -m &amp;#34;$msg&amp;#34;</description><content>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
For fast hugo, I defined some aliases
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>
alias blog_deploy=&amp;#34;sh ~/Dropbox/xingwenju.com/hugo/deploy.sh&amp;#34;
alias blog_new=&amp;#34;cd ~/Dropbox/xingwenju.com/hugo &amp;amp;&amp;amp; hugo new $1&amp;#34;
alias blog_gen=&amp;#34;cd ~/Dropbox/xingwenju.com/hugo &amp;amp;&amp;amp; hugo&amp;#34;
alias blog_serve=&amp;#34;cd ~/Dropbox/xingwenju.com/hugo &amp;amp;&amp;amp; hugo server –disableFastRender&amp;#34;&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
The Deploy.sh is like this.
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;p>
#!/bin/bash&lt;/p>
&lt;p>
echo -e &amp;#34;\033[0;32mDeploying updates to GitHub…\033[0m&amp;#34;&lt;/p>
&lt;p>
echo -e &amp;#34;~/Dropbox/xingwenju.com/hugo/&amp;#34;&lt;/p>
&lt;p>
cd ~/Dropbox/xingwenju.com/hugo&lt;/p>
&lt;p>hugo # if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`&lt;/p>
&lt;p>cd public&lt;/p>
&lt;p>git add -A&lt;/p>
&lt;p>msg=&amp;#34;rebuilding site `date`&amp;#34;
if [ $# -eq 1 ]
then msg=&amp;#34;$1&amp;#34;
fi
git commit -m &amp;#34;$msg&amp;#34;&lt;/p>
&lt;p>git push -u origin master&lt;/p>
&lt;p>cd ..&lt;/p>
&lt;/div>
&lt;/div></content></item><item><title>using-nodejs-in-emacs.org</title><link>/posts/nodejs/using-nodejs-in-emacs/</link><pubDate>Sat, 17 Feb 2018 10:06:18 -0400</pubDate><guid>/posts/nodejs/using-nodejs-in-emacs/</guid><description> Table of Contents Description
Features: Description This layer introduces packages that target Node.js. Currently this layer should not be used directly, as it will be used by other layers.
Features: Integration of packages necessary to execute node.js modules from other layers.</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Table of Contents
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="#description">Description&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#features">Features:&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer introduces packages that target Node.js. Currently this layer should
not be used directly, as it will be used by other layers.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>Integration of packages necessary to execute node.js modules from other layers.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>building-modern-emacs.org</title><link>/posts/emacs/building-modern-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/building-modern-emacs/</guid><description>Day 3 A modern emacs configuration Spliting the spacemacs/init (defun dotspacemacs/init () &amp;#34;Instantiate Spacemacs core settings.&amp;#34; (dotspacemacs/init/coding) (dotspacemacs/init/display) (dotspacemacs/init/evil) (dotspacemacs/init/keys) (dotspacemacs/init/layouts) (dotspacemacs/init/misc) (dotspacemacs/init/packages) (dotspacemacs/init/startup)) Spliting the spacemacs/config (defun dotspacemacs/user-config () &amp;#34;Configuration that cannot be delegated to layers.&amp;#34; (dotspacemacs/user-config/toggles) (dotspacemacs/user-config/development) (dotspacemacs/user-config/experiments)) Spliting the spacemacs/layers (defun dotspacemacs/layers () &amp;#34;Instantiate Spacemacs layers declarations and package configurations.&amp;#34; (dotspacemacs/layers/config) (dotspacemacs/layers/packages)) Source Code (defvar XING-ONLY? nil &amp;#34;If cloning, set to nil, enable non-layer personal configuration.&amp;#34;) (defvar linux?</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Day 3
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
A modern emacs configuration
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;div id="outline-container-headline-3" class="outline-4">
&lt;h4 id="headline-3">
Spliting the &lt;code class="verbatim">spacemacs/init&lt;/code>
&lt;/h4>
&lt;div id="outline-text-headline-3" class="outline-text-4">
&lt;div class="src src-language">
&lt;pre tabindex="0">&lt;code class="language-language" data-lang="language">(defun dotspacemacs/init ()
&amp;#34;Instantiate Spacemacs core settings.&amp;#34;
(dotspacemacs/init/coding)
(dotspacemacs/init/display)
(dotspacemacs/init/evil)
(dotspacemacs/init/keys)
(dotspacemacs/init/layouts)
(dotspacemacs/init/misc)
(dotspacemacs/init/packages)
(dotspacemacs/init/startup))&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-4">
&lt;h4 id="headline-4">
Spliting the &lt;code class="verbatim">spacemacs/config&lt;/code>
&lt;/h4>
&lt;div id="outline-text-headline-4" class="outline-text-4">
&lt;div class="src src-language">
&lt;pre tabindex="0">&lt;code class="language-language" data-lang="language">(defun dotspacemacs/user-config ()
&amp;#34;Configuration that cannot be delegated to layers.&amp;#34;
(dotspacemacs/user-config/toggles)
(dotspacemacs/user-config/development)
(dotspacemacs/user-config/experiments))&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-4">
&lt;h4 id="headline-5">
Spliting the &lt;code class="verbatim">spacemacs/layers&lt;/code>
&lt;/h4>
&lt;div id="outline-text-headline-5" class="outline-text-4">
&lt;div class="src src-language">
&lt;pre tabindex="0">&lt;code class="language-language" data-lang="language">(defun dotspacemacs/layers ()
&amp;#34;Instantiate Spacemacs layers declarations and package configurations.&amp;#34;
(dotspacemacs/layers/config)
(dotspacemacs/layers/packages))&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-4">
&lt;h4 id="headline-6">
Source Code
&lt;/h4>
&lt;div id="outline-text-headline-6" class="outline-text-4">
&lt;div class="src src-language">
&lt;pre tabindex="0">&lt;code class="language-language" data-lang="language">
(defvar XING-ONLY? nil
&amp;#34;If cloning, set to nil, enable non-layer personal configuration.&amp;#34;)
(defvar linux? (eq system-type &amp;#39;gnu/linux)
&amp;#34;Are we on a gnu/linux machine?&amp;#34;)
(defvar desktop? (= 1440 (display-pixel-height))
&amp;#34;Am I on my desktop? For determining font size.&amp;#34;)
(defun os-path (path)
&amp;#34;Prepend drive label to PATH if on windows machine.&amp;#34;
(if linux?
path
(expand-file-name path &amp;#34;c:&amp;#34;)))
(setq x-smart-package-archives
&amp;#39;(
(&amp;#34;org&amp;#34; . &amp;#34;https://orgmode.org/elpa/&amp;#34;)
(&amp;#34;gnu&amp;#34; . &amp;#34;https://elpa.gnu.org/packages/&amp;#34;)
(&amp;#34;melpa&amp;#34; . &amp;#34;https://melpa.org/packages/&amp;#34;)
(&amp;#34;milkbox&amp;#34; . &amp;#34;https://melpa.milkbox.net/packages/&amp;#34;)
(&amp;#34;elpy&amp;#34; . &amp;#34;https://jorgenschaefer.github.io/packages/&amp;#34;)
(&amp;#34;marmalade&amp;#34; . &amp;#34;https://marmalade-repo.org/packages/&amp;#34;)
)
)
(setq x-local-package-archives
&amp;#39;(
(&amp;#34;org&amp;#34; . &amp;#34;http://localhost/static/elpa/org/&amp;#34;)
(&amp;#34;gnu&amp;#34; . &amp;#34;http://localhost/static/elpa/gnu/&amp;#34;)
(&amp;#34;melpa&amp;#34; . &amp;#34;http://localhost/static/elpa/melpa/&amp;#34;)
(&amp;#34;stable-melpa&amp;#34; . &amp;#34;http://localhost/static/elpa/stable-melpa/&amp;#34;)
)
)
(defun x/refresh-packages ()
(interactive)
(when (&amp;gt;= emacs-major-version 24)
(require &amp;#39;package)
(setq package-archives x-smart-package-archives)
(package-initialize)))
;;; Spacemacs/
(defun dotspacemacs/init ()
&amp;#34;Instantiate Spacemacs core settings.&amp;#34;
(dotspacemacs/init/coding)
(dotspacemacs/init/display)
(dotspacemacs/init/evil)
(dotspacemacs/init/keys)
(dotspacemacs/init/layouts)
(dotspacemacs/init/misc)
(dotspacemacs/init/packages)
(dotspacemacs/init/startup))
(defun dotspacemacs/layers ()
&amp;#34;Instantiate Spacemacs layers declarations and package configurations.&amp;#34;
(dotspacemacs/layers/config)
(dotspacemacs/layers/packages))
(defun dotspacemacs/user-init ()
&amp;#34;Package independent settings to run before `dotspacemacs/user-config&amp;#39;.&amp;#34;
(setq tramp-ssh-controlmaster-options
&amp;#34;-o ControlMaster=auto -o ControlPath=&amp;#39;tramp.%%C&amp;#39; -o ControlPersist=no&amp;#34;)
(setq evil-shift-round nil)
(setq byte-compile-warnings &amp;#39;(not obsolete))
(setq warning-minimum-level :error)
(setq exec-path-from-shell-check-startup-files nil)
(setq purpose-mode nil)
(setq-default git-magit-status-fullscreen t)
(setq custom-file (expand-file-name &amp;#34;custom.el&amp;#34; dotspacemacs-directory)))
(defun dotspacemacs/user-config ()
&amp;#34;Configuration that cannot be delegated to layers.&amp;#34;
(dotspacemacs/user-config/toggles)
(dotspacemacs/user-config/development)
(dotspacemacs/user-config/experiments))
;;; Spacemacs/Layers
;;;; Local
(defvar dotspacemacs/layers/local
&amp;#39;((macros :location local) ; All local layers inherit these macros
(config :location local) ; Org, Avy, Evil, Misc... config
(display :location local) ; Pretty-eshell/code/outlines... pkgs
(langs :location local) ; Language config
(personal :location local) ; Personal pkgs
)
&amp;#34;Local layers housed in `~/.spacemacs.d/layers&amp;#39;.&amp;#34;)
;;;; Core
(defvar dotspacemacs/layers/core
&amp;#39;(better-defaults
git
syntax-checking
(auto-completion :variables
auto-completion-return-key-behavior &amp;#39;complete
auto-completion-tab-key-behavior &amp;#39;complete
auto-completion-enable-snippets-in-popup t)
(ivy :variables
ivy-extra-directories nil)
(org :variables
org-projectile-file &amp;#34;TODO.org&amp;#34;
org-enable-org-journal-support t
org-enable-hugo-support t
org-enable-reveal-js-support t
org-enable-github-support t
org-want-todo-bindings t)
(shell :variables
shell-default-shell &amp;#39;eshell)
(version-control :variables
version-control-global-margin t
version-control-diff-tool &amp;#39;git-gutter+)
)
&amp;#34;Layers I consider core to Spacemacs.&amp;#34;)
;;;; Langs
(defvar dotspacemacs/layers/langs
&amp;#39;(c-c++
emacs-lisp
(javascript :variables node-add-modules-path t)
(typescript :variables typescript-fmt-on-save t)
rust
csv
html
markdown
(clojure :variables
clojure-enable-fancify-symbols t)
;; haskell
(haskell :variables
haskell-completion-backend &amp;#39;intero)
(python :variables
python-sort-imports-on-save t
python-test-runner &amp;#39;pytest
:packages
(not hy-mode) ; I maintain `hy-mode&amp;#39;, using local branch
)
)
&amp;#34;Programming and markup language layers.&amp;#34;)
;;;; Extra
(defvar dotspacemacs/layers/extra
&amp;#39;(gnus
graphviz
pdf-tools
ranger
treemacs
docker
(ibuffer :variables
ibuffer-group-buffers-by &amp;#39;projects)
)
&amp;#34;Miscellaneous layers.&amp;#34;)
;;;; Xingwenju
(defvar dotspacemacs/layers/xingwenju
&amp;#39;(
xingwenju
)
&amp;#34;Xing Wenju layers.&amp;#34;)
;;;; Layers/config
(defun dotspacemacs/layers/config ()
(setq-default
dotspacemacs-distribution
&amp;#39;spacemacs
dotspacemacs-enable-lazy-installation
&amp;#39;unused
dotspacemacs-ask-for-lazy-installation
t
dotspacemacs-configuration-layer-path
(list (os-path &amp;#34;~/.spacemacs.d/layers/&amp;#34;))
dotspacemacs-configuration-layers
(
append
dotspacemacs/layers/local
dotspacemacs/layers/core
dotspacemacs/layers/langs
dotspacemacs/layers/extra
dotspacemacs/layers/xingwenju
)
))
;;;; Layers/packages
(defun dotspacemacs/layers/packages ()
(setq-default
dotspacemacs-additional-packages
&amp;#39;(
solarized-theme
nord-theme
github-modern-theme
atom-dark-theme
org-journal
ox-reveal
ox-hugo
w3m
etags-select
nodejs-repl
)
dotspacemacs-excluded-packages
&amp;#39;(
fringe
hy-mode
)
dotspacemacs-frozen-packages
&amp;#39;()
dotspacemacs-install-packages
&amp;#39;used-but-keep-unused
))
;;; Spacemacs/Init
;;;; Coding
(defun dotspacemacs/init/coding ()
(setq-default
dotspacemacs-search-tools
&amp;#39;(&amp;#34;ag&amp;#34; &amp;#34;rg&amp;#34; &amp;#34;pt&amp;#34; &amp;#34;ack&amp;#34; &amp;#34;grep&amp;#34;)
dotspacemacs-smooth-scrolling
t
dotspacemacs-folding-method
&amp;#39;evil
dotspacemacs-smartparens-strict-mode
nil
dotspacemacs-smart-closing-parenthesis
nil
dotspacemacs-highlight-delimiters
&amp;#39;all
dotspacemacs-line-numbers
nil
dotspacemacs-whitespace-cleanup
&amp;#39;trailing
))
;;;; Display
(defun dotspacemacs/init/display ()
(setq-default
dotspacemacs-themes
&amp;#39;(
zenburn
solarized-light
solarized-dark
github-modern
nord ; Minimal theme modifications for nord
tango
)
dotspacemacs-default-font
`(
&amp;#34;Fira Code&amp;#34;
:size ,(cond ((not linux?) 16)
(desktop? 16)
(t 16))
:weight normal
:width normal
:powerline-scale 1.5
)
dotspacemacs-fullscreen-at-startup
t
dotspacemacs-fullscreen-use-non-native
nil
dotspacemacs-maximized-at-startup
nil
dotspacemacs-active-transparency
70
dotspacemacs-inactive-transparency
50
dotspacemacs-mode-line-theme
&amp;#39;all-the-icons
dotspacemacs-mode-line-unicode-symbols
t
dotspacemacs-zone-out-when-idle
nil
dotspacemacs-frame-title-format
&amp;#34;%I@%S&amp;#34;
dotspacemacs-icon-title-format
nil
))
;;;; Evil
(defun dotspacemacs/init/evil ()
(setq-default
dotspacemacs-editing-style
&amp;#39;vim
dotspacemacs-colorize-cursor-according-to-state
t
dotspacemacs-remap-Y-to-y$
t
dotspacemacs-retain-visual-state-on-shift
t
dotspacemacs-visual-line-move-text
nil
dotspacemacs-ex-substitute-global
nil
dotspacemacs-enable-paste-transient-state
nil
dotspacemacs-show-transient-state-title
t
dotspacemacs-show-transient-state-color-guide
t
))
;;;; Keys
(defun dotspacemacs/init/keys ()
(setq-default
dotspacemacs-leader-key
&amp;#34;SPC&amp;#34;
dotspacemacs-emacs-command-key
&amp;#34;SPC&amp;#34;
dotspacemacs-ex-command-key
&amp;#34;:&amp;#34;
dotspacemacs-emacs-leader-key
&amp;#34;M-m&amp;#34;
dotspacemacs-major-mode-leader-key
&amp;#34;,&amp;#34;
dotspacemacs-major-mode-emacs-leader-key
&amp;#34;C-M-m&amp;#34;
dotspacemacs-which-key-delay
0.4
dotspacemacs-which-key-position
&amp;#39;bottom
dotspacemacs-distinguish-gui-tab
nil
))
;;;; Layouts
(defun dotspacemacs/init/layouts ()
(setq-default
dotspacemacs-scratch-mode
&amp;#39;org-mode
dotspacemacs-default-layout-name
&amp;#34;Default&amp;#34;
dotspacemacs-display-default-layout
t
dotspacemacs-auto-resume-layouts
t
dotspacemacs-auto-generate-layout-names
t
dotspacemacs-switch-to-buffer-prefers-purpose
nil
))
;;;; Misc
(defun dotspacemacs/init/misc ()
(setq-default
dotspacemacs-large-file-size
5
dotspacemacs-auto-save-file-location
&amp;#39;cache
dotspacemacs-max-rollback-slots
5
dotspacemacs-persistent-server
nil
dotspacemacs-helm-resize
nil
dotspacemacs-helm-no-header
nil
dotspacemacs-helm-position
&amp;#39;bottom
))
;;;; Packages
(defun dotspacemacs/init/packages ()
(setq-default
dotspacemacs-default-package-repository
nil
dotspacemacs-elpa-https
t
dotspacemacs-elpa-timeout
5
dotspacemacs-check-for-update
nil
dotspacemacs-elpa-subdirectory
nil
)
;; x/refresh-packages
)
;;;; Startup
(defun dotspacemacs/init/startup ()
(setq-default
dotspacemacs-verbose-loading
nil
dotspacemacs-startup-banner
&amp;#39;official
dotspacemacs-startup-lists
&amp;#39;(
(recents . 3)
(projects . 3)
(agenda . 3)
(todos . 3)
(bookmarks . 3)
)
dotspacemacs-startup-buffer-responsive
t
dotspacemacs-loading-progress-bar
t
))
;;; Spacemacs/User-Config
;;;; Toggles
(defun dotspacemacs/user-config/toggles ()
&amp;#34;Spacemacs toggles not intended to be put into layers.&amp;#34;
(spacemacs/toggle-highlight-long-lines-globally-on)
(spacemacs/toggle-mode-line-minor-modes-off)
(spacemacs/toggle-aggressive-indent-globally-on)
(global-highlight-parentheses-mode 1)
(golden-ratio-mode 1)
(global-company-mode 1)
(rainbow-delimiters-mode-enable)
(fringe-mode &amp;#39;(0 . 8)))
;;;; Development
(defun dotspacemacs/user-config/development ()
&amp;#34;Setting development Environment.&amp;#34;
;; Tags
(setq tags-add-tables nil)
(setq tags-file-name nil)
(setq tags-table-list
&amp;#39;(&amp;#34;~/.spacemacs.d/TAGS&amp;#34;
&amp;#34;~/workspace/wechaty-master/TAGS&amp;#34;
&amp;#34;~/workspace/cp-work-ts-vue/TAGS&amp;#34;))
;; Org
(setq spaceline-org-clock-p t)
(with-eval-after-load &amp;#39;org-agenda
(require &amp;#39;org-projectile)
(push (org-projectile-todo-files) org-agenda-files))
)
;;;; Experiments
(defun dotspacemacs/user-config/experiments ()
&amp;#34;Space for trying out configuration updates.&amp;#34;
(setq nord-comment-brightness 15)
(setq nord-uniform-mode-lines t)
(when XING-ONLY?
(load-file (os-path &amp;#34;~/.spacemacs.d/elisp/init.el&amp;#34;))
(require &amp;#39;hy-mode)
(require &amp;#39;spacemacs-hy)
(require &amp;#39;hy-personal)
))&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
To be Continued…&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>Easy Hugo With Emacs</title><link>/posts/hugo/easy-hugo-with-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/hugo/easy-hugo-with-emacs/</guid><description>Hugo Tips — title: &amp;#34;Easy Hugo With Emacs&amp;#34; date: &amp;#34;2018-02-16T20:03:50-04:00&amp;#34; draft: false —
If use equal sign, must leave no space — title=&amp;#34;Easy Hugo With Emacs&amp;#34; date=&amp;#34;2018-02-16T20:03:50-04:00&amp;#34; draft=false —</description><content>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Hugo Tips
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>
—
title: &amp;#34;Easy Hugo With Emacs&amp;#34;
date: &amp;#34;2018-02-16T20:03:50-04:00&amp;#34;
draft: false
—&lt;/p>
&lt;div id="outline-container-headline-2" class="outline-5">
&lt;h5 id="headline-2">
If use equal sign, must leave no space
&lt;/h5>
&lt;div id="outline-text-headline-2" class="outline-text-5">
&lt;p>
—
title=&amp;#34;Easy Hugo With Emacs&amp;#34;
date=&amp;#34;2018-02-16T20:03:50-04:00&amp;#34;
draft=false
—&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>evil.org</title><link>/posts/emacs/evil/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/evil/</guid><description> Description This layer replaces evil-nerd-commenter with evil-commentary for those who prefer the behaviour of vim-commentary.
Features: Provides the original vim behaviour for commenting out lines via evil-commentary. Install To use this configuration layer, add it to your ~/.spacemacs. You will need to add evil-commentary to the existing dotspacemacs-configuration-layers list in this file.
Key bindings Key Binding Description SPC ; comment operator gcc comment current line gcap comment paragraphs gc comment out the target of a motion gc SPC y comment up to a line with avy gy comment and yank</description><content>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer replaces &lt;a href="https://github.com/redguardtoo/evil-nerd-commenter">evil-nerd-commenter&lt;/a> with &lt;a href="https://github.com/linktohack/evil-commentary">evil-commentary&lt;/a> for those
who prefer the behaviour of &lt;a href="https://github.com/tpope/vim-commentary">vim-commentary&lt;/a>.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>Provides the original vim behaviour for commenting out lines via &lt;a href="https://github.com/linktohack/evil-commentary">evil-commentary&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
Install
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">evil-commentary&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-2">
&lt;h2 id="headline-5">
Key bindings
&lt;/h2>
&lt;div id="outline-text-headline-5" class="outline-text-2">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC ;&lt;/code>&lt;/td>
&lt;td>comment operator&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gcc&lt;/code>&lt;/td>
&lt;td>comment current line&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gcap&lt;/code>&lt;/td>
&lt;td>comment paragraphs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gc&lt;/code>&lt;/td>
&lt;td>comment out the target of a motion&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gc SPC y&lt;/code>&lt;/td>
&lt;td>comment up to a line with avy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gy&lt;/code>&lt;/td>
&lt;td>comment and yank&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div></content></item><item><title>smart.org</title><link>/posts/emacs/smart/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/smart/</guid><description/><content/></item><item><title>test-easy-hugo-in-emacs.org</title><link>/posts/emacs/test-easy-hugo-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/test-easy-hugo-in-emacs/</guid><description>Tips You can type the post name as emacs/test-easy-hugo-in-emacs to put the post in subdirectory
#+srcname: easy-hugo-newpost #+begin_src emacs-lisp (defun x/smart-create-hugo-newpost-with-current-buffer (post-file) &amp;#34;file needs to have and extension &amp;#39;.md&amp;#39; or &amp;#39;.org&amp;#39; or &amp;#39;.ad&amp;#39; or &amp;#39;.rst&amp;#39; or &amp;#39;.mmark&amp;#39; or &amp;#39;.html&amp;#39;.&amp;#34; (interactive (list (read-from-minibuffer &amp;#34;输入文件名: &amp;#34; `(,easy-hugo-default-ext . 1) nil nil nil))) (easy-hugo-with-env (let ( (filename (expand-file-name post-file easy-hugo-postdir)) ;; file to create (file-ext (file-name-extension post-file)) ;; file extention (current-buffer-file-name (buffer-file-name)) ;; buffer to copy content ) ;; Check file extention (when (not (member file-ext easy-hugo--formats)) (error &amp;#34;please enter .</description><content>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Tips
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>
You can type the post name as &lt;code class="verbatim">emacs/test-easy-hugo-in-emacs&lt;/code> to put the post in subdirectory&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+srcname: easy-hugo-newpost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun x/smart-create-hugo-newpost-with-current-buffer (post-file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;file needs to have and extension &amp;#39;.md&amp;#39; or &amp;#39;.org&amp;#39; or &amp;#39;.ad&amp;#39; or &amp;#39;.rst&amp;#39; or &amp;#39;.mmark&amp;#39; or &amp;#39;.html&amp;#39;.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive (&lt;span style="color:#a6e22e">list&lt;/span> (&lt;span style="color:#a6e22e">read-from-minibuffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;输入文件名: &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>(&lt;span style="color:#f92672">,&lt;/span>easy-hugo-default-ext &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (easy-hugo-with-env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (filename (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> post-file easy-hugo-postdir)) &lt;span style="color:#75715e">;; file to create&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (file-ext (file-name-extension post-file)) &lt;span style="color:#75715e">;; file extention&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (current-buffer-file-name (&lt;span style="color:#a6e22e">buffer-file-name&lt;/span>)) &lt;span style="color:#75715e">;; buffer to copy content&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Check file extention&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (not (&lt;span style="color:#a6e22e">member&lt;/span> file-ext easy-hugo--formats))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">error&lt;/span> &lt;span style="color:#e6db74">&amp;#34;please enter .%s or .org or .%s or .rst or .mmark or .%s file name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> easy-hugo-markdown-extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> easy-hugo-asciidoc-extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> easy-hugo-html-extension))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Check target file exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (&lt;span style="color:#a6e22e">file-exists-p&lt;/span> (file-truename filename))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">error&lt;/span> &lt;span style="color:#e6db74">&amp;#34;%s already exists!&amp;#34;&lt;/span> filename))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Check if org is supported and defined&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if (and (&lt;span style="color:#a6e22e">null&lt;/span> easy-hugo-org-header)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">0.25&lt;/span> (easy-hugo--version)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">call-process&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hugo&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*hugo*&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">t&lt;/span> &lt;span style="color:#e6db74">&amp;#34;new&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (file-relative-name filename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;content&amp;#34;&lt;/span> easy-hugo-basedir)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if (or (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext easy-hugo-markdown-extension)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext easy-hugo-asciidoc-extension)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext &lt;span style="color:#e6db74">&amp;#34;rst&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext &lt;span style="color:#e6db74">&amp;#34;mmark&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext easy-hugo-html-extension))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">call-process&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hugo&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*hugo*&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">t&lt;/span> &lt;span style="color:#e6db74">&amp;#34;new&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (file-relative-name filename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;content&amp;#34;&lt;/span> easy-hugo-basedir))))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; End of check org support&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Kill temporary buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (&lt;span style="color:#a6e22e">get-buffer&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*hugo*&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">kill-buffer&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*hugo*&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Open the new post with filename&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-file filename)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (or easy-hugo-org-header
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (and (&lt;span style="color:#a6e22e">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0.25&lt;/span> (easy-hugo--version))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext &lt;span style="color:#e6db74">&amp;#34;org&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Insert header&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> (easy-hugo--org-headers (file-name-base post-file)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-max&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Insert contents from another buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert-file-contents&lt;/span> current-buffer-file-name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-max&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (save-buffer)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div></content></item><item><title>Using Org Mode in Hugo</title><link>/posts/hugo/using-org-in-hugo/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/hugo/using-org-in-hugo/</guid><description>Integrations Hugo has .org file support natively, which is what I&amp;#39;ll be using. There are other options out there, ox-hugo being the big one. This will let you write in org and then export into a .md file that hugo understands and gives you more control of the output. Check that out if you have additional needs that are required.
Front matter While Hugo has front matter, you can easily translate that into org-mode document properties.</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Integrations
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>Hugo has .org file support natively, which is what I&amp;#39;ll be using. There are other options out there, ox-hugo being the big one. This will let you write in org and then export into a .md file that hugo understands and gives you more control of the output. Check that out if you have additional needs that are required.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Front matter
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>While Hugo has front matter, you can easily translate that into org-mode document properties. For example, this is what is on the top of this file:&lt;/p>
&lt;div class="src src-org">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-org" data-lang="org">&lt;span style="display:flex;">&lt;span> #+title: Using Org Mode in Hugo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #+subtitle: emacs everywhere
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #+date: 2019-08-02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #+tags[]: howto, emacs, hugo&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Which maps pretty directly to the toml front matter.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-2">
&lt;h2 id="headline-3">
Gist
&lt;/h2>
&lt;div id="outline-text-headline-3" class="outline-text-2">
&lt;script type="application/javascript" src="https://gist.github.com/spf13/7896402.js">&lt;/script>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
highlight
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">section&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;main&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;title&amp;#34;&lt;/span>&amp;gt;{{ .Title }}&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ range .Pages }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ .Render &amp;#34;summary&amp;#34;}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ end }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">section&lt;/span>&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-2">
&lt;h2 id="headline-5">
Youtube
&lt;/h2>
&lt;div id="outline-text-headline-5" class="outline-text-2">
&lt;p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/w7Ft2ymGmfc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-2">
&lt;h2 id="headline-6">
params
&lt;/h2>
&lt;div id="outline-text-headline-6" class="outline-text-2">
&lt;p>
linuxing3&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-2">
&lt;h2 id="headline-7">
Archtypes
&lt;/h2>
&lt;/div></content></item><item><title>using-auto-completion-in-emacs.org</title><link>/posts/emacs/using-auto-completion-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-auto-completion-in-emacs/</guid><description>Description This layer provides auto-completion to Spacemacs.
The following completion engines are supported:
company auto-complete Snippets are supported via yasnippet and auto-yasnippet.
This layer also configures hippie-expand.
Features: Completion with company or auto-complete Frequency-based suggestions via company-statistics Integration with yasnippets Install To use this configuration layer, add it to your ~/.spacemacs. You will need to add auto-completion to the existing dotspacemacs-configuration-layers list in this file.
Configuration Key bindings You can customize the user experience of auto-completion with the following layer variables:</description><content>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer provides auto-completion to Spacemacs.&lt;/p>
&lt;p>
The following completion engines are supported:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://company-mode.github.io/">company&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/auto-complete/auto-complete">auto-complete&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Snippets are supported via &lt;a href="https://github.com/capitaomorte/yasnippet">yasnippet&lt;/a> and &lt;a href="https://github.com/abo-abo/auto-yasnippet">auto-yasnippet&lt;/a>.&lt;/p>
&lt;p>
This layer also configures &lt;code class="verbatim">hippie-expand&lt;/code>.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>Completion with &lt;code class="verbatim">company&lt;/code> or &lt;code class="verbatim">auto-complete&lt;/code>&lt;/li>
&lt;li>Frequency-based suggestions via &lt;code class="verbatim">company-statistics&lt;/code>&lt;/li>
&lt;li>Integration with &lt;code class="verbatim">yasnippets&lt;/code>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
Install
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">auto-completion&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-2">
&lt;h2 id="headline-5">
Configuration
&lt;/h2>
&lt;div id="outline-text-headline-5" class="outline-text-2">
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Key bindings
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;p>You can customize the user experience of auto-completion with the following
layer variables:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code class="verbatim">auto-completion-return-key-behavior&lt;/code> set the action to perform when the
&lt;code>RET&lt;/code> key is pressed, the possible values are:&lt;/p>
&lt;ul>
&lt;li>&lt;code class="verbatim">complete&lt;/code> completes with the current selection&lt;/li>
&lt;li>&lt;code class="verbatim">nil&lt;/code> does nothing&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code class="verbatim">auto-completion-tab-key-behavior&lt;/code> set the action to perform when the &lt;code>TAB&lt;/code>
key is pressed, the possible values are:&lt;/p>
&lt;ul>
&lt;li>&lt;code class="verbatim">complete&lt;/code> completes with the current selection&lt;/li>
&lt;li>&lt;code class="verbatim">cycle&lt;/code> completes the common prefix and cycle between candidates&lt;/li>
&lt;li>&lt;code class="verbatim">nil&lt;/code> does nothing&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code class="verbatim">auto-completion-complete-with-key-sequence&lt;/code> is a string of two characters
denoting a key sequence that will perform a &lt;code class="verbatim">complete&lt;/code> action if the sequence
as been entered quickly enough. If its value is &lt;code class="verbatim">nil&lt;/code> then the feature is
disabled.&lt;/li>
&lt;li>&lt;code class="verbatim">auto-completion-complete-with-key-sequence-delay&lt;/code> is the number of seconds
to wait for the auto-completion key sequence to be entered. The default value
is 0.1 seconds.&lt;/li>
&lt;li>&lt;code class="verbatim">auto-completion-idle-delay&lt;/code> is the number of seconds to wait before
suggesting completions. The default value is 0.2 seconds.&lt;/li>
&lt;/ol>
&lt;p>The default configuration of the layer is:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq-default dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (auto-completion :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-return-key-behavior &lt;span style="color:#e6db74">&amp;#39;complete&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-tab-key-behavior &lt;span style="color:#e6db74">&amp;#39;cycle&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-complete-with-key-sequence &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-complete-with-key-sequence-delay &lt;span style="color:#ae81ff">0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-idle-delay &lt;span style="color:#ae81ff">0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-private-snippets-directory &lt;span style="color:#66d9ef">nil&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
&lt;code>jk&lt;/code> is a good candidate for &lt;code class="verbatim">auto-completion-complete-with-key-sequence&lt;/code> if
you don&amp;#39;t use it already.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-3">
&lt;h3 id="headline-7">
Snippets directories
&lt;/h3>
&lt;div id="outline-text-headline-7" class="outline-text-3">
&lt;p>The following directories are added by default:&lt;/p>
&lt;ul>
&lt;li>&lt;code class="verbatim">~/.emacs.d/elpa/yasnippet-xxxxx/snippets&lt;/code>&lt;/li>
&lt;li>&lt;code class="verbatim">~/.emacs.d/layers/auto-completion/snippets&lt;/code>&lt;/li>
&lt;li>&lt;code class="verbatim">~/.emacs.d/private/snippets&lt;/code> (conditional to the value of &lt;code class="verbatim">auto-completion-private-snippets-directory&lt;/code>)&lt;/li>
&lt;li>&lt;code class="verbatim">~/.spacemacs.d/snippets&lt;/code> (conditional to the existence of &lt;code class="verbatim">~/.spacemacs.d&lt;/code> directory)&lt;/li>
&lt;/ul>
&lt;p>You can provide additional directories by setting the variable
&lt;code class="verbatim">auto-completion-private-snippets-directory&lt;/code> which can take a string in case of
a single path or a list of paths.
If its value is &lt;code class="verbatim">nil&lt;/code> then the path &lt;code class="verbatim">~/.emacs.d/private/snippets&lt;/code> is used.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-3">
&lt;h3 id="headline-8">
Show snippets in auto-completion popup
&lt;/h3>
&lt;div id="outline-text-headline-8" class="outline-text-3">
&lt;p>By default, snippets are not shown in the auto-completion popup. To show them in
the popup, set the variable &lt;code class="verbatim">auto-completion-enable-snippets-in-popup&lt;/code> to &lt;code class="verbatim">t&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((auto-completion :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-enable-snippets-in-popup &lt;span style="color:#66d9ef">t&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-9" class="outline-3">
&lt;h3 id="headline-9">
Tooltips
&lt;/h3>
&lt;div id="outline-text-headline-9" class="outline-text-3">
&lt;p>To enable automatic docstring tooltips set &lt;code class="verbatim">auto-completion-enable-help-tooltip&lt;/code>
to &lt;code class="verbatim">t&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq-default dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((auto-completion :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-enable-help-tooltip &lt;span style="color:#66d9ef">t&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
To enable manual non-automatic invocation of docstring tooltips, set it to
&lt;code class="verbatim">manual&lt;/code>. The tooltip can be invoked manually by pressing &lt;code>M-h&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq-default dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((auto-completion :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-enable-help-tooltip &lt;span style="color:#e6db74">&amp;#39;manual&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-3">
&lt;h3 id="headline-10">
Sort results by usage
&lt;/h3>
&lt;div id="outline-text-headline-10" class="outline-text-3">
&lt;p>To enable sorting auto-completion results by their usage frequency set
&lt;code class="verbatim">auto-completion-enable-sort-by-usage&lt;/code> to &lt;code class="verbatim">t&lt;/code>.
This feature is provided by the &lt;a href="https://github.com/company-mode/company-statistics">company-statistics&lt;/a> package when &lt;code class="verbatim">company&lt;/code>
is used.
The variable has no effect when &lt;code class="verbatim">auto-complete&lt;/code> is used.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq-default dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((auto-completion :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> auto-completion-enable-sort-by-usage &lt;span style="color:#66d9ef">t&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-11" class="outline-3">
&lt;h3 id="headline-11">
Enable company or auto-complete globally
&lt;/h3>
&lt;div id="outline-text-headline-11" class="outline-text-3">
&lt;p>By default Spacemacs enables auto-completion explicitly for each supported
major-mode, it means that &lt;code class="verbatim">company&lt;/code> and &lt;code class="verbatim">auto-complete&lt;/code> are not enabled
globally, it allows more flexibility to choose an auto-completion engine
for a given mode.&lt;/p>
&lt;p>
You may want to enable company globally to get auto-completion
everywhere even in the modes which are not configured by Spacemacs. To do
so, you just have to add &lt;code class="verbatim">(global-company-mode)&lt;/code> in the
&lt;code class="verbatim">dotspacemacs/user-config&lt;/code> function of your dotfile.&lt;/p>
&lt;p>
Note that if you want to enable &lt;code class="verbatim">auto-complete&lt;/code> globally you will have to
disable &lt;code class="verbatim">company&lt;/code> first, see the next section to do so.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-3">
&lt;h3 id="headline-12">
Replacing company by auto-complete
&lt;/h3>
&lt;div id="outline-text-headline-12" class="outline-text-3">
&lt;p>You can disable &lt;code class="verbatim">company&lt;/code> by adding it to the &lt;code class="verbatim">dotspacemacs-excluded-packages&lt;/code>
variable, then you are free to enable &lt;code class="verbatim">auto-complete&lt;/code> globally.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-13" class="outline-3">
&lt;h3 id="headline-13">
Add auto-completion in a layer
&lt;/h3>
&lt;div id="outline-text-headline-13" class="outline-text-3">
&lt;p>Here is an example to add &lt;code class="verbatim">company&lt;/code> auto-completion to python buffers via the
package &lt;code class="verbatim">company-anaconda&lt;/code>.&lt;/p>
&lt;p>
In the file &lt;code class="verbatim">packages.el&lt;/code> of the python layer:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Add the relevant packages to the layer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; here it is `company-anaconda&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq python-packages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (company-anaconda :toggle (configuration-layer/package-used-p &lt;span style="color:#e6db74">&amp;#39;company&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (defun python/init-company-anaconda ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (use-package company-anaconda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :defer &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (spacemacs|add-company-backends
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :backends company-anaconda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> :modes python-mode)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-3">
&lt;h3 id="headline-14">
Completion back ends
&lt;/h3>
&lt;div id="outline-text-headline-14" class="outline-text-3">
&lt;p>Many spacemacs layers (e.g., python, html, haskell) configure company mode
backends to provide mode-specific completion. These modes will include
completion backends specified in the `spacemacs-default-company-backends`
variable. The defaults should work well, but you can configure this variable in
your &lt;code class="verbatim">.spacemacs&lt;/code> file with (e.g.)&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((auto-completion :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spacemacs-default-company-backends &lt;span style="color:#f92672">&amp;#39;&lt;/span>(company-files company-capf))))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-3">
&lt;h3 id="headline-15">
Improved faces
&lt;/h3>
&lt;div id="outline-text-headline-15" class="outline-text-3">
&lt;p>For nicer-looking faces, try adding the following to `custom-set-faces` in your dotspacemacs file.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(custom-set-faces
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(company-tooltip-common
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#66d9ef">t&lt;/span> (:inherit company-tooltip :weight bold :underline &lt;span style="color:#66d9ef">nil&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(company-tooltip-common-selection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#66d9ef">t&lt;/span> (:inherit company-tooltip-selection :weight bold :underline &lt;span style="color:#66d9ef">nil&lt;/span>)))))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-16" class="outline-2">
&lt;h2 id="headline-16">
Key Bindings
&lt;/h2>
&lt;div id="outline-text-headline-16" class="outline-text-2">
&lt;div id="outline-container-headline-17" class="outline-3">
&lt;h3 id="headline-17">
Company
&lt;/h3>
&lt;div id="outline-text-headline-17" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-d&lt;/code>&lt;/td>
&lt;td>open minibuffer with documentation of thing at point in company dropdown&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-/&lt;/code>&lt;/td>
&lt;td>show candidates in Helm (for fuzzy searching)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-M-/&lt;/code>&lt;/td>
&lt;td>filter the company dropdown menu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M-h&lt;/code>&lt;/td>
&lt;td>show current candidate&amp;#39;s documentation in a tooltip (requires &lt;code class="verbatim">auto-completion-enable-help-tooltip&lt;/code>)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
Vim Style:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-j&lt;/code>&lt;/td>
&lt;td>(vim style) go down in company dropdown menu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-k&lt;/code>&lt;/td>
&lt;td>(vim style) go up in company dropdown menu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-l&lt;/code>&lt;/td>
&lt;td>(vim style) complete selection&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
Emacs style:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-n&lt;/code>&lt;/td>
&lt;td>(emacs style) go down in company dropdown menu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-p&lt;/code>&lt;/td>
&lt;td>(emacs style) go up in company dropdown menu&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-18" class="outline-3">
&lt;h3 id="headline-18">
Auto-complete
&lt;/h3>
&lt;div id="outline-text-headline-18" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-j&lt;/code>&lt;/td>
&lt;td>select next candidate&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-k&lt;/code>&lt;/td>
&lt;td>select previous candidate&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>TAB&lt;/code>&lt;/td>
&lt;td>expand selection or select next candidate&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>S-TAB&lt;/code>&lt;/td>
&lt;td>select previous candidate&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>RET&lt;/code>&lt;/td>
&lt;td>complete word, if word is already completed insert a carriage return&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-19" class="outline-3">
&lt;h3 id="headline-19">
Yasnippet
&lt;/h3>
&lt;div id="outline-text-headline-19" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>M-/&lt;/code>&lt;/td>
&lt;td>Expand a snippet if text before point is a prefix of a snippet&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC i s&lt;/code>&lt;/td>
&lt;td>List all current yasnippets for inserting&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-20" class="outline-3">
&lt;h3 id="headline-20">
Auto-yasnippet
&lt;/h3>
&lt;div id="outline-text-headline-20" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC i S c&lt;/code>&lt;/td>
&lt;td>create a snippet from an active region&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC i S e&lt;/code>&lt;/td>
&lt;td>Expand the snippet just created with &lt;code>SPC i y&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC i S w&lt;/code>&lt;/td>
&lt;td>Write the snippet inside &lt;code class="verbatim">private/snippets&lt;/code> directory for future sessions&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-chinese-in-emacs.org</title><link>/posts/emacs/using-chinese-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-chinese-in-emacs/</guid><description>Description This layer adds support for traditional Chinese script to Spacemacs.
Features: Support for the Pinyin(拼音) input method via chinese-pyim. Support for the Wubi(五笔) input method via chinese-wbim. Integration of the native input method framework fcitx via cute-jumper/fcitx.el. Integration of the Youdao(有道) Dictionary via youdao-dictionary. Support for file searches in dired using Chinese Pinyin characters via find-by-pinyin-dired. Support for jumping to Chinese Pinyin characters with ace-jump-mode via ace-pinyin. Automatic visual separation of Chinese and Latin characters via coldnew/pangu-spacing.</description><content>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer adds support for traditional Chinese script to Spacemacs.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>Support for the &lt;a href="https://en.wikipedia.org/wiki/Pinyin">Pinyin(拼音)&lt;/a> input method via &lt;a href="https://github.com/tumashu/chinese-pyim">chinese-pyim&lt;/a>.&lt;/li>
&lt;li>Support for the &lt;a href="https://en.wikipedia.org/wiki/Wubi_method">Wubi(五笔)&lt;/a> input method via &lt;a href="https://github.com/andyque/chinese-wbim">chinese-wbim&lt;/a>.&lt;/li>
&lt;li>Integration of the native input method framework &lt;a href="https://en.wikipedia.org/wiki/Fcitx">fcitx&lt;/a> via &lt;a href="https://github.com/cute-jumper/fcitx.el">cute-jumper/fcitx.el&lt;/a>.&lt;/li>
&lt;li>Integration of the &lt;a href="https://en.wikipedia.org/wiki/Youdao">Youdao(有道) Dictionary&lt;/a> via &lt;a href="https://github.com/xuchunyang/youdao-dictionary.el">youdao-dictionary&lt;/a>.&lt;/li>
&lt;li>Support for file searches in &lt;code class="verbatim">dired&lt;/code> using Chinese Pinyin characters via &lt;a href="https://github.com/redguardtoo/find-by-pinyin-dired">find-by-pinyin-dired&lt;/a>.&lt;/li>
&lt;li>Support for jumping to Chinese Pinyin characters with &lt;code class="verbatim">ace-jump-mode&lt;/code> via &lt;a href="https://github.com/cute-jumper/ace-pinyin">ace-pinyin&lt;/a>.&lt;/li>
&lt;li>Automatic visual separation of Chinese and Latin characters via &lt;a href="https://github.com/coldnew/pangu-spacing">coldnew/pangu-spacing&lt;/a>.&lt;/li>
&lt;li>Automatic joining of consecutive Chinese lines into a single long line without unwanted space when exporting org-mode to html.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
Install
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;div id="outline-container-headline-5" class="outline-3">
&lt;h3 id="headline-5">
Layer
&lt;/h3>
&lt;div id="outline-text-headline-5" class="outline-text-3">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">chinese&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Configuration
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;div id="outline-container-headline-7" class="outline-4">
&lt;h4 id="headline-7">
Configure the Default Input Method(配置默认中文输入法)
&lt;/h4>
&lt;div id="outline-text-headline-7" class="outline-text-4">
&lt;p>The default Chinese input method is &lt;code class="verbatim">Chinese-pyim&lt;/code>, if you are a Wubi(五笔) user,
you could set the variable &lt;code class="verbatim">chinese-default-input-method&lt;/code> to &lt;code class="verbatim">wubi&lt;/code>:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (chinese :variables chinese-default-input-method &lt;span style="color:#e6db74">&amp;#39;wubi&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-4">
&lt;h4 id="headline-8">
Configure the &lt;code class="verbatim">Chinese-pyim&lt;/code> Input Method(配置中文拼音输入法)
&lt;/h4>
&lt;div id="outline-text-headline-8" class="outline-text-4">
&lt;p>The first time you use &lt;code class="verbatim">Chinese-pyim&lt;/code>, you need to install the lexicon(词库)
file. Call &lt;code class="verbatim">pyim-dicts-manager&lt;/code> to open up the settings buffer and
press &lt;code class="verbatim">i e&lt;/code> to install the default lexicon. The lexicon is about 20MB, so you
should be patient when downloading starts. After the lexicon file is downloaded,
just press &lt;code class="verbatim">s&lt;/code> to save and &lt;code class="verbatim">R&lt;/code> to restart configuration.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-9" class="outline-4">
&lt;h4 id="headline-9">
Enable fcitx
&lt;/h4>
&lt;div id="outline-text-headline-9" class="outline-text-4">
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>((chinese :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chinese-enable-fcitx &lt;span style="color:#66d9ef">t&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>If you don’t need to type Chinese in minibuffer, you can temporarily disable fcitx in the minibuffer
with the following configuration.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (fcitx-aggressive-setup)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-5">
&lt;h5 id="headline-10">
Requirement
&lt;/h5>
&lt;div id="outline-text-headline-10" class="outline-text-5">
&lt;div id="outline-container-headline-11" class="outline-6">
&lt;h6 id="headline-11">
Linux
&lt;/h6>
&lt;div id="outline-text-headline-11" class="outline-text-6">
&lt;p>You need to install &lt;code class="verbatim">fcitx&lt;/code> and &lt;code class="verbatim">fcitx-remote&lt;/code> on your machine.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-6">
&lt;h6 id="headline-12">
Mac OS X
&lt;/h6>
&lt;div id="outline-text-headline-12" class="outline-text-6">
&lt;p>We don&amp;#39;t have a &lt;code class="verbatim">fcitx&lt;/code> in OS X yet but we already added an emulation called
&lt;code class="verbatim">fcitx-remote&lt;/code> to make you happy with other Chinese input-methods.&lt;/p>
&lt;p>
You can install &lt;a href="https://github.com/CodeFalling/fcitx-remote-for-osx">fcitx-remote-for-osx&lt;/a> from homebrew.&lt;/p>
&lt;div class="src src-shell">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span> brew install fcitx-remote-for-osx --with-input-method&lt;span style="color:#f92672">=&lt;/span>baidu-pinyin&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
&lt;code class="verbatim">--with-input-method=baidu-pinyin&lt;/code> means install for Baidu-pinyin Input Method.&lt;/p>
&lt;p>
You can use &lt;code class="verbatim">brew info fcitx-remote-for-osx&lt;/code> to get more options info for input
method support.&lt;/p>
&lt;pre class="example">
--with-input-method=
Select input method: baidu-pinyin(default), baidu-wubi, sogou-pinyin, qq-wubi, squirrel-rime, osx-pinyin
&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-13" class="outline-6">
&lt;h6 id="headline-13">
Windows
&lt;/h6>
&lt;div id="outline-text-headline-13" class="outline-text-6">
&lt;p>In order to use &lt;code class="verbatim">fcitx.el&lt;/code> in Windows, you should install &lt;a href="https://github.com/cute-jumper/fcitx-remote-for-windows">fcitx-remote-for-windows&lt;/a>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-4">
&lt;h4 id="headline-14">
Enable YouDao(有道) Dictionary(激活有道字典)
&lt;/h4>
&lt;div id="outline-text-headline-14" class="outline-text-4">
&lt;p>The YouDao Dictionary is disabled by default, if you want enable it.
You should set &lt;code class="verbatim">chinese-enable-youdao-dict&lt;/code> to &lt;code class="verbatim">t&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>((chinese :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chinese-enable-youdao-dict &lt;span style="color:#66d9ef">t&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-4">
&lt;h4 id="headline-15">
Set monospaced font size(设置等宽字体）
&lt;/h4>
&lt;div id="outline-text-headline-15" class="outline-text-4">
&lt;p>If you are mixing Chinese script with Latin script, the text is not perfectly
aligned in org table. That&amp;#39;s because normally the Chinese font size is not equal
to the Latin font size. You could call &lt;code class="verbatim">spacemacs//set-monospaced-font&lt;/code> with
your own Chinese font name in &lt;code class="verbatim">dotspacemacs/user-config&lt;/code> function.&lt;/p>
&lt;p>
Example configuration:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; Note: The Hiragino Sans GB is bundled with MacOS X.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; If you are not using MacOS X, you should change it to another Chinese font name.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(spacemacs//set-monospaced-font &lt;span style="color:#e6db74">&amp;#34;Source Code Pro&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hiragino Sans GB&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-16" class="outline-4">
&lt;h4 id="headline-16">
Enable/Disable ace-pinyin in &lt;code class="verbatim">avy-goto-char&lt;/code>
&lt;/h4>
&lt;div id="outline-text-headline-16" class="outline-text-4">
&lt;p>You can use &lt;code class="verbatim">avy-goto-char&lt;/code> with pinyin supported by default, if you want to
disable it. You can set &lt;code class="verbatim">chinese-enable-avy-pinyin&lt;/code> to &lt;code class="verbatim">nil&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>((chinese :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chinese-enable-avy-pinyin &lt;span style="color:#66d9ef">nil&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-17" class="outline-2">
&lt;h2 id="headline-17">
Key Bindings
&lt;/h2>
&lt;div id="outline-text-headline-17" class="outline-text-2">
&lt;p>Currently, there are no built-in key bindings for this layer. You could define
your own preference.&lt;/p>
&lt;p>
Here are a few suggested key bindings (remember that &lt;code>SPC o&lt;/code> is reserved for
personal usage, spacemacs won´t put any binding under this prefix):&lt;/p>
&lt;div id="outline-container-headline-18" class="outline-3">
&lt;h3 id="headline-18">
Youdao Dictionary
&lt;/h3>
&lt;div id="outline-text-headline-18" class="outline-text-3">
&lt;p>Bind &lt;code>SPC o y&lt;/code> to &lt;code class="verbatim">youdao-dictionary-search-at-point+&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-19" class="outline-3">
&lt;h3 id="headline-19">
Find-by-pinyin-dired
&lt;/h3>
&lt;div id="outline-text-headline-19" class="outline-text-3">
&lt;p>Bind &lt;code>SPC o d&lt;/code> to &lt;code class="verbatim">find-by-pinyin-dired&lt;/code>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-chrome-in-emacs.org</title><link>/posts/emacs/using-chrome-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-chrome-in-emacs/</guid><description>Description This layer provides some integration with the Google Chrome browser.
Features: Edit text boxes with Emacs using edit-server Write markdown in Emacs and realtime show in chrome using flymd gmail message mode uses standard markdown keybindings Install Layer To use this configuration layer, add it to your ~/.spacemacs. You will need to add chrome to the existing dotspacemacs-configuration-layers list in this file.
Chrome extension edit-server is a server that responds to edit requests sent Chrome via the Google Chrome extension Edit with Emacs.</description><content>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer provides some integration with the Google Chrome browser.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>Edit text boxes with Emacs using &lt;a href="https://github.com/stsquad/emacs_chrome">edit-server&lt;/a>&lt;/li>
&lt;li>Write markdown in Emacs and realtime show in chrome using &lt;a href="https://github.com/mola-T/flymd">flymd&lt;/a>&lt;/li>
&lt;li>gmail message mode uses standard markdown keybindings&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
Install
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;div id="outline-container-headline-5" class="outline-3">
&lt;h3 id="headline-5">
Layer
&lt;/h3>
&lt;div id="outline-text-headline-5" class="outline-text-3">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">chrome&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Chrome extension
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;p>&lt;a href="https://github.com/stsquad/emacs_chrome">edit-server&lt;/a> is a server that responds to edit requests sent Chrome via the
Google Chrome extension &lt;a href="https://chrome.google.com/webstore/detail/edit-with-emacs/ljobjlafonikaiipfkggjbhkghgicgoh">Edit with Emacs&lt;/a>. You have to install this extension.&lt;/p>
&lt;p>
More information can be found on &lt;a href="http://www.emacswiki.org/emacs/Edit_with_Emacs">Emacs Wiki&lt;/a>.&lt;/p>
&lt;p>
The edit server is configured to start automatically when Spacemacs starts.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-2">
&lt;h2 id="headline-7">
Configuration
&lt;/h2>
&lt;div id="outline-text-headline-7" class="outline-text-2">
&lt;p>Use &lt;code class="verbatim">edit-server-url-major-mode-alist&lt;/code> to choose a major mode initialization
function based on &lt;code class="verbatim">edit-server-url&lt;/code>, or fall back to
&lt;code class="verbatim">edit-server-default-major-mode&lt;/code> that has a current value of &lt;code class="verbatim">markdown-mode&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (defun dotspacemacs/user-config ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Open github text areas as org buffers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; currently they are opened as markdown&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq edit-server-url-major-mode-alist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((&lt;span style="color:#e6db74">&amp;#34;github\\.com&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> org-mode))))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
To change frame defaults (width, height, etc. use &lt;code class="verbatim">edit-server-new-frame-alist&lt;/code>)&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;edit-server-new-frame-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(width &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">140&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (add-to-list &lt;span style="color:#e6db74">&amp;#39;edit-server-new-frame-alist&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(height &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
If you want Emacs to switch focus to Chrome after done editing, you can utilize
&lt;code class="verbatim">edit-server-done-hook&lt;/code>.&lt;/p>
&lt;p>
Emacs cannot control focus of windows for external apps, so you need to use some
sort of command line window manager like &lt;code class="verbatim">wmctrl&lt;/code>.&lt;/p>
&lt;p>
The following example works on OS X:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (add-hook &lt;span style="color:#e6db74">&amp;#39;edit-server-done-hook&lt;/span> (lambda () (shell-command &lt;span style="color:#e6db74">&amp;#34;open -a \&amp;#34;Google Chrome\&amp;#34;&amp;#34;&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-2">
&lt;h2 id="headline-8">
Key bindings
&lt;/h2>
&lt;div id="outline-text-headline-8" class="outline-text-2">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC a F&lt;/code>&lt;/td>
&lt;td>flymd-flyit&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
&lt;strong>Note:&lt;/strong> You need to kill all google chrome process before using &lt;code class="verbatim">flymd-flyit&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div></content></item><item><title>using-clojure-in-emacs.org</title><link>/posts/emacs/using-clojure-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-clojure-in-emacs/</guid><description>Clojure layer Table of Contents Clojure layer
Description
Features: Install
Layer Pretty Symbols CIDER and clj-refactor
Quick Start with boot Quick Start with lein More details Usage
Cheatsheet Structuraly safe editing Key Bindings
Working with clojure files (barfage, slurpage &amp;amp; more) Leader
Documentation Evaluation Goto REPL Tests Toggles Debugging Refactoring Reformatting CIDER Buffers
stacktrace-mode inspector-mode test-report-mode Sayid Buffers
sayid-mode sayid-traced-mode sayid-pprint cider-repl-mode Development Notes
Indentation Description This layer adds support for Clojure language using CIDER.</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Clojure layer
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
Table of Contents
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="#clojure-layer">Clojure layer&lt;/a>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="#description">Description&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#features">Features:&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#install">Install&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#layer">Layer&lt;/a>&lt;/li>
&lt;li>&lt;a href="#pretty-symbols">Pretty Symbols&lt;/a>&lt;/li>
&lt;li>
&lt;p>&lt;a href="#cider-and-clj-refactor">CIDER and clj-refactor&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#quick-start-with-boot">Quick Start with boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="#quick-start-with-lein">Quick Start with lein&lt;/a>&lt;/li>
&lt;li>&lt;a href="#more-details">More details&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#usage">Usage&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#cheatsheet">Cheatsheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="#structuraly-safe-editing">Structuraly safe editing&lt;/a>&lt;/li>
&lt;li>
&lt;p>&lt;a href="#key-bindings">Key Bindings&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#working-with-clojure-files-barfage-slurpage--more">Working with clojure files (barfage, slurpage &amp;amp; more)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#leader">Leader&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#documentation">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#evaluation">Evaluation&lt;/a>&lt;/li>
&lt;li>&lt;a href="#goto">Goto&lt;/a>&lt;/li>
&lt;li>&lt;a href="#repl">REPL&lt;/a>&lt;/li>
&lt;li>&lt;a href="#tests">Tests&lt;/a>&lt;/li>
&lt;li>&lt;a href="#toggles">Toggles&lt;/a>&lt;/li>
&lt;li>&lt;a href="#debugging">Debugging&lt;/a>&lt;/li>
&lt;li>&lt;a href="#refactoring">Refactoring&lt;/a>&lt;/li>
&lt;li>&lt;a href="#reformatting">Reformatting&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#cider-buffers">CIDER Buffers&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#stacktrace-mode">stacktrace-mode&lt;/a>&lt;/li>
&lt;li>&lt;a href="#inspector-mode">inspector-mode&lt;/a>&lt;/li>
&lt;li>&lt;a href="#test-report-mode">test-report-mode&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#sayid-buffers">Sayid Buffers&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#sayid-mode">sayid-mode&lt;/a>&lt;/li>
&lt;li>&lt;a href="#sayid-traced-mode">sayid-traced-mode&lt;/a>&lt;/li>
&lt;li>&lt;a href="#sayid-pprint">sayid-pprint&lt;/a>&lt;/li>
&lt;li>&lt;a href="#cider-repl-mode">cider-repl-mode&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#development-notes">Development Notes&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#indentation">Indentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Description
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;p>This layer adds support for &lt;a href="https://clojure.org/">Clojure&lt;/a> language using &lt;a href="https://github.com/clojure-emacs/cider">CIDER&lt;/a>.&lt;/p>
&lt;div id="outline-container-headline-4" class="outline-4">
&lt;h4 id="headline-4">
Features:
&lt;/h4>
&lt;div id="outline-text-headline-4" class="outline-text-4">
&lt;ul>
&lt;li>REPL via &lt;a href="https://github.com/clojure-emacs/cider">CIDER&lt;/a>&lt;/li>
&lt;li>Code formatting via &lt;a href="https://github.com/clojure-emacs/cider">CIDER&lt;/a> using &lt;a href="https://github.com/weavejester/cljfmt">Cljfmt&lt;/a>&lt;/li>
&lt;li>Refactoring via &lt;a href="https://github.com/clojure-emacs/clj-refactor.el">clj-refactor&lt;/a>&lt;/li>
&lt;li>Aligning of code forms via &lt;a href="https://github.com/clojure-emacs/clojure-mode">clojure-mode&lt;/a>&lt;/li>
&lt;li>Debugging with &lt;a href="https://bpiel.github.io/sayid/">sayid&lt;/a>&lt;/li>
&lt;li>Clojure cheatsheet&lt;/li>
&lt;li>Structuraly safe editing using optional &lt;a href="https://github.com/luxbock/evil-cleverparens">evil-cleverparens&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-3">
&lt;h3 id="headline-5">
Install
&lt;/h3>
&lt;div id="outline-text-headline-5" class="outline-text-3">
&lt;div id="outline-container-headline-6" class="outline-4">
&lt;h4 id="headline-6">
Layer
&lt;/h4>
&lt;div id="outline-text-headline-6" class="outline-text-4">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">clojure&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-4">
&lt;h4 id="headline-7">
Pretty Symbols
&lt;/h4>
&lt;div id="outline-text-headline-7" class="outline-text-4">
&lt;p>Pretty symbols for anonymous functions, set literals and partial, like &lt;code class="verbatim">(λ [a]
(+ a 5))&lt;/code>, &lt;code class="verbatim">ƒ(+ % 5)&lt;/code>, &lt;code class="verbatim">∈{2 4 6}&lt;/code> and &lt;code class="verbatim">Ƥ&lt;/code>.&lt;/p>
&lt;p>
To enable this feature, add the following snippet to the
&lt;code class="verbatim">dotspacemacs/user-config&lt;/code> section of your &lt;code class="verbatim">~/.spacemacs&lt;/code> file:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq clojure-enable-fancify-symbols &lt;span style="color:#66d9ef">t&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Or set this variable when loading the configuration layer:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((clojure :variables clojure-enable-fancify-symbols &lt;span style="color:#66d9ef">t&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-4">
&lt;h4 id="headline-8">
CIDER and clj-refactor
&lt;/h4>
&lt;div id="outline-text-headline-8" class="outline-text-4">
&lt;p>Note that recent versions of CIDER automatically inject the required
dependencies into your boot or leiningen configuration when you connect to the
REPL. Thus, the configuration instructions below only apply to CIDER 0.10 and
older. Most users should be able to just run &lt;code>SPC m s i&lt;/code> to connect to the CIDER
REPL and skip the rest of this section.&lt;/p>
&lt;div id="outline-container-headline-9" class="outline-5">
&lt;h5 id="headline-9">
Quick Start with boot
&lt;/h5>
&lt;div id="outline-text-headline-9" class="outline-text-5">
&lt;ul>
&lt;li>Install &lt;code class="verbatim">boot&lt;/code> (see &lt;a href="https://github.com/boot-clj/boot#user-content-install)">https://github.com/boot-clj/boot#user-content-install)&lt;/a>&lt;/li>
&lt;li>Create a file &lt;code class="verbatim">~/.boot/profile.boot&lt;/code> with the following content:&lt;/li>
&lt;/ul>
&lt;div class="src src-clojure">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-clojure" data-lang="clojure">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#a6e22e">require&lt;/span> &lt;span style="color:#e6db74">&amp;#39;boot.repl&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#a6e22e">swap!&lt;/span> boot.repl/*default-dependencies* conj
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>[refactor-nrepl &lt;span style="color:#e6db74">&amp;#34;1.2.0-SNAPSHOT&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>[cider/cider-nrepl &lt;span style="color:#e6db74">&amp;#34;0.10.0-SNAPSHOT&amp;#34;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#a6e22e">swap!&lt;/span> boot.repl/*default-middleware* conj
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;refactor-nrepl.middleware/wrap-refactor&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>Run &lt;code>SPC m s i&lt;/code> in any of the clojure source files to connect to the CIDER
REPL. Note that a build.boot file must be present in your working directory
for Cider to recognize the presence of boot.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-5">
&lt;h5 id="headline-10">
Quick Start with lein
&lt;/h5>
&lt;div id="outline-text-headline-10" class="outline-text-5">
&lt;ul>
&lt;li>Install &lt;code class="verbatim">lein&lt;/code> version 2.5.2 or newer (see &lt;a href="https://leiningen.org/#install)">https://leiningen.org/#install)&lt;/a>&lt;/li>
&lt;li>Create a file &lt;code class="verbatim">~/.lein/profiles.clj&lt;/code> with the following content:&lt;/li>
&lt;/ul>
&lt;div class="src src-clojure">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-clojure" data-lang="clojure">&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">:repl&lt;/span> {&lt;span style="color:#e6db74">:plugins&lt;/span> [[cider/cider-nrepl &lt;span style="color:#e6db74">&amp;#34;0.10.0-SNAPSHOT&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [refactor-nrepl &lt;span style="color:#e6db74">&amp;#34;2.0.0-SNAPSHOT&amp;#34;&lt;/span>]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">:dependencies&lt;/span> [[alembic &lt;span style="color:#e6db74">&amp;#34;0.3.2&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [org.clojure/tools.nrepl &lt;span style="color:#e6db74">&amp;#34;0.2.12&amp;#34;&lt;/span>]]}}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>After creating your project with &lt;code>lein new app &amp;lt;projectname&amp;gt;&lt;/code> or
importing an existing project, run &lt;code>SPC m s i&lt;/code> in any of the clojure
source files to connect to the CIDER REPL.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-11" class="outline-5">
&lt;h5 id="headline-11">
More details
&lt;/h5>
&lt;div id="outline-text-headline-11" class="outline-text-5">
&lt;p>More info regarding installation of nREPL middleware can be found here:&lt;/p>
&lt;ul>
&lt;li>CIDER: &lt;a href="https://github.com/clojure-emacs/cider#installation">cider_install&lt;/a>&lt;/li>
&lt;li>clj-refactor: &lt;a href="https://github.com/clojure-emacs/refactor-nrepl">refactor-nrepl&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-3">
&lt;h3 id="headline-12">
Usage
&lt;/h3>
&lt;div id="outline-text-headline-12" class="outline-text-3">
&lt;div id="outline-container-headline-13" class="outline-4">
&lt;h4 id="headline-13">
Cheatsheet
&lt;/h4>
&lt;div id="outline-text-headline-13" class="outline-text-4">
&lt;p>This layers installs the &lt;a href="https://github.com/clojure-emacs/clojure-cheatsheet">clojure-cheathseet&lt;/a> package which embeds this useful
&lt;a href="https://clojure.org/api/cheatsheet">cheatsheet&lt;/a> into Emacs.&lt;/p>
&lt;p>
Type &lt;code>SPC m h c&lt;/code> to display the cheatsheet then type in some terms (space
separated) to narrow down the list. For example, try typing in sort map to see
some functions that deal with sorting maps.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-4">
&lt;h4 id="headline-14">
Structuraly safe editing
&lt;/h4>
&lt;div id="outline-text-headline-14" class="outline-text-4">
&lt;p>This layer adds support for &lt;code class="verbatim">evil-cleverparens&lt;/code> which allows to safely edit
lisp code by keeping the s-expressions balanced.&lt;/p>
&lt;p>
By default this mode is not activated. You can turn it on locally on the active
buffer with &lt;code>SPC m T s&lt;/code> (&lt;code class="verbatim">s&lt;/code> for safe).&lt;/p>
&lt;p>
To turn it on automatically for all &lt;code class="verbatim">clojure&lt;/code> buffers call the following
function in your &lt;code class="verbatim">dotspacemacs/user-config&lt;/code> function:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(spacemacs/toggle-evil-safe-lisp-structural-editing-on-register-hook-clojure-mode)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
or to enable it for all supported modes:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(spacemacs/toggle-evil-safe-lisp-structural-editing-on-register-hooks)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
When enabled the symbol &lt;code class="verbatim">🆂&lt;/code> should be displayed in the mode-line.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-4">
&lt;h4 id="headline-15">
Key Bindings
&lt;/h4>
&lt;div id="outline-text-headline-15" class="outline-text-4">
&lt;div id="outline-container-headline-16" class="outline-5">
&lt;h5 id="headline-16">
Working with clojure files (barfage, slurpage &amp;amp; more)
&lt;/h5>
&lt;div id="outline-text-headline-16" class="outline-text-5">
&lt;p>Spacemacs comes with a special &lt;code class="verbatim">lisp-state&lt;/code> for working with lisp code that
supports slurpage, barfage and more tools you&amp;#39;ll likely want when working with
lisp.&lt;/p>
&lt;p>
As this state works the same for all files, the documentation is in global
&lt;a href="https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org#lisp-key-bindings">DOCUMENTATION.org&lt;/a>. In general, use &lt;code>SPC k&lt;/code> to interact with the lisp-state.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-17" class="outline-3">
&lt;h3 id="headline-17">
Leader
&lt;/h3>
&lt;div id="outline-text-headline-17" class="outline-text-3">
&lt;div id="outline-container-headline-18" class="outline-4">
&lt;h4 id="headline-18">
Documentation
&lt;/h4>
&lt;div id="outline-text-headline-18" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m h a&lt;/code>&lt;/td>
&lt;td>cider apropos&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h c&lt;/code>&lt;/td>
&lt;td>clojure cheatsheet&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h g&lt;/code>&lt;/td>
&lt;td>cider grimoire&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h h&lt;/code>&lt;/td>
&lt;td>cider doc&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h j&lt;/code>&lt;/td>
&lt;td>cider javadoc&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h n&lt;/code>&lt;/td>
&lt;td>cider browse ns&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-19" class="outline-4">
&lt;h4 id="headline-19">
Evaluation
&lt;/h4>
&lt;div id="outline-text-headline-19" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m e ;&lt;/code>&lt;/td>
&lt;td>eval sexp and show result as comment&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e b&lt;/code>&lt;/td>
&lt;td>eval buffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e e&lt;/code>&lt;/td>
&lt;td>eval last sexp&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e f&lt;/code>&lt;/td>
&lt;td>eval function at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e r&lt;/code>&lt;/td>
&lt;td>eval region&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e m&lt;/code>&lt;/td>
&lt;td>cider macroexpand 1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e M&lt;/code>&lt;/td>
&lt;td>cider macroexpand all&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e p&lt;/code>&lt;/td>
&lt;td>print last sexp (clojure interaction mode only)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e P&lt;/code>&lt;/td>
&lt;td>eval last sexp and pretty print result in separate buffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e w&lt;/code>&lt;/td>
&lt;td>eval last sexp and replace with result&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-20" class="outline-4">
&lt;h4 id="headline-20">
Goto
&lt;/h4>
&lt;div id="outline-text-headline-20" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m g b&lt;/code>&lt;/td>
&lt;td>go back&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g C&lt;/code>&lt;/td>
&lt;td>browse classpath&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g g&lt;/code>&lt;/td>
&lt;td>goto var&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g e&lt;/code>&lt;/td>
&lt;td>goto error&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g r&lt;/code>&lt;/td>
&lt;td>goto resource&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g n&lt;/code>&lt;/td>
&lt;td>browse namespaces&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g N&lt;/code>&lt;/td>
&lt;td>browse all namespaces&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-21" class="outline-4">
&lt;h4 id="headline-21">
REPL
&lt;/h4>
&lt;div id="outline-text-headline-21" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m ,&lt;/code>&lt;/td>
&lt;td>handle shortcut (cider-repl-handle-shortcut)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s b&lt;/code>&lt;/td>
&lt;td>send and eval buffer in REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s B&lt;/code>&lt;/td>
&lt;td>send and eval buffer and switch to REPL in &lt;code class="verbatim">insert state&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s c&lt;/code>&lt;/td>
&lt;td>connect to REPL (cider-connect) or clear repl buffer (cider-repl-clear-buffer)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s C&lt;/code>&lt;/td>
&lt;td>clear REPL (cider-find-and-clear-repl-output)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s e&lt;/code>&lt;/td>
&lt;td>send and eval last sexp in REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s E&lt;/code>&lt;/td>
&lt;td>send and eval last sexp and switch to REPL in &lt;code class="verbatim">insert state&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s f&lt;/code>&lt;/td>
&lt;td>send and eval function in REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s F&lt;/code>&lt;/td>
&lt;td>send and eval function and switch to REPL in &lt;code class="verbatim">insert state&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s i&lt;/code>&lt;/td>
&lt;td>start REPL (cider-jack-in)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s I&lt;/code>&lt;/td>
&lt;td>start clojurescript REPL (cider-jack-in-clojurescript)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s n&lt;/code>&lt;/td>
&lt;td>send and eval ns form in REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s N&lt;/code>&lt;/td>
&lt;td>send and eval ns form and switch to REPL in &lt;code class="verbatim">insert state&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s q&lt;/code>&lt;/td>
&lt;td>kill REPL (cider-quit)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s o&lt;/code>&lt;/td>
&lt;td>switch to other repl instance (cider-repl-switch-to-other)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s r&lt;/code>&lt;/td>
&lt;td>send and eval region in REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s R&lt;/code>&lt;/td>
&lt;td>send and eval region and switch to REPL in &lt;code class="verbatim">insert state&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s s&lt;/code>&lt;/td>
&lt;td>switch to REPL or jump to last file or last clj buffer from repl (cider-repl)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s x&lt;/code>&lt;/td>
&lt;td>refresh REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s X&lt;/code>&lt;/td>
&lt;td>restart REPL&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-22" class="outline-4">
&lt;h4 id="headline-22">
Tests
&lt;/h4>
&lt;div id="outline-text-headline-22" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m t a&lt;/code>&lt;/td>
&lt;td>run all tests in namespace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t r&lt;/code>&lt;/td>
&lt;td>re-run test failures for namespace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t t&lt;/code>&lt;/td>
&lt;td>run test at point&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-23" class="outline-4">
&lt;h4 id="headline-23">
Toggles
&lt;/h4>
&lt;div id="outline-text-headline-23" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m T e&lt;/code>&lt;/td>
&lt;td>toggle englighten mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m T f&lt;/code>&lt;/td>
&lt;td>toggle REPL font-locking&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m T e&lt;/code>&lt;/td>
&lt;td>toggle cider-enlighten-mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m T p&lt;/code>&lt;/td>
&lt;td>toggle REPL pretty-printing&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m T i&lt;/code>&lt;/td>
&lt;td>toggle indentation style&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m T t&lt;/code>&lt;/td>
&lt;td>toggle auto test mode&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-24" class="outline-4">
&lt;h4 id="headline-24">
Debugging
&lt;/h4>
&lt;div id="outline-text-headline-24" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m d b&lt;/code>&lt;/td>
&lt;td>instrument expression at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d e&lt;/code>&lt;/td>
&lt;td>display last stacktrace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d r&lt;/code>&lt;/td>
&lt;td>reload namespaces&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d v&lt;/code>&lt;/td>
&lt;td>inspect expression at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d i&lt;/code>&lt;/td>
&lt;td>inspect expression at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d f&lt;/code>&lt;/td>
&lt;td>query form at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d w&lt;/code>&lt;/td>
&lt;td>open sayid workspace window&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d E&lt;/code>&lt;/td>
&lt;td>one time display of value at cursor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d !&lt;/code>&lt;/td>
&lt;td>reload traces and clear sayid workspace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d c&lt;/code>&lt;/td>
&lt;td>clear workspace trace log&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d x&lt;/code>&lt;/td>
&lt;td>clear workspace traces and log&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d s&lt;/code>&lt;/td>
&lt;td>show what is currently traced&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d S&lt;/code>&lt;/td>
&lt;td>show what is currently traced in current namespace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d V&lt;/code>&lt;/td>
&lt;td>set the view&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d h&lt;/code>&lt;/td>
&lt;td>show sayid help (keybindings may not be accurate)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t y&lt;/code>&lt;/td>
&lt;td>recursively trace every namespace in given dir&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t p&lt;/code>&lt;/td>
&lt;td>trace namespaces by regex&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t b&lt;/code>&lt;/td>
&lt;td>trace current file&amp;#39;s namespace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t e&lt;/code>&lt;/td>
&lt;td>enable existing trace on current function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t E&lt;/code>&lt;/td>
&lt;td>enable existing trace on all functions&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t d&lt;/code>&lt;/td>
&lt;td>disable existing trace on current function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t D&lt;/code>&lt;/td>
&lt;td>disable existing trace on all functions&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t n&lt;/code>&lt;/td>
&lt;td>create inner trace on function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t o&lt;/code>&lt;/td>
&lt;td>create outer trace on function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t r&lt;/code>&lt;/td>
&lt;td>remove trace on function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t K&lt;/code>&lt;/td>
&lt;td>remove all traces&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-25" class="outline-4">
&lt;h4 id="headline-25">
Refactoring
&lt;/h4>
&lt;div id="outline-text-headline-25" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r ?&lt;/code>&lt;/td>
&lt;td>describe refactoring&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r a d&lt;/code>&lt;/td>
&lt;td>add declaration&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r a i&lt;/code>&lt;/td>
&lt;td>add import to ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r a m&lt;/code>&lt;/td>
&lt;td>add missing libspec&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r a p&lt;/code>&lt;/td>
&lt;td>add project dependency&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r a r&lt;/code>&lt;/td>
&lt;td>add require to ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r a u&lt;/code>&lt;/td>
&lt;td>add use to ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c (&lt;/code>&lt;/td>
&lt;td>convert coll to list&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c &amp;#39;&lt;/code>&lt;/td>
&lt;td>convert coll to quoted list&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c {&lt;/code>&lt;/td>
&lt;td>convert coll to map&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c #&lt;/code>&lt;/td>
&lt;td>convert coll to set&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c [&lt;/code>&lt;/td>
&lt;td>convert coll to vector&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c :&lt;/code>&lt;/td>
&lt;td>toggle between keyword and string&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c i&lt;/code>&lt;/td>
&lt;td>cycle if&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c n&lt;/code>&lt;/td>
&lt;td>clean ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c p&lt;/code>&lt;/td>
&lt;td>cycle privacy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r d k&lt;/code>&lt;/td>
&lt;td>destructure keys&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e c&lt;/code>&lt;/td>
&lt;td>extract constant&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e d&lt;/code>&lt;/td>
&lt;td>extract definition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e f&lt;/code>&lt;/td>
&lt;td>extract function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e l&lt;/code>&lt;/td>
&lt;td>expand let&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r f u&lt;/code>&lt;/td>
&lt;td>find usages&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r f e&lt;/code>&lt;/td>
&lt;td>create fn from example&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r h d&lt;/code>&lt;/td>
&lt;td>hotload dependency&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r i l&lt;/code>&lt;/td>
&lt;td>introduce let&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r i s&lt;/code>&lt;/td>
&lt;td>inline symbol&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r m f&lt;/code>&lt;/td>
&lt;td>move form&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r m l&lt;/code>&lt;/td>
&lt;td>move to let&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r p c&lt;/code>&lt;/td>
&lt;td>project clean&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r p f&lt;/code>&lt;/td>
&lt;td>promote function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r d&lt;/code>&lt;/td>
&lt;td>remove debug fns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r f&lt;/code>&lt;/td>
&lt;td>rename file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r l&lt;/code>&lt;/td>
&lt;td>remove let&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r r&lt;/code>&lt;/td>
&lt;td>remove unused requires&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r s&lt;/code>&lt;/td>
&lt;td>rename symbol&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r u&lt;/code>&lt;/td>
&lt;td>replace use&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r s n&lt;/code>&lt;/td>
&lt;td>sort ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r s p&lt;/code>&lt;/td>
&lt;td>sort project dependencies&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r s r&lt;/code>&lt;/td>
&lt;td>stop referring&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r s c&lt;/code>&lt;/td>
&lt;td>show changelog&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r t f&lt;/code>&lt;/td>
&lt;td>thread first all&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r t h&lt;/code>&lt;/td>
&lt;td>thread&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r t l&lt;/code>&lt;/td>
&lt;td>thread last all&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r u a&lt;/code>&lt;/td>
&lt;td>unwind all&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r u p&lt;/code>&lt;/td>
&lt;td>update project dependencies&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r u w&lt;/code>&lt;/td>
&lt;td>unwind&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-26" class="outline-4">
&lt;h4 id="headline-26">
Reformatting
&lt;/h4>
&lt;div id="outline-text-headline-26" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m f l&lt;/code>&lt;/td>
&lt;td>realign current form&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f b&lt;/code> or &lt;code>SPC m =&lt;/code>&lt;/td>
&lt;td>reformat current buffer&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-27" class="outline-3">
&lt;h3 id="headline-27">
CIDER Buffers
&lt;/h3>
&lt;div id="outline-text-headline-27" class="outline-text-3">
&lt;p>In general, &lt;code>q&lt;/code> should always quit the popped up buffer.&lt;/p>
&lt;div id="outline-container-headline-28" class="outline-4">
&lt;h4 id="headline-28">
stacktrace-mode
&lt;/h4>
&lt;div id="outline-text-headline-28" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-j&lt;/code>&lt;/td>
&lt;td>next cause&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-k&lt;/code>&lt;/td>
&lt;td>previous cause&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>TAB&lt;/code>&lt;/td>
&lt;td>cycle current cause&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>0&lt;/code>&lt;/td>
&lt;td>cycle all causes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>1&lt;/code>&lt;/td>
&lt;td>cycle cause 1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>2&lt;/code>&lt;/td>
&lt;td>cycle cause 2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>3&lt;/code>&lt;/td>
&lt;td>cycle cause 3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>4&lt;/code>&lt;/td>
&lt;td>cycle cause 4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>5&lt;/code>&lt;/td>
&lt;td>cycle cause 5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>a&lt;/code>&lt;/td>
&lt;td>toggle all&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>c&lt;/code>&lt;/td>
&lt;td>toggle clj&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>d&lt;/code>&lt;/td>
&lt;td>toggle duplicates&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>J&lt;/code>&lt;/td>
&lt;td>toggle java&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>r&lt;/code>&lt;/td>
&lt;td>toggle repl&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>T&lt;/code>&lt;/td>
&lt;td>toggle tooling&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-29" class="outline-4">
&lt;h4 id="headline-29">
inspector-mode
&lt;/h4>
&lt;div id="outline-text-headline-29" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>TAB&lt;/code>&lt;/td>
&lt;td>next inspectable object&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Shift-TAB&lt;/code>&lt;/td>
&lt;td>previous inspectable object&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>RET&lt;/code>&lt;/td>
&lt;td>inspect object&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>L&lt;/code>&lt;/td>
&lt;td>pop to the parent object&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>n&lt;/code>&lt;/td>
&lt;td>next page in paginated view&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>N&lt;/code>&lt;/td>
&lt;td>previous page in paginated view&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>r&lt;/code>&lt;/td>
&lt;td>refresh&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>s&lt;/code>&lt;/td>
&lt;td>set a new page size&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-30" class="outline-4">
&lt;h4 id="headline-30">
test-report-mode
&lt;/h4>
&lt;div id="outline-text-headline-30" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-j&lt;/code>&lt;/td>
&lt;td>next result&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-k&lt;/code>&lt;/td>
&lt;td>previous result&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>RET&lt;/code>&lt;/td>
&lt;td>jump to test&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>d&lt;/code>&lt;/td>
&lt;td>ediff test result&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>e&lt;/code>&lt;/td>
&lt;td>show stacktrace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>r&lt;/code>&lt;/td>
&lt;td>rerun failed tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>t&lt;/code>&lt;/td>
&lt;td>run test&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>T&lt;/code>&lt;/td>
&lt;td>run tests&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-31" class="outline-3">
&lt;h3 id="headline-31">
Sayid Buffers
&lt;/h3>
&lt;div id="outline-text-headline-31" class="outline-text-3">
&lt;div id="outline-container-headline-32" class="outline-4">
&lt;h4 id="headline-32">
sayid-mode
&lt;/h4>
&lt;div id="outline-text-headline-32" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>enter&lt;/code>&lt;/td>
&lt;td>pop to function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>d&lt;/code>&lt;/td>
&lt;td>def value to $s/*&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>f&lt;/code>&lt;/td>
&lt;td>query for calls to function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>F&lt;/code>&lt;/td>
&lt;td>query to calls to function with modifier&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>i&lt;/code>&lt;/td>
&lt;td>show only this instance&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>I&lt;/code>&lt;/td>
&lt;td>show only this instance with modifier&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>w&lt;/code>&lt;/td>
&lt;td>show full workspace trace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>n&lt;/code>&lt;/td>
&lt;td>jump to next call&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>N&lt;/code>&lt;/td>
&lt;td>jump to previous call&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>P&lt;/code>&lt;/td>
&lt;td>pretty print value&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C&lt;/code>&lt;/td>
&lt;td>clear workspace trace log&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>L&lt;/code> or &lt;code>Backspace&lt;/code>&lt;/td>
&lt;td>previous buffer state&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Shift-Backspace&lt;/code>&lt;/td>
&lt;td>forward buffer state&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>e&lt;/code>&lt;/td>
&lt;td>generate instance expression and put in kill ring&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>H&lt;/code>&lt;/td>
&lt;td>display help (keybindings may not be accurate)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-s v&lt;/code>&lt;/td>
&lt;td>toggle view&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-s V&lt;/code>&lt;/td>
&lt;td>set view&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-33" class="outline-4">
&lt;h4 id="headline-33">
sayid-traced-mode
&lt;/h4>
&lt;div id="outline-text-headline-33" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>enter&lt;/code>&lt;/td>
&lt;td>drill into ns at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>e&lt;/code>&lt;/td>
&lt;td>enable trace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>d&lt;/code>&lt;/td>
&lt;td>disable trace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>E&lt;/code>&lt;/td>
&lt;td>enable all traces&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>D&lt;/code>&lt;/td>
&lt;td>disable all traces&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>i&lt;/code>&lt;/td>
&lt;td>apply inner trace to function at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>o&lt;/code>&lt;/td>
&lt;td>apply outer trace to function at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>r&lt;/code>&lt;/td>
&lt;td>remove trace at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>backspace&lt;/code>&lt;/td>
&lt;td>go back to trace overview&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>h&lt;/code>&lt;/td>
&lt;td>display help (keybindings may not be accurate)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-34" class="outline-4">
&lt;h4 id="headline-34">
sayid-pprint
&lt;/h4>
&lt;div id="outline-text-headline-34" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>enter&lt;/code>&lt;/td>
&lt;td>show path in minibuffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>i&lt;/code>&lt;/td>
&lt;td>enter child node&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>o&lt;/code>&lt;/td>
&lt;td>enter parent node&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>n&lt;/code>&lt;/td>
&lt;td>enter next sibling node&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>p&lt;/code>&lt;/td>
&lt;td>enter previous sibling node&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-35" class="outline-4">
&lt;h4 id="headline-35">
cider-repl-mode
&lt;/h4>
&lt;div id="outline-text-headline-35" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-j&lt;/code>&lt;/td>
&lt;td>next input&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-k&lt;/code>&lt;/td>
&lt;td>previous input&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-36" class="outline-3">
&lt;h3 id="headline-36">
Development Notes
&lt;/h3>
&lt;div id="outline-text-headline-36" class="outline-text-3">
&lt;div id="outline-container-headline-37" class="outline-4">
&lt;h4 id="headline-37">
Indentation
&lt;/h4>
&lt;div id="outline-text-headline-37" class="outline-text-4">
&lt;p>With a &lt;a href="https://github.com/clojure-emacs/cider/blob/master/doc/indent_spec.md">new&lt;/a> functionality of Cider to read the custom indentation rules from the
var&amp;#39;s metadata, it is better for consistency reasons to not add the custom
indentation rules to Spacemacs, but to add them to the metadata of those
specific vars.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-dotemacs-in-emacs.org</title><link>/posts/emacs/using-dotemacs-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-dotemacs-in-emacs/</guid><description>Day 1 1. Using the manual to find emacs configuration convention Keybings is Ctrl h ? for further options Keybings is Ctrl h r for reading the manual #+begin_src emacs-lisp :tangle yes (info-manual ARG) ;; C-h r runs the command info-manual (found in global-map), which is an ;; interactive Lisp function in ‘info+.el’. ;; ;; It is bound to C-h r, &amp;lt;f1&amp;gt; r, &amp;lt;help&amp;gt; r, &amp;lt;menu-bar&amp;gt; &amp;lt;help-menu&amp;gt; &amp;lt;emacs-manual&amp;gt;. ;; ;; ;; Display a manual in Info mode - by default, the Emacs manual.</description><content>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Day 1
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;div id="outline-container-headline-2" class="outline-4">
&lt;h4 id="headline-2">
1. Using the manual to find emacs configuration convention
&lt;/h4>
&lt;div id="outline-text-headline-2" class="outline-text-4">
&lt;ol>
&lt;li>Keybings is &lt;code class="verbatim">Ctrl h ?&lt;/code> for further options&lt;/li>
&lt;li>Keybings is &lt;code class="verbatim">Ctrl h r&lt;/code> for reading the manual&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp :tangle yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(info-manual ARG)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; C-h r runs the command info-manual (found in global-map), which is an&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; interactive Lisp function in ‘info+.el’.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; It is bound to C-h r, &amp;lt;f1&amp;gt; r, &amp;lt;help&amp;gt; r, &amp;lt;menu-bar&amp;gt; &amp;lt;help-menu&amp;gt; &amp;lt;emacs-manual&amp;gt;.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; Display a manual in Info mode - by default, the Emacs manual.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; With a prefix arg, prompt for the manual name.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; With a numeric prefix arg, only currently visited manuals are&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; candidates.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;ol>
&lt;li>Navigating to &lt;code class="verbatim">emacs-lisp Intro&lt;/code> section&lt;/li>
&lt;li>Find the &lt;code class="verbatim">16.3&lt;/code> chapter &lt;code class="verbatim">Beginning a dotemacs File&lt;/code>&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-4">
&lt;h4 id="headline-3">
2. Beginning a dotemacs file
&lt;/h4>
&lt;div id="outline-text-headline-3" class="outline-text-4">
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;;;; The Help Key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; Control-h is the help key;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; after typing control-h, type a letter to&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; indicate the subject about which you want help.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; For an explanation of the help facility,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; type control-h two times in a row.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; To find out about any mode, type control-h m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; while in that mode. For example, to find out&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; about mail mode, enter mail mode and then type&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">; control-h m.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-4">
&lt;h4 id="headline-4">
3. Load Path
&lt;/h4>
&lt;div id="outline-text-headline-4" class="outline-text-4">
&lt;p>
If you load many extensions, as I do, then instead of specifying the
exact location of the extension file, as shown above, you can specify
that directory as part of Emacs’s ‘load-path’. Then, when Emacs loads a
file, it will search that directory as well as its default list of
directories. (The default list is specified in ‘paths.h’ when Emacs is
built.)&lt;/p>
&lt;p>
The following command adds your ‘~/emacs’ directory to the existing
load path:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+srcname: name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;;; Emacs Load Path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq load-path (&lt;span style="color:#a6e22e">cons&lt;/span> &lt;span style="color:#e6db74">&amp;#34;~/emacs&amp;#34;&lt;/span> load-path))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-4">
&lt;h4 id="headline-5">
4. Load file
&lt;/h4>
&lt;div id="outline-text-headline-5" class="outline-text-4">
&lt;p>
You can use a ‘load’ command to evaluate a complete file and thereby
install all the functions and variables in the file into Emacs. For
example:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+srcname: load-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">load&lt;/span> &lt;span style="color:#e6db74">&amp;#34;~/emacs/slowsplit&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-4">
&lt;h4 id="headline-6">
5. Keybindings
&lt;/h4>
&lt;div id="outline-text-headline-6" class="outline-text-4">
&lt;p>
Emacs uses “keymaps” to record which keys call which commands. When you
use ‘global-set-key’ to set the keybinding for a single command in all
parts of Emacs, you are specifying the keybinding in
‘current-global-map’.&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+srcname: keybindings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (global-set-key &lt;span style="color:#e6db74">&amp;#34;\C-x\C-b&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;buffer-menu&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">define-key&lt;/span> texinfo-mode-map &lt;span style="color:#e6db74">&amp;#34;\C-c\C-cg&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;texinfo-insert-@group&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>
To be continued…&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-go-in-emacs.org</title><link>/posts/emacs/using-go-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-go-in-emacs/</guid><description>GO layer
Description This layer adds extensive support for go.
Features: gofmt/goimports on file save Auto-completion using go-autocomplete (with the auto-completion layer) Source analysis using go-guru Refactoring with godoctor Edit struct field tag with gomodifytags Linting with flycheck&amp;#39;s built-in checkers or flycheck-gometalinter Coverage profile visualization Install Pre-requisites You will need gocode, godef and godoctor:
go get -u -v github.com/nsf/gocode go get -u -v github.com/rogpeppe/godef go get -u -v golang.org/x/tools/cmd/guru go get -u -v golang.</description><content>&lt;h1 class="title">&lt;p>GO layer&lt;/p>
&lt;/h1>
&lt;p>
&lt;img src="img/go.png" alt="img/go.png" title="img/go.png" />&lt;/p>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer adds extensive support for go.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>gofmt/goimports on file save&lt;/li>
&lt;li>Auto-completion using &lt;a href="https://github.com/nsf/gocode/tree/master/emacs">go-autocomplete&lt;/a> (with the &lt;code class="verbatim">auto-completion&lt;/code> layer)&lt;/li>
&lt;li>Source analysis using &lt;a href="https://docs.google.com/document/d/1_Y9xCEMj5S-7rv2ooHpZNH15JgRT5iM742gJkw5LtmQ">go-guru&lt;/a>&lt;/li>
&lt;li>Refactoring with &lt;a href="http://gorefactor.org/">godoctor&lt;/a>&lt;/li>
&lt;li>Edit struct field tag with &lt;a href="https://github.com/fatih/gomodifytags">gomodifytags&lt;/a>&lt;/li>
&lt;li>Linting with flycheck&amp;#39;s built-in checkers or flycheck-gometalinter&lt;/li>
&lt;li>Coverage profile visualization&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
Install
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;div id="outline-container-headline-5" class="outline-3">
&lt;h3 id="headline-5">
Pre-requisites
&lt;/h3>
&lt;div id="outline-text-headline-5" class="outline-text-3">
&lt;p>You will need &lt;code class="verbatim">gocode&lt;/code>, &lt;code class="verbatim">godef&lt;/code> and &lt;code class="verbatim">godoctor&lt;/code>:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> go get -u -v github.com/nsf/gocode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> go get -u -v github.com/rogpeppe/godef
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> go get -u -v golang.org/x/tools/cmd/guru
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> go get -u -v golang.org/x/tools/cmd/gorename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> go get -u -v golang.org/x/tools/cmd/goimports&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
If you wish to use &lt;code class="verbatim">gometalinter&lt;/code> set the value of &lt;code class="verbatim">go-use-gometalinter&lt;/code> to t:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (go :variables go-use-gometalinter &lt;span style="color:#66d9ef">t&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
and install the tool:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> go get -u -v github.com/alecthomas/gometalinter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gometalinter --install --update&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
For more information read &lt;a href="https://github.com/alecthomas/gometalinter/blob/master/README.md">gometalinter README.md&lt;/a>
and &lt;a href="https://github.com/favadi/flycheck-gometalinter/blob/master/README.md">flycheck-gometalinter README.md&lt;/a>&lt;/p>
&lt;p>
If you wish to use &lt;code class="verbatim">godoctor&lt;/code> for refactoring, install it too:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> go get -u -v github.com/godoctor/godoctor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> go install github.com/godoctor/godoctor&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
If you want to use &lt;code class="verbatim">gomodifytags&lt;/code> to edit field tags, install it too:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> go get -u -v github.com/fatih/gomodifytags&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Make sure that the &lt;code class="verbatim">gocode&lt;/code> executable is in your PATH. For information about
setting up &lt;code class="verbatim">$PATH&lt;/code>, check out the corresponding section in the FAQ (&lt;code>SPC h f
$PATH RET&lt;/code>).&lt;/p>
&lt;p>
For best results, make sure that the &lt;code class="verbatim">auto-completion&lt;/code> and &lt;code class="verbatim">syntax-checking&lt;/code>
layers are enabled as well.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Layer
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">go&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-2">
&lt;h2 id="headline-7">
Configuration
&lt;/h2>
&lt;div id="outline-text-headline-7" class="outline-text-2">
&lt;p>By default, go buffers are run through &lt;code class="verbatim">gofmt&lt;/code> on save. To use a different
formatter, set the value of &lt;code class="verbatim">gofmt-command&lt;/code>, e.g.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq gofmt-command &lt;span style="color:#e6db74">&amp;#34;goimports&amp;#34;&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
or&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (go :variables gofmt-command &lt;span style="color:#e6db74">&amp;#34;goimports&amp;#34;&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-3">
&lt;h3 id="headline-8">
Indentation
&lt;/h3>
&lt;div id="outline-text-headline-8" class="outline-text-3">
&lt;p>By default, the tab width in Go mode is 8 spaces. To use a different value set
the layer variable &lt;code class="verbatim">go-tab-width&lt;/code>, e.g.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (go :variables go-tab-width &lt;span style="color:#ae81ff">4&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-9" class="outline-3">
&lt;h3 id="headline-9">
Tests
&lt;/h3>
&lt;div id="outline-text-headline-9" class="outline-text-3">
&lt;p>If you&amp;#39;re using &lt;code class="verbatim">gocheck&lt;/code> in your project you can use the
&lt;code class="verbatim">go-use-gocheck-for-testing&lt;/code> variable to enable suite testing and to get single
function testing to work.&lt;/p>
&lt;p>
&lt;code class="verbatim">go-coverage-display-buffer-func&lt;/code> controls how &lt;code class="verbatim">go-coverage&lt;/code> should display
the coverage buffer. See &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Choosing-Window.html">&lt;code class="verbatim">display-buffer&lt;/code>&lt;/a> for a list of possible functions.
The default value is &lt;code class="verbatim">display-buffer-reuse-window&lt;/code>.&lt;/p>
&lt;p>
Tests are run in a compilation buffer displayed in a popup window that can be
closed by pressing &lt;code>C-g&lt;/code> from any other window. The variable
&lt;code class="verbatim">go-test-buffer-name&lt;/code> can be customized to set the output buffer name.&lt;/p>
&lt;p>
To provide additional arguments to go test, specify &lt;code class="verbatim">go-use-test-args&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (go :variables go-use-test-args &lt;span style="color:#e6db74">&amp;#34;-race -timeout 10s&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-3">
&lt;h3 id="headline-10">
Guru
&lt;/h3>
&lt;div id="outline-text-headline-10" class="outline-text-3">
&lt;p>Go Oracle has been deprecated as of October 1, 2016, it&amp;#39;s replacement is &lt;code class="verbatim">go-guru&lt;/code>.&lt;/p>
&lt;p>
If you would like to use the &lt;code class="verbatim">goguru&lt;/code> bindings in your work, you will need to
install it, and in your project you will need to set the scope with &lt;code>SPC m f o&lt;/code>.
The scope is a comma separated set of packages, and &lt;code class="verbatim">go&lt;/code>&amp;#39;s recursive operator is
supported. In addition, you can prefix with &lt;code class="verbatim">-&lt;/code> to exclude a package from
searching.&lt;/p>
&lt;p>
In addition, &lt;code class="verbatim">GOPATH&lt;/code> must be set prior to &lt;code class="verbatim">go-guru&lt;/code> initialization.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-11" class="outline-3">
&lt;h3 id="headline-11">
Autocomplete
&lt;/h3>
&lt;div id="outline-text-headline-11" class="outline-text-3">
&lt;p>&lt;code class="verbatim">gocode&lt;/code> uses the output from installed binary files to provide its suggestions.
You have a few options to ensure you always get up to date suggestions:&lt;/p>
&lt;ul>
&lt;li>Run &lt;code class="verbatim">go install ./...&lt;/code> in your package directory when you make a file change.&lt;/li>
&lt;li>Run &lt;code class="verbatim">gocode set autobuild true&lt;/code> to have gocode attempt to run &lt;code class="verbatim">go install
./...&lt;/code> for you.&lt;/li>
&lt;li>You can configure your task runner to run &lt;code class="verbatim">go install ./...&lt;/code> command on every
file change.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-2">
&lt;h2 id="headline-12">
Working with Go
&lt;/h2>
&lt;div id="outline-text-headline-12" class="outline-text-2">
&lt;div id="outline-container-headline-13" class="outline-3">
&lt;h3 id="headline-13">
Go commands (start with &lt;code class="verbatim">m&lt;/code>):
&lt;/h3>
&lt;div id="outline-text-headline-13" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m e b&lt;/code>&lt;/td>
&lt;td>go-play buffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e d&lt;/code>&lt;/td>
&lt;td>download go-play snippet&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e r&lt;/code>&lt;/td>
&lt;td>go-play region&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g a&lt;/code>&lt;/td>
&lt;td>jump to matching test file or back from test to code file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g c&lt;/code>&lt;/td>
&lt;td>open a clone of the current buffer with a coverage info (&lt;code class="verbatim">go tool cover -h&lt;/code> for help)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g g&lt;/code>&lt;/td>
&lt;td>go jump to definition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m i a&lt;/code>&lt;/td>
&lt;td>add import&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m i g&lt;/code>&lt;/td>
&lt;td>goto imports&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m i r&lt;/code>&lt;/td>
&lt;td>remove unused import&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h h&lt;/code>&lt;/td>
&lt;td>godoc at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r n&lt;/code>&lt;/td>
&lt;td>go rename&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t p&lt;/code>&lt;/td>
&lt;td>run &amp;#34;go test&amp;#34; for the current package&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t P&lt;/code>&lt;/td>
&lt;td>run &amp;#34;go test&amp;#34; for the current package and all packages under it&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t s&lt;/code>&lt;/td>
&lt;td>run &amp;#34;go test&amp;#34; for the suite you&amp;#39;re currently in (requires gocheck)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t t&lt;/code>&lt;/td>
&lt;td>run &amp;#34;go test&amp;#34; for the function you&amp;#39;re currently in (while you&amp;#39;re in a _.test.go file)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m x x&lt;/code>&lt;/td>
&lt;td>run &amp;#34;go run&amp;#34; for the current &amp;#39;main&amp;#39; package&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-3">
&lt;h3 id="headline-14">
Go Guru
&lt;/h3>
&lt;div id="outline-text-headline-14" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m f &amp;lt;&lt;/code>&lt;/td>
&lt;td>go-guru show possible callers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f &amp;gt;&lt;/code>&lt;/td>
&lt;td>go-guru show call targets&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f c&lt;/code>&lt;/td>
&lt;td>go-guru show channel sends/receives&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f d&lt;/code>&lt;/td>
&lt;td>go-guru describe symbol at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f e&lt;/code>&lt;/td>
&lt;td>go-guru show possible contants/types for error value&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f f&lt;/code>&lt;/td>
&lt;td>go-guru show free variables&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f i&lt;/code>&lt;/td>
&lt;td>go-guru show implements relation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f j&lt;/code>&lt;/td>
&lt;td>go-guru jump to symbol definition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f o&lt;/code>&lt;/td>
&lt;td>go-guru set analysis scope&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f p&lt;/code>&lt;/td>
&lt;td>go-guru show what the select expression points to&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f r&lt;/code>&lt;/td>
&lt;td>go-guru show referrers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m f s&lt;/code>&lt;/td>
&lt;td>go-guru show callstack&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-3">
&lt;h3 id="headline-15">
Refactoring
&lt;/h3>
&lt;div id="outline-text-headline-15" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r d&lt;/code>&lt;/td>
&lt;td>Add comment stubs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e&lt;/code>&lt;/td>
&lt;td>Extract code as new function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r f&lt;/code>&lt;/td>
&lt;td>Add field tags&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r F&lt;/code>&lt;/td>
&lt;td>Remove field tags&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r n&lt;/code>&lt;/td>
&lt;td>Rename (with &lt;code class="verbatim">godoctor&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r N&lt;/code>&lt;/td>
&lt;td>Rename (with &lt;code class="verbatim">go-rename&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r t&lt;/code>&lt;/td>
&lt;td>Toggle declaration and assignment&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-hugo-in-emacs.org</title><link>/posts/emacs/using-hugo-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-hugo-in-emacs/</guid><description>Start the Hugo #+begin_src emacs-lisp :tangle yes (defun find-blog-dir () (interactive) &amp;#34;Open hugo blog files&amp;#34; (find-file &amp;#34;~/Dropbox/xingwenju.com/hugo/content&amp;#34;) ) ;;;###autoload (defun blog-deploy () &amp;#34;Run hugo and push changes upstream.&amp;#34; (interactive) (with-dir blog-public-dir (shell-command &amp;#34;git rm -rf .&amp;#34;) (shell-command &amp;#34;git clean -fxd&amp;#34;) (with-temp-file &amp;#34;CNAME&amp;#34; (insert &amp;#34;www.xingwenju.com\spacemacs&amp;#34;)) (with-dir blog-dir (-&amp;gt;&amp;gt; blog-public-dir (concat &amp;#34;hugo -d &amp;#34;) shell-command)) (shell-command &amp;#34;git add .&amp;#34;) (--&amp;gt; (current-time-string) (concat &amp;#34;git commit -m \&amp;#34;&amp;#34; it &amp;#34;\&amp;#34;&amp;#34;) (shell-command it)) (magit-push-current-to-upstream nil))) ;;;###autoload (defun blog-start-server () &amp;#34;Run hugo server if not already running and open its webpage.</description><content>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Start the Hugo
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp :tangle yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun find-blog-dir ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Open hugo blog files&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-file &lt;span style="color:#e6db74">&amp;#34;~/Dropbox/xingwenju.com/hugo/content&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun blog-deploy ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Run hugo and push changes upstream.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (with-dir blog-public-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;git rm -rf .&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;git clean -fxd&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (with-temp-file &lt;span style="color:#e6db74">&amp;#34;CNAME&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> &lt;span style="color:#e6db74">&amp;#34;www.xingwenju.com\spacemacs&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (with-dir blog-dir (-&amp;gt;&amp;gt; blog-public-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">concat&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hugo -d &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shell-command))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command &lt;span style="color:#e6db74">&amp;#34;git add .&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (--&amp;gt; (&lt;span style="color:#a6e22e">current-time-string&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">concat&lt;/span> &lt;span style="color:#e6db74">&amp;#34;git commit -m \&amp;#34;&amp;#34;&lt;/span> it &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (shell-command it))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (magit-push-current-to-upstream &lt;span style="color:#66d9ef">nil&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun blog-start-server ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Run hugo server if not already running and open its webpage.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (with-dir blog-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (unless (&lt;span style="color:#a6e22e">get-process&lt;/span> blog-hugo-process)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">start-process&lt;/span> blog-hugo-process &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hugo&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;server&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (browse-url blog-hugo-server-site)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;;###autoload&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun blog-end-server ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;End hugo server process if running.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (--when-let (&lt;span style="color:#a6e22e">get-process&lt;/span> blog-hugo-process)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">delete-process&lt;/span> it)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; Bindings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(spacemacs/set-leader-keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ab&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;blog-deploy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;aa&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;blog-start-server&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ae&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;blog-end-server&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div></content></item><item><title>using-hy-mode-in-emacs.org</title><link>/posts/emacs/using-hy-mode-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-hy-mode-in-emacs/</guid><description>You can type the post name as emacs/test-easy-hugo-in-emacs to put the post in subdirectory
#+srcname: easy-hugo-newpost #+begin_src emacs-lisp (defun x/smart-create-hugo-newpost-with-current-buffer (post-file) &amp;#34;file needs to have and extension &amp;#39;.md&amp;#39; or &amp;#39;.org&amp;#39; or &amp;#39;.ad&amp;#39; or &amp;#39;.rst&amp;#39; or &amp;#39;.mmark&amp;#39; or &amp;#39;.html&amp;#39;.&amp;#34; (interactive (list (read-from-minibuffer &amp;#34;输入文件名: &amp;#34; `(,easy-hugo-default-ext . 1) nil nil nil))) (easy-hugo-with-env (let ( (filename (expand-file-name post-file easy-hugo-postdir)) ;; file to create (file-ext (file-name-extension post-file)) ;; file extention (current-buffer-file-name (buffer-file-name)) ;; buffer to copy content ) ;; Check file extention (when (not (member file-ext easy-hugo--formats)) (error &amp;#34;please enter .</description><content>&lt;p>
You can type the post name as &lt;code class="verbatim">emacs/test-easy-hugo-in-emacs&lt;/code> to put the post in subdirectory&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+srcname: easy-hugo-newpost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun x/smart-create-hugo-newpost-with-current-buffer (post-file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;file needs to have and extension &amp;#39;.md&amp;#39; or &amp;#39;.org&amp;#39; or &amp;#39;.ad&amp;#39; or &amp;#39;.rst&amp;#39; or &amp;#39;.mmark&amp;#39; or &amp;#39;.html&amp;#39;.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive (&lt;span style="color:#a6e22e">list&lt;/span> (&lt;span style="color:#a6e22e">read-from-minibuffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;输入文件名: &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>(&lt;span style="color:#f92672">,&lt;/span>easy-hugo-default-ext &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (easy-hugo-with-env
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (filename (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> post-file easy-hugo-postdir)) &lt;span style="color:#75715e">;; file to create&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (file-ext (file-name-extension post-file)) &lt;span style="color:#75715e">;; file extention&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (current-buffer-file-name (&lt;span style="color:#a6e22e">buffer-file-name&lt;/span>)) &lt;span style="color:#75715e">;; buffer to copy content&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Check file extention&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (not (&lt;span style="color:#a6e22e">member&lt;/span> file-ext easy-hugo--formats))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">error&lt;/span> &lt;span style="color:#e6db74">&amp;#34;please enter .%s or .org or .%s or .rst or .mmark or .%s file name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> easy-hugo-markdown-extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> easy-hugo-asciidoc-extension
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> easy-hugo-html-extension))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Check target file exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (&lt;span style="color:#a6e22e">file-exists-p&lt;/span> (file-truename filename))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">error&lt;/span> &lt;span style="color:#e6db74">&amp;#34;%s already exists!&amp;#34;&lt;/span> filename))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Check if org is supported and defined&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if (and (&lt;span style="color:#a6e22e">null&lt;/span> easy-hugo-org-header)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">0.25&lt;/span> (easy-hugo--version)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">call-process&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hugo&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*hugo*&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">t&lt;/span> &lt;span style="color:#e6db74">&amp;#34;new&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (file-relative-name filename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;content&amp;#34;&lt;/span> easy-hugo-basedir)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (if (or (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext easy-hugo-markdown-extension)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext easy-hugo-asciidoc-extension)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext &lt;span style="color:#e6db74">&amp;#34;rst&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext &lt;span style="color:#e6db74">&amp;#34;mmark&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext easy-hugo-html-extension))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">call-process&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hugo&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*hugo*&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">t&lt;/span> &lt;span style="color:#e6db74">&amp;#34;new&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (file-relative-name filename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">expand-file-name&lt;/span> &lt;span style="color:#e6db74">&amp;#34;content&amp;#34;&lt;/span> easy-hugo-basedir))))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; End of check org support&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Kill temporary buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (&lt;span style="color:#a6e22e">get-buffer&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*hugo*&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">kill-buffer&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*hugo*&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Open the new post with filename&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-file filename)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (when (or easy-hugo-org-header
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (and (&lt;span style="color:#a6e22e">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0.25&lt;/span> (easy-hugo--version))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">string-equal&lt;/span> file-ext &lt;span style="color:#e6db74">&amp;#34;org&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Insert header&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert&lt;/span> (easy-hugo--org-headers (file-name-base post-file)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-max&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Insert contents from another buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">insert-file-contents&lt;/span> current-buffer-file-name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">goto-char&lt;/span> (&lt;span style="color:#a6e22e">point-max&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (save-buffer)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p></content></item><item><title>using-interactive-in-emacs.org</title><link>/posts/emacs/using-interactive-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-interactive-in-emacs/</guid><description>Using Interactive #+BEGIN_SRC (defun x/hugo-save-current-buffer-as-hugo-post (hugo-post-subdir) &amp;#34;Saving the current buffer as a hugo post in a specific hugo post directory&amp;#34; (interactive (let ((hugo-post-subdirs &amp;#39;(&amp;#34;emacs&amp;#34; &amp;#34;linux&amp;#34; &amp;#34;hugo&amp;#34;))) (list (ido-completing-read &amp;#34;Directory Name:&amp;#34; hugo-post-subdirs)) )) (progn (setq hugo-post-title (read-from-minibuffer &amp;#34;请输入文件名：&amp;#34; (buffer-name))) (setq hugo-post-dir (concat easy-hugo-basedir easy-hugo-postdir &amp;#34;/&amp;#34; hugo-post-subdir)) (write-file (concat hugo-post-dir hugo-post-title)) (find-alternate-file-other-window (concat hugo-post-dir hugo-post-title)) ) ) #+END_SRC</description><content>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Using Interactive
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+BEGIN_SRC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defun x/hugo-save-current-buffer-as-hugo-post (hugo-post-subdir)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Saving the current buffer as a hugo post
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">in a specific hugo post directory&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (interactive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((hugo-post-subdirs &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;emacs&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;linux&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hugo&amp;#34;&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">list&lt;/span> (ido-completing-read &lt;span style="color:#e6db74">&amp;#34;Directory Name:&amp;#34;&lt;/span> hugo-post-subdirs))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (progn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq hugo-post-title
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">read-from-minibuffer&lt;/span> &lt;span style="color:#e6db74">&amp;#34;请输入文件名：&amp;#34;&lt;/span> (&lt;span style="color:#a6e22e">buffer-name&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq hugo-post-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">concat&lt;/span> easy-hugo-basedir easy-hugo-postdir &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> hugo-post-subdir))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (write-file (&lt;span style="color:#a6e22e">concat&lt;/span> hugo-post-dir hugo-post-title))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (find-alternate-file-other-window (&lt;span style="color:#a6e22e">concat&lt;/span> hugo-post-dir hugo-post-title))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+END_SRC&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div></content></item><item><title>using-java-in-emacs.org</title><link>/posts/emacs/using-java-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-java-in-emacs/</guid><description>Java layer
Description This layer adds support for the Java language.
Features: Support for the following backends:
Meghanada client/server (default), Eclim client/server, ENSIME client/server. Each provides:
Auto-completion using company Linting using flycheck integration Maven and Gradle integration Layer Installation Layer To use this configuration layer, add it to your ~/.spacemacs. You will need to add java to the existing dotspacemacs-configuration-layers list in this file.
Choosing a backend To choose a default backend set the layer variable java-backend:</description><content>&lt;h1 class="title">&lt;p>Java layer&lt;/p>
&lt;/h1>
&lt;p>
&lt;img src="img/java.png" alt="img/java.png" title="img/java.png" />&lt;/p>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer adds support for the Java language.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>
&lt;p>Support for the following backends:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/mopemope/meghanada-emacs">Meghanada&lt;/a> client/server (default),&lt;/li>
&lt;li>&lt;a href="http://eclim.org">Eclim&lt;/a> client/server,&lt;/li>
&lt;li>&lt;a href="https://ensime.github.io/">ENSIME&lt;/a> client/server.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Each provides:&lt;/p>
&lt;ul>
&lt;li>Auto-completion using company&lt;/li>
&lt;li>Linting using flycheck integration&lt;/li>
&lt;li>Maven and Gradle integration&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
Layer Installation
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;div id="outline-container-headline-5" class="outline-3">
&lt;h3 id="headline-5">
Layer
&lt;/h3>
&lt;div id="outline-text-headline-5" class="outline-text-3">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">java&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Choosing a backend
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;p>To choose a default backend set the layer variable &lt;code class="verbatim">java-backend&lt;/code>:&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(java :variables java-backend &lt;span style="color:#e6db74">&amp;#39;eclim&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
Backend can be chosen on a per project basis using directory local variables
(files named &lt;code class="verbatim">.dir-locals.el&lt;/code> at the root of a project), an example to use the
&lt;code class="verbatim">eclim&lt;/code> backend:&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; Directory Local Variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; For more information see (info &amp;#34;(emacs) Directory Variables&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>((java-mode (java-backend &lt;span style="color:#f92672">.&lt;/span> eclim)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
&lt;strong>Note:&lt;/strong> you can easily add a directory local variable with &lt;code>SPC f v d&lt;/code>.&lt;/p>
&lt;p>
If you want to use the Ensime backend, you should modify your &lt;code class="verbatim">~/.spacemacs&lt;/code> to
use the recommended Ensime version (Stable). Please add the following lines to
&lt;code class="verbatim">dotspacemacs/user-init&lt;/code>:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (push &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;melpa-stable&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;stable.melpa.org/packages/&amp;#34;&lt;/span>) configuration-layer-elpa-archives)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (push &lt;span style="color:#f92672">&amp;#39;&lt;/span>(ensime &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;melpa-stable&amp;#34;&lt;/span>) package-pinned-packages)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-2">
&lt;h2 id="headline-7">
Backends
&lt;/h2>
&lt;div id="outline-text-headline-7" class="outline-text-2">
&lt;div id="outline-container-headline-8" class="outline-3">
&lt;h3 id="headline-8">
Meghanada
&lt;/h3>
&lt;div id="outline-text-headline-8" class="outline-text-3">
&lt;p>Meghanada is composed of a lightweight server and an Emacs minor mode. It
is unintrusive and integrates with &lt;code class="verbatim">company&lt;/code> and &lt;code class="verbatim">flycheck&lt;/code>.&lt;/p>
&lt;p>
Both &lt;code class="verbatim">Gradle&lt;/code> and &lt;code class="verbatim">Maven&lt;/code> projects are compatible with Meghanada.&lt;/p>
&lt;p>
Meghanada is the default backend used by this layer, see &lt;a href="#choosing-a-backend">Choosing a backend&lt;/a> in
order to lean how to select a different backend.&lt;/p>
&lt;div id="outline-container-headline-9" class="outline-4">
&lt;h4 id="headline-9">
Installation
&lt;/h4>
&lt;div id="outline-text-headline-9" class="outline-text-4">
&lt;p>The Meghanada server will be installed automatically whenever a Java file
is opened.&lt;/p>
&lt;p>
If you get issues with the auto-installation you can either download the last
version of the server manually &lt;a href="https://dl.bintray.com/mopemope/meghanada/">there&lt;/a> or build from source hosted on &lt;a href="https://github.com/mopemope/meghanada-server">the GitHub
repository&lt;/a> and copy the &lt;code class="verbatim">jar&lt;/code> file to &lt;code class="verbatim">.emacs.d/.cache/meghanada&lt;/code> folder.&lt;/p>
&lt;p>
No additional configuration is necessary!&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-4">
&lt;h4 id="headline-10">
About Maven
&lt;/h4>
&lt;div id="outline-text-headline-10" class="outline-text-4">
&lt;p>Maven is not fully supported by Meghanada (but should still work fine for most
projects). If you encounter disconnection from the server then run &lt;code class="verbatim">mvn install&lt;/code>
at the root of your project first.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-11" class="outline-3">
&lt;h3 id="headline-11">
Eclim
&lt;/h3>
&lt;div id="outline-text-headline-11" class="outline-text-3">
&lt;p>Eclim provides the ability to access Eclipse features such as code completion,
searching, code validation, and many more.&lt;/p>
&lt;div id="outline-container-headline-12" class="outline-4">
&lt;h4 id="headline-12">
Installation
&lt;/h4>
&lt;div id="outline-text-headline-12" class="outline-text-4">
&lt;div id="outline-container-headline-13" class="outline-5">
&lt;h5 id="headline-13">
Eclipse
&lt;/h5>
&lt;div id="outline-text-headline-13" class="outline-text-5">
&lt;p>First you need the last version of Eclispe from the &lt;a href="https://www.eclipse.org/downloads/eclipse-packages/">official Eclipse site&lt;/a>.&lt;/p>
&lt;p>
&lt;strong>Note:&lt;/strong> if you are on MacOS there some issues between the new native Eclipse
application installed by the &lt;code class="verbatim">Eclispe-install.app&lt;/code> wizard and the Eclim
installer wizard. The recommended way to install Eclipse on MacOS is by using
&lt;code class="verbatim">homebrew&lt;/code> or by get the &lt;code class="verbatim">tar.gz&lt;/code> compressed file instead. With homebrew
the command line to install Eclipse is &lt;code class="verbatim">brew cask install eclipse-jee&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-5">
&lt;h5 id="headline-14">
Eclim
&lt;/h5>
&lt;div id="outline-text-headline-14" class="outline-text-5">
&lt;p>For installation of Eclim check the &lt;a href="http://eclim.org/install.html#download">official page&lt;/a> to download the installer
then double click on it or launch it in the command line with the following
command (the example is for MacOS, replace the eclispe.home definition by
your correct location as well as the current version of eclim):&lt;/p>
&lt;div class="src src-shell">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ java -Dvim.skip&lt;span style="color:#f92672">=&lt;/span>true -Declipse.home&lt;span style="color:#f92672">=&lt;/span>/Applications/Eclipse.app/Contents/Eclipse -jar eclim_2.6.0.jar install&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-4">
&lt;h4 id="headline-15">
Configuration
&lt;/h4>
&lt;div id="outline-text-headline-15" class="outline-text-4">
&lt;p>You may need to set the Eclipse and Eclim paths in your dotfile as layer
variables or in the &lt;code class="verbatim">dotspacemacs/user-config&lt;/code>, for instance on MacOS as layer
variables:&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(java :variables java-backend &lt;span style="color:#e6db74">&amp;#39;eclim&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eclim-eclipse-dirs &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/Applications/Eclipse.app/Contents/Eclipse/&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eclim-executable &lt;span style="color:#e6db74">&amp;#34;/Applications/Eclipse.app/Contents/Eclipse/eclim&amp;#34;&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
You can also configure useful other options like the default location for the
Eclim workspace (default value is &lt;code class="verbatim">~/workspace&lt;/code>), as shown below:&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span> (setq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Specify the workspace to use by default&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eclimd-default-workspace &lt;span style="color:#e6db74">&amp;#34;/path/to/default/eclipse/workspace&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; wether autostarting eclimd or not (default nil)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eclimd-autostart &lt;span style="color:#66d9ef">t&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">;; Whether or not to block emacs until eclimd is ready (default nil)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eclimd-wait-for-process &lt;span style="color:#66d9ef">t&lt;/span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-16" class="outline-4">
&lt;h4 id="headline-16">
Usage
&lt;/h4>
&lt;div id="outline-text-headline-16" class="outline-text-4">
&lt;p>Start the eclim daemon with &lt;code>SPC m D s&lt;/code> and stop it with &lt;code>SPC m D k&lt;/code>. (See
below.)&lt;/p>
&lt;p>
Syntax checking is performed only on demand with &lt;code>SPC e e&lt;/code> to preserve
perfomance.&lt;/p>
&lt;p>
Auto-save feature may freeze Emacs sometimes, use &lt;code>C-g&lt;/code> to unfreeze Emacs or
atlernatively you can set &lt;code class="verbatim">dotspacemacs-auto-save-file-location&lt;/code> to nil.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-17" class="outline-3">
&lt;h3 id="headline-17">
ENSIME
&lt;/h3>
&lt;div id="outline-text-headline-17" class="outline-text-3">
&lt;p>Another backend option is the ENSIME server, which is a lot more responsive than
Eclim. ENSIME is originally made to work with Scala but it now works with plain
Java projects as well.&lt;/p>
&lt;div id="outline-container-headline-18" class="outline-4">
&lt;h4 id="headline-18">
Installation when using SBT
&lt;/h4>
&lt;div id="outline-text-headline-18" class="outline-text-4">
&lt;p>Find it with your favourite package manager, eg:&lt;/p>
&lt;div class="src src-shell">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span> nix-env --install sbt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>or refer to &lt;a href="http://www.scala-sbt.org/download.html">the sbt installation instructions&lt;/a>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-19" class="outline-4">
&lt;h4 id="headline-19">
Installation when using Gradle
&lt;/h4>
&lt;div id="outline-text-headline-19" class="outline-text-4">
&lt;p>Refer to the &lt;a href="https://ensime.org/build_tools/gradle/">Ensime installation instructions&lt;/a> to install the &lt;code class="verbatim">ensime-gradle&lt;/code>
plugin.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-20" class="outline-4">
&lt;h4 id="headline-20">
Configuration
&lt;/h4>
&lt;div id="outline-text-headline-20" class="outline-text-4">
&lt;p>Follow &lt;a href="https://ensime.github.io/build_tools/sbt/">the ENSIME configuration instructions&lt;/a>. Spacemacs uses
the development version of Ensime so follow the appropriate steps.&lt;/p>
&lt;p>
To use the build functions under &lt;code>SPC m b&lt;/code> you need to use version &lt;code class="verbatim">0.13.5&lt;/code> or
newer of &lt;code class="verbatim">sbt&lt;/code>, and specify that in your project&amp;#39;s &lt;code class="verbatim">project/build.properties&lt;/code>.
For example,&lt;/p>
&lt;div class="src src-scala">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-scala" data-lang="scala">&lt;span style="display:flex;">&lt;span> sbt&lt;span style="color:#f92672">.&lt;/span>version&lt;span style="color:#66d9ef">=&lt;/span>&lt;span style="color:#ae81ff">0.13&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#ae81ff">11&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-21" class="outline-4">
&lt;h4 id="headline-21">
Usage
&lt;/h4>
&lt;div id="outline-text-headline-21" class="outline-text-4">
&lt;p>&lt;code>SPC SPC spacemacs/ensime-gen-and-restart&lt;/code> or &lt;code>SPC m D r&lt;/code> generates a new config
for a project and starts the server. Afterwards &lt;code>SPC SPC ensime&lt;/code> or &lt;code>SPC m D s&lt;/code>
will suffice do the trick.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-22" class="outline-4">
&lt;h4 id="headline-22">
Issues
&lt;/h4>
&lt;div id="outline-text-headline-22" class="outline-text-4">
&lt;p>ENSIME is originally built for Scala, so support for java is not complete, in
particular refactoring doesn&amp;#39;t work.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-23" class="outline-2">
&lt;h2 id="headline-23">
Key bindings
&lt;/h2>
&lt;div id="outline-text-headline-23" class="outline-text-2">
&lt;div id="outline-container-headline-24" class="outline-3">
&lt;h3 id="headline-24">
Meghanada
&lt;/h3>
&lt;div id="outline-text-headline-24" class="outline-text-3">
&lt;div id="outline-container-headline-25" class="outline-4">
&lt;h4 id="headline-25">
Server
&lt;/h4>
&lt;div id="outline-text-headline-25" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m D c&lt;/code>&lt;/td>
&lt;td>Connect to server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D d&lt;/code>&lt;/td>
&lt;td>Disconnect from server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D i&lt;/code>&lt;/td>
&lt;td>Install server (should be done automatically&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D k&lt;/code>&lt;/td>
&lt;td>Kill server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D l&lt;/code>&lt;/td>
&lt;td>Clear server cache&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D p&lt;/code>&lt;/td>
&lt;td>Ping server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D r&lt;/code>&lt;/td>
&lt;td>Restarrt server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D s&lt;/code>&lt;/td>
&lt;td>Start server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D u&lt;/code>&lt;/td>
&lt;td>Update server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D v&lt;/code>&lt;/td>
&lt;td>Print version of the server&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-26" class="outline-4">
&lt;h4 id="headline-26">
Navigation
&lt;/h4>
&lt;div id="outline-text-headline-26" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m g b&lt;/code>&lt;/td>
&lt;td>Jump back to previous location&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g g&lt;/code>&lt;/td>
&lt;td>Jump to declaration&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-27" class="outline-4">
&lt;h4 id="headline-27">
Compilation
&lt;/h4>
&lt;div id="outline-text-headline-27" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m c b&lt;/code>&lt;/td>
&lt;td>Compile file (buffer)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m c c&lt;/code>&lt;/td>
&lt;td>Compile project&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-28" class="outline-4">
&lt;h4 id="headline-28">
Tests (junit)
&lt;/h4>
&lt;div id="outline-text-headline-28" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m t a&lt;/code>&lt;/td>
&lt;td>Run all tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t c&lt;/code>&lt;/td>
&lt;td>Run test class around point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t l&lt;/code>&lt;/td>
&lt;td>Run last tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t t&lt;/code>&lt;/td>
&lt;td>Run test cause around point&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-29" class="outline-4">
&lt;h4 id="headline-29">
Refactoring
&lt;/h4>
&lt;div id="outline-text-headline-29" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m =&lt;/code>&lt;/td>
&lt;td>Beautify code&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r i&lt;/code>&lt;/td>
&lt;td>Optimize imports&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r I&lt;/code>&lt;/td>
&lt;td>Import all&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r n&lt;/code>&lt;/td>
&lt;td>Create a new class, interface, or enum&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-30" class="outline-4">
&lt;h4 id="headline-30">
Tasks
&lt;/h4>
&lt;div id="outline-text-headline-30" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m x :&lt;/code>&lt;/td>
&lt;td>Run task&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-31" class="outline-3">
&lt;h3 id="headline-31">
Eclim
&lt;/h3>
&lt;div id="outline-text-headline-31" class="outline-text-3">
&lt;div id="outline-container-headline-32" class="outline-4">
&lt;h4 id="headline-32">
Java-mode
&lt;/h4>
&lt;div id="outline-text-headline-32" class="outline-text-4">
&lt;div id="outline-container-headline-33" class="outline-5">
&lt;h5 id="headline-33">
Ant
&lt;/h5>
&lt;div id="outline-text-headline-33" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m a a&lt;/code>&lt;/td>
&lt;td>Run Ant&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m a c&lt;/code>&lt;/td>
&lt;td>Clear Ant cache&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m a r&lt;/code>&lt;/td>
&lt;td>Run Ant&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m a v&lt;/code>&lt;/td>
&lt;td>Validate&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-34" class="outline-5">
&lt;h5 id="headline-34">
Project management
&lt;/h5>
&lt;div id="outline-text-headline-34" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m p b&lt;/code>&lt;/td>
&lt;td>Build project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p c&lt;/code>&lt;/td>
&lt;td>Create project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p d&lt;/code>&lt;/td>
&lt;td>Delete project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p g&lt;/code>&lt;/td>
&lt;td>Open file in current project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p i&lt;/code>&lt;/td>
&lt;td>Import project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p j&lt;/code>&lt;/td>
&lt;td>Information about project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p k&lt;/code>&lt;/td>
&lt;td>Close project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p o&lt;/code>&lt;/td>
&lt;td>Open project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p p&lt;/code>&lt;/td>
&lt;td>Open project management buffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p r&lt;/code>&lt;/td>
&lt;td>Run project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m p u&lt;/code>&lt;/td>
&lt;td>Update project&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-35" class="outline-5">
&lt;h5 id="headline-35">
Eclim daemon
&lt;/h5>
&lt;div id="outline-text-headline-35" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m D k&lt;/code>&lt;/td>
&lt;td>Kill daemon&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D s&lt;/code>&lt;/td>
&lt;td>Start daemon&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-36" class="outline-5">
&lt;h5 id="headline-36">
Goto
&lt;/h5>
&lt;div id="outline-text-headline-36" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>M-​,​&lt;/code>&lt;/td>
&lt;td>jump back from go to declaration/definition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g g&lt;/code>&lt;/td>
&lt;td>go to declaration&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g t&lt;/code>&lt;/td>
&lt;td>go to type definition&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-37" class="outline-5">
&lt;h5 id="headline-37">
Refactoring
&lt;/h5>
&lt;div id="outline-text-headline-37" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r c&lt;/code>&lt;/td>
&lt;td>create a constructor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r f&lt;/code>&lt;/td>
&lt;td>format file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r g&lt;/code>&lt;/td>
&lt;td>generate getter and setter&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r i&lt;/code>&lt;/td>
&lt;td>optimize imports&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r j&lt;/code>&lt;/td>
&lt;td>implement or override a method&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r n&lt;/code>&lt;/td>
&lt;td>create a new class, enum, or interface&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r&lt;/code>&lt;/td>
&lt;td>rename symbol&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-38" class="outline-5">
&lt;h5 id="headline-38">
Documentation, Find
&lt;/h5>
&lt;div id="outline-text-headline-38" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m f f&lt;/code>&lt;/td>
&lt;td>general find in project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h c&lt;/code>&lt;/td>
&lt;td>call hierarchy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h h&lt;/code>&lt;/td>
&lt;td>show documentation for symbol at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h i&lt;/code>&lt;/td>
&lt;td>view hierarchy&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h u&lt;/code>&lt;/td>
&lt;td>show usages for symbol at point&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-39" class="outline-5">
&lt;h5 id="headline-39">
Errors (problems)
&lt;/h5>
&lt;div id="outline-text-headline-39" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC e e&lt;/code>&lt;/td>
&lt;td>Force an error check&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC e l&lt;/code>&lt;/td>
&lt;td>List errors&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC e n&lt;/code>&lt;/td>
&lt;td>Next error&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC e p&lt;/code>&lt;/td>
&lt;td>Previous error&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e e&lt;/code>&lt;/td>
&lt;td>Correct error around point&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-40" class="outline-5">
&lt;h5 id="headline-40">
Tests
&lt;/h5>
&lt;div id="outline-text-headline-40" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m t t&lt;/code>&lt;/td>
&lt;td>run JUnit tests for current method or current file or project&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-41" class="outline-4">
&lt;h4 id="headline-41">
Errors (problems) buffer
&lt;/h4>
&lt;div id="outline-text-headline-41" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>RET&lt;/code>&lt;/td>
&lt;td>go to problem place&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>a&lt;/code>&lt;/td>
&lt;td>show all problems&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>e&lt;/code>&lt;/td>
&lt;td>show only errors&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>f&lt;/code>&lt;/td>
&lt;td>show problems only for current file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>g&lt;/code>&lt;/td>
&lt;td>refresh problems&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>q&lt;/code>&lt;/td>
&lt;td>quit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>w&lt;/code>&lt;/td>
&lt;td>show only warnings&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-42" class="outline-4">
&lt;h4 id="headline-42">
Projects buffer
&lt;/h4>
&lt;div id="outline-text-headline-42" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>RET&lt;/code>&lt;/td>
&lt;td>go to current project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>c&lt;/code>&lt;/td>
&lt;td>go to problem place&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>D&lt;/code>&lt;/td>
&lt;td>delete project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>g&lt;/code>&lt;/td>
&lt;td>refresh buffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>i&lt;/code>&lt;/td>
&lt;td>info about current project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>I&lt;/code>&lt;/td>
&lt;td>import existing project into the workspace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>m&lt;/code>&lt;/td>
&lt;td>mark current project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>M&lt;/code>&lt;/td>
&lt;td>mark all projects&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>N&lt;/code>&lt;/td>
&lt;td>create new project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>o&lt;/code>&lt;/td>
&lt;td>open project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>p&lt;/code>&lt;/td>
&lt;td>update project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>q&lt;/code>&lt;/td>
&lt;td>quit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>R&lt;/code>&lt;/td>
&lt;td>rename current project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>u&lt;/code>&lt;/td>
&lt;td>unmark current project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>U&lt;/code>&lt;/td>
&lt;td>unmark all projects&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-43" class="outline-3">
&lt;h3 id="headline-43">
Ensime key bindings
&lt;/h3>
&lt;div id="outline-text-headline-43" class="outline-text-3">
&lt;div id="outline-container-headline-44" class="outline-4">
&lt;h4 id="headline-44">
Search
&lt;/h4>
&lt;div id="outline-text-headline-44" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m /&lt;/code>&lt;/td>
&lt;td>incremental search using &lt;code class="verbatim">ensime-scalex&lt;/code> major mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m ?&lt;/code>&lt;/td>
&lt;td>incremental search in all live buffers&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-45" class="outline-4">
&lt;h4 id="headline-45">
Ensime Search Mode
&lt;/h4>
&lt;div id="outline-text-headline-45" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-j&lt;/code>&lt;/td>
&lt;td>Move to next match&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-k&lt;/code>&lt;/td>
&lt;td>Move to previous match&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-i&lt;/code>&lt;/td>
&lt;td>Insert at point import of current result&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>RET&lt;/code>&lt;/td>
&lt;td>Jump to the target of the currently selected ensime-search-result&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-q&lt;/code>&lt;/td>
&lt;td>Quit ensime search&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-46" class="outline-4">
&lt;h4 id="headline-46">
sbt
&lt;/h4>
&lt;div id="outline-text-headline-46" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m b .&lt;/code>&lt;/td>
&lt;td>sbt transient state&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m b b&lt;/code>&lt;/td>
&lt;td>sbt command&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m b c&lt;/code>&lt;/td>
&lt;td>compile&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m b C&lt;/code>&lt;/td>
&lt;td>clean command&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m b i&lt;/code>&lt;/td>
&lt;td>switch to sbt shell&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m b p&lt;/code>&lt;/td>
&lt;td>package command&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m b r&lt;/code>&lt;/td>
&lt;td>run command&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-47" class="outline-4">
&lt;h4 id="headline-47">
Typecheck
&lt;/h4>
&lt;div id="outline-text-headline-47" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m c t&lt;/code>&lt;/td>
&lt;td>type check the current file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m c T&lt;/code>&lt;/td>
&lt;td>type check all the open buffers&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-48" class="outline-4">
&lt;h4 id="headline-48">
Debug
&lt;/h4>
&lt;div id="outline-text-headline-48" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m d A&lt;/code>&lt;/td>
&lt;td>Attach to a remote debugger&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d b&lt;/code>&lt;/td>
&lt;td>set breakpoint&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d B&lt;/code>&lt;/td>
&lt;td>clear breakpoint&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d C&lt;/code>&lt;/td>
&lt;td>clear all breakpoints&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d c&lt;/code>&lt;/td>
&lt;td>continue&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d i&lt;/code>&lt;/td>
&lt;td>inspect value at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d n&lt;/code>&lt;/td>
&lt;td>next&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d o&lt;/code>&lt;/td>
&lt;td>step out&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d q&lt;/code>&lt;/td>
&lt;td>quit&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d r&lt;/code>&lt;/td>
&lt;td>run&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d s&lt;/code>&lt;/td>
&lt;td>step&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d t&lt;/code>&lt;/td>
&lt;td>backtrace&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
&lt;strong>Note:&lt;/strong> These key bindings need a transient-state, PR welcome :-)&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-49" class="outline-4">
&lt;h4 id="headline-49">
Errors
&lt;/h4>
&lt;div id="outline-text-headline-49" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m e e&lt;/code>&lt;/td>
&lt;td>print error at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e l&lt;/code>&lt;/td>
&lt;td>show all errors and warnings&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e s&lt;/code>&lt;/td>
&lt;td>switch to buffer containing the stack trace parser&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-50" class="outline-4">
&lt;h4 id="headline-50">
Goto
&lt;/h4>
&lt;div id="outline-text-headline-50" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m g g&lt;/code>&lt;/td>
&lt;td>go to definition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g i&lt;/code>&lt;/td>
&lt;td>go to implementation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g t&lt;/code>&lt;/td>
&lt;td>go to test&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-51" class="outline-4">
&lt;h4 id="headline-51">
Print and yank types
&lt;/h4>
&lt;div id="outline-text-headline-51" class="outline-text-4">
&lt;table>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m h T&lt;/code>&lt;/td>
&lt;td>print full type name at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h t&lt;/code>&lt;/td>
&lt;td>print short type name at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m y T&lt;/code>&lt;/td>
&lt;td>yank full type name at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m y t&lt;/code>&lt;/td>
&lt;td>yank short type name at point&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-52" class="outline-4">
&lt;h4 id="headline-52">
Documentation, Inspect
&lt;/h4>
&lt;div id="outline-text-headline-52" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m h h&lt;/code>&lt;/td>
&lt;td>show documentation for symbol at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h u&lt;/code>&lt;/td>
&lt;td>show uses for symbol at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m i i&lt;/code>&lt;/td>
&lt;td>inspect type at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m i I&lt;/code>&lt;/td>
&lt;td>inspect type in other frame&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m i p&lt;/code>&lt;/td>
&lt;td>inspect project package&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-53" class="outline-4">
&lt;h4 id="headline-53">
Server
&lt;/h4>
&lt;div id="outline-text-headline-53" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m D f&lt;/code>&lt;/td>
&lt;td>reload open files&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D r&lt;/code>&lt;/td>
&lt;td>regenerate the &lt;code class="verbatim">.ensime&lt;/code> and restart the ensime server&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m D s&lt;/code>&lt;/td>
&lt;td>start ensime server&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-54" class="outline-4">
&lt;h4 id="headline-54">
Refactoring
&lt;/h4>
&lt;div id="outline-text-headline-54" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r a&lt;/code>&lt;/td>
&lt;td>add type annotation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r f&lt;/code>&lt;/td>
&lt;td>format source&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r d&lt;/code>&lt;/td>
&lt;td>get rid of an intermediate variable (&lt;code class="verbatim">ensime-refactor-inline-local&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r D&lt;/code>&lt;/td>
&lt;td>get rid of an intermediate variable (&lt;code class="verbatim">ensime-undo-peek&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r i&lt;/code>&lt;/td>
&lt;td>organize imports&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r m&lt;/code>&lt;/td>
&lt;td>extract a range of code into a method&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r&lt;/code>&lt;/td>
&lt;td>rename a symbol project wide&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r t&lt;/code>&lt;/td>
&lt;td>import type at point&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r v&lt;/code>&lt;/td>
&lt;td>extract a range of code into a variable&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m z&lt;/code>&lt;/td>
&lt;td>expand/contract region&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-55" class="outline-4">
&lt;h4 id="headline-55">
Tests
&lt;/h4>
&lt;div id="outline-text-headline-55" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m t a&lt;/code>&lt;/td>
&lt;td>test command (sbt)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t r&lt;/code>&lt;/td>
&lt;td>test quick command (sbt)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t t&lt;/code>&lt;/td>
&lt;td>test only (sbt)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-56" class="outline-4">
&lt;h4 id="headline-56">
REPL
&lt;/h4>
&lt;div id="outline-text-headline-56" class="outline-text-4">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m s a&lt;/code>&lt;/td>
&lt;td>ask for a file to be loaded in the REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s b&lt;/code>&lt;/td>
&lt;td>send buffer to the REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s B&lt;/code>&lt;/td>
&lt;td>send buffer to the REPL and focus the REPL buffer in &lt;code class="verbatim">insert state&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s i&lt;/code>&lt;/td>
&lt;td>start or switch to the REPL inferior process&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s r&lt;/code>&lt;/td>
&lt;td>send region to the REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s R&lt;/code>&lt;/td>
&lt;td>send region to the REPL and focus the REPL buffer in &lt;code class="verbatim">insert state&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-57" class="outline-3">
&lt;h3 id="headline-57">
Maven
&lt;/h3>
&lt;div id="outline-text-headline-57" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m m c c&lt;/code>&lt;/td>
&lt;td>Compile&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m c C&lt;/code>&lt;/td>
&lt;td>Clean&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m c r&lt;/code>&lt;/td>
&lt;td>Clean and compile&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m g a&lt;/code>&lt;/td>
&lt;td>Switch between class and test file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m g A&lt;/code>&lt;/td>
&lt;td>Switch between class and test file in another window&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m t a&lt;/code>&lt;/td>
&lt;td>Run all tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m t C-a&lt;/code>&lt;/td>
&lt;td>Clean and run all tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m t b&lt;/code>&lt;/td>
&lt;td>Run current buffer tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m t i&lt;/code>&lt;/td>
&lt;td>Test and install&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m m t t&lt;/code>&lt;/td>
&lt;td>Run a specific test&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-58" class="outline-3">
&lt;h3 id="headline-58">
Gradle
&lt;/h3>
&lt;div id="outline-text-headline-58" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m l c c&lt;/code>&lt;/td>
&lt;td>Compile&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m l c C&lt;/code>&lt;/td>
&lt;td>Clean&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m l c r&lt;/code>&lt;/td>
&lt;td>Clean and compile&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m l t a&lt;/code>&lt;/td>
&lt;td>Run all tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m l t b&lt;/code>&lt;/td>
&lt;td>Run current buffer tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m l t t&lt;/code>&lt;/td>
&lt;td>Run a specific test&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m l x&lt;/code>&lt;/td>
&lt;td>Execute a Gradle task&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-javascript-in-emacs.org</title><link>/posts/emacs/using-javascript-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-javascript-in-emacs/</guid><description>Day 2 Javascript mode of emacs Description This layer adds support for the JavaScript language using js2-mode.
Features: Smart code folding Refactoring: done using [[https://github.com/magnars/js2-refactor.el][]js2-refactor]. Auto-completion and documentation: provided by tern CoffeeScript support Formatting with web-beautify Get the path to a JSON value with json-snatcher REPL available via skewer-mode and livid-mode Install To use this configuration layer, add it to your ~/.spacemacs. You will need to add javascript to the existing dotspacemacs-configuration-layers list in this file.</description><content>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Day 2
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;div id="outline-container-headline-2" class="outline-4">
&lt;h4 id="headline-2">
Javascript mode of emacs
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-4">
&lt;h4 id="headline-3">
Description
&lt;/h4>
&lt;div id="outline-text-headline-3" class="outline-text-4">
&lt;p>
This layer adds support for the JavaScript language using &lt;a href="https://github.com/mooz/js2-mode">js2-mode&lt;/a>.&lt;/p>
&lt;div id="outline-container-headline-4" class="outline-5">
&lt;h5 id="headline-4">
Features:
&lt;/h5>
&lt;div id="outline-text-headline-4" class="outline-text-5">
&lt;ul>
&lt;li>Smart code folding&lt;/li>
&lt;li>Refactoring: done using [[&lt;a href="https://github.com/magnars/js2-refactor.el][]js2-refactor].">https://github.com/magnars/js2-refactor.el][]js2-refactor].&lt;/a>&lt;/li>
&lt;li>Auto-completion and documentation: provided by &lt;a href="http://ternjs.net/">tern&lt;/a>&lt;/li>
&lt;li>CoffeeScript support&lt;/li>
&lt;li>Formatting with &lt;a href="https://github.com/yasuyk/web-beautify">web-beautify&lt;/a>&lt;/li>
&lt;li>Get the path to a JSON value with &lt;a href="https://github.com/Sterlingg/json-snatcher">json-snatcher&lt;/a>&lt;/li>
&lt;li>REPL available via &lt;a href="https://github.com/skeeto/skewer-mode">skewer-mode&lt;/a> and &lt;a href="https://github.com/pandeiro/livid-mode">livid-mode&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-4">
&lt;h4 id="headline-5">
Install
&lt;/h4>
&lt;div id="outline-text-headline-5" class="outline-text-4">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">javascript&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in
this file.&lt;/p>
&lt;p>
You will also need to install &lt;code class="verbatim">tern&lt;/code> to use the auto-completion and
documentation features:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#+BEGIN_SRC sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ npm install -g tern
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#+END_SRC&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>
To use the formatting features, install &lt;code class="verbatim">js-beautify&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#+BEGIN_SRC sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ npm install -g js-beautify
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#+END_SRC&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>
To activate error checking using flycheck, install one of the &lt;a href="http://www.flycheck.org/en/latest/languages.html#javascript">available linters&lt;/a>
such as &lt;code class="verbatim">ESLint&lt;/code> or &lt;code class="verbatim">JSHint&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#+BEGIN_SRC sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ npm install -g eslint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ npm install -g jshint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#+END_SRC&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-4">
&lt;h4 id="headline-6">
Configuration
&lt;/h4>
&lt;div id="outline-text-headline-6" class="outline-text-4">
&lt;div id="outline-container-headline-7" class="outline-5">
&lt;h5 id="headline-7">
Tern
&lt;/h5>
&lt;div id="outline-text-headline-7" class="outline-text-5">
&lt;p>To make tern re-use the server across multiple different editing sessions (thus
creating multiple &lt;code class="verbatim">.tern-port&lt;/code> files for each document you have open &lt;a href="http://ternjs.net/doc/manual.html">see here
for more details&lt;/a>):&lt;/p>
&lt;p>
The variables provided below can be set when adding the &lt;code class="verbatim">javascript&lt;/code>
configuration layer, as detailed in &lt;a href="../../../doc/DOCUMENTATION.org::Setting%20configuration%20layers%20variables">this&lt;/a> section of the documentation.&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+BEGIN_SRC emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (javascript :variables javascript-disable-tern-port-files &lt;span style="color:#66d9ef">nil&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+END_SRC&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>
Windows users may need to set the variable &lt;code class="verbatim">tern-command&lt;/code> in order for emacs to
locate and launch tern server successfully. See &lt;a href="https://github.com/syl20bnr/spacemacs/issues/5733">this open issue for more
details&lt;/a>. The variable can be set when adding the &lt;code class="verbatim">javascript&lt;/code> configuration
layer:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+BEGIN_SRC emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (javascript :variables tern-command &lt;span style="color:#f92672">&amp;#39;&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;node&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/path/to/tern/bin/tern&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+END_SRC&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-5">
&lt;h5 id="headline-8">
Indentation
&lt;/h5>
&lt;div id="outline-text-headline-8" class="outline-text-5">
&lt;p>To change how js2-mode indents code, set the variable &lt;code class="verbatim">js2-basic-offset&lt;/code>, as
such:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+BEGIN_SRC emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq-default js2-basic-offset &lt;span style="color:#ae81ff">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+END_SRC&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;p>
Similarly, to change how js-mode indents JSON files, set the variable
&lt;code class="verbatim">js-indent-level&lt;/code>, as such:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+BEGIN_SRC emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq-default js-indent-level &lt;span style="color:#ae81ff">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+END_SRC&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-9" class="outline-5">
&lt;h5 id="headline-9">
REPL
&lt;/h5>
&lt;div id="outline-text-headline-9" class="outline-text-5">
&lt;p>To use the available JS repl, you need a running httpd server and a page loaded
with skewer. If a blank page serves your needs, just use the run-skewer command
in your javascript buffer. If you want to inject it in your own page, follow
&lt;a href="https://github.com/skeeto/skewer-mode#skewering-with-cors">these instructions&lt;/a> (install the Greasemonkey script and then click the triangle
in the top-right corner - if it turns green, you&amp;#39;re good to go).&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-4">
&lt;h4 id="headline-10">
Key Bindings
&lt;/h4>
&lt;div id="outline-text-headline-10" class="outline-text-4">
&lt;div id="outline-container-headline-11" class="outline-5">
&lt;h5 id="headline-11">
js2-mode
&lt;/h5>
&lt;div id="outline-text-headline-11" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m w&lt;/code>&lt;/td>
&lt;td>toggle js2-mode warnings and errors&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>%&lt;/code>&lt;/td>
&lt;td>jump between blockswith &lt;a href="https://github.com/redguardtoo/evil-matchit">evil-matchit&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-5">
&lt;h5 id="headline-12">
Folding (js2-mode)
&lt;/h5>
&lt;div id="outline-text-headline-12" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m z c&lt;/code>&lt;/td>
&lt;td>zipcode 隐藏元素 hide element&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m z o&lt;/code>&lt;/td>
&lt;td>zipopen 显示元素 show element&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m z r&lt;/code>&lt;/td>
&lt;td>全部显示 show all element&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m z e&lt;/code>&lt;/td>
&lt;td>切换元素 toggle hide/show element&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m z F&lt;/code>&lt;/td>
&lt;td>切换函数 toggle hide functions&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m z C&lt;/code>&lt;/td>
&lt;td>切换注释 toggle hide comments&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-13" class="outline-5">
&lt;h5 id="headline-13">
Refactoring (js2-refactor)
&lt;/h5>
&lt;div id="outline-text-headline-13" class="outline-text-5">
&lt;p>
Bindings should match the plain emacs assignments.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m k&lt;/code>&lt;/td>
&lt;td>删除到行尾 deletes to the end of the line, but does not cross semantic boundaries&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r 3 i&lt;/code>&lt;/td>
&lt;td>converts ternary operator to if-statement&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r a g&lt;/code>&lt;/td>
&lt;td>creates a &lt;code class="verbatim">/* global */&lt;/code> annotation if it is missing, and adds var to point to it&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r a o&lt;/code>&lt;/td>
&lt;td>命名参数 replaces arguments to a function call with an object literal of named arguments&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r b a&lt;/code>&lt;/td>
&lt;td>moves the last child out of current function, if-statement, for-loop or while-loop&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r c a&lt;/code>&lt;/td>
&lt;td>多行数组合并 converts a multiline array to one line&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c o&lt;/code>&lt;/td>
&lt;td>多行对象合并 converts a multiline object literal to one line&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r c u&lt;/code>&lt;/td>
&lt;td>多行函数合并 converts a multiline function to one line (expecting semicolons as statement delimiters)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r e a&lt;/code>&lt;/td>
&lt;td>单行数组拆分多行 converts a one line array to multiline&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e f&lt;/code>&lt;/td>
&lt;td>表达式转命名函数 extracts the marked expressions into a new named function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e m&lt;/code>&lt;/td>
&lt;td>表达式转新方法 extracts the marked expressions out into a new method in an object literal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e o&lt;/code>&lt;/td>
&lt;td>单行对象转多行 converts a one line object literal to multiline&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e u&lt;/code>&lt;/td>
&lt;td>单行函数转多行 converts a one line function to multiline (expecting semicolons as statement delimiters)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r e v&lt;/code>&lt;/td>
&lt;td>将表达式转为变量 takes a marked expression and replaces it with a var&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r i g&lt;/code>&lt;/td>
&lt;td>creates a shortcut for a marked global by injecting it in the wrapping immediately invoked function expression&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r i p&lt;/code>&lt;/td>
&lt;td>changes the marked expression to a parameter in a local function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r i v&lt;/code>&lt;/td>
&lt;td>replaces all instances of a variable with its initial value&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r l p&lt;/code>&lt;/td>
&lt;td>参数转本地变量 changes a parameter to a local var in a local function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r l t&lt;/code>&lt;/td>
&lt;td>添加终端日志 adds a console.log statement for what is at point (or region)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r r v&lt;/code>&lt;/td>
&lt;td>重命名全部变量 renames the variable on point and all occurrences in its lexical scope&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r s l&lt;/code>&lt;/td>
&lt;td>moves the next statement into current function, if-statement, for-loop, while-loop&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r s s&lt;/code>&lt;/td>
&lt;td>拆分字符串 splits a &lt;code class="verbatim">String&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r s v&lt;/code>&lt;/td>
&lt;td>拆分变量 splits a &lt;code class="verbatim">var&lt;/code> with multiple vars declared into several &lt;code class="verbatim">var&lt;/code> statements&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r t f&lt;/code>&lt;/td>
&lt;td>切换函数声明和表达式 toggle between function declaration and function expression&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r u w&lt;/code>&lt;/td>
&lt;td>replaces the parent statement with the selected region&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r v t&lt;/code>&lt;/td>
&lt;td>changes local &lt;code class="verbatim">var a&lt;/code> to be &lt;code class="verbatim">this.a&lt;/code> instead&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r w i&lt;/code>&lt;/td>
&lt;td>整个缓冲区转立即运行函数表达式 wraps the entire buffer in an immediately invoked function expression&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r w l&lt;/code>&lt;/td>
&lt;td>选定区域转 for 循环 wraps the region in a for-loop&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m x m j&lt;/code>&lt;/td>
&lt;td>下移一行 move line down, while keeping commas correctly placed&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m x m k&lt;/code>&lt;/td>
&lt;td>上移一行 move line up, while keeping commas correctly placed&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-5">
&lt;h5 id="headline-14">
Formatting (web-beautify)
&lt;/h5>
&lt;div id="outline-text-headline-14" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m =&lt;/code>&lt;/td>
&lt;td>美化格式 beautify code in js2-mode, json-mode, web-mode, and css-mode&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div id="outline-container-headline-15" class="outline-6">
&lt;h6 id="headline-15">
Documentation (js-doc)
&lt;/h6>
&lt;div id="outline-text-headline-15" class="outline-text-6">
&lt;p>
You can check more &lt;a href="https://github.com/mooz/js-doc/">here&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r d b&lt;/code>&lt;/td>
&lt;td>插入文件注释 insert JSDoc comment for current file&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r d f&lt;/code>&lt;/td>
&lt;td>插入函数注释 insert JSDoc comment for function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r d t&lt;/code>&lt;/td>
&lt;td>插入注释标签 insert tag to comment&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r d h&lt;/code>&lt;/td>
&lt;td>显示可用注释标签 show list of available jsdoc tags&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-16" class="outline-5">
&lt;h5 id="headline-16">
Auto-complete and documentation (tern)
&lt;/h5>
&lt;div id="outline-text-headline-16" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m C-g&lt;/code>&lt;/td>
&lt;td>brings you back to last place you were when you pressed M-..&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g g&lt;/code>&lt;/td>
&lt;td>跳转定义 jump to the definition of the thing under the cursor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g G&lt;/code>&lt;/td>
&lt;td>给定名称，跳转到定义 jump to definition for the given name&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h d&lt;/code>&lt;/td>
&lt;td>查找文档 find docs of the thing under the cursor. Press again to open the associated URL (if any)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h t&lt;/code>&lt;/td>
&lt;td>检查类型 find the type of the thing under the cursor&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r r V&lt;/code>&lt;/td>
&lt;td>重命名变量 rename variable under the cursor using tern&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-17" class="outline-5">
&lt;h5 id="headline-17">
JSON
&lt;/h5>
&lt;div id="outline-text-headline-17" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m h p&lt;/code>&lt;/td>
&lt;td>Get the path of the value at point&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-18" class="outline-5">
&lt;h5 id="headline-18">
REPL (skewer-mode)
&lt;/h5>
&lt;div id="outline-text-headline-18" class="outline-text-5">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m e e&lt;/code>&lt;/td>
&lt;td>评估最后表达式 evaluates the last expression&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m e E&lt;/code>&lt;/td>
&lt;td>评估并插入结果 evaluates and inserts the result of the last expression at point&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m s a&lt;/code>&lt;/td>
&lt;td>切换热更新测试 Toggle live evaluation of whole buffer in REPL on buffer changes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s b&lt;/code>&lt;/td>
&lt;td>将整个缓冲区内容发往测试 send current buffer contents to the skewer REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s B&lt;/code>&lt;/td>
&lt;td>将整个缓冲区发往测试，转入插入模式 send current buffer contents to the skewer REPL and switch to it in insert state&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s i&lt;/code>&lt;/td>
&lt;td>启动到测试平台 starts/switch to the skewer REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s r&lt;/code>&lt;/td>
&lt;td>发送选定区域进行测试 send current region to the skewer REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s R&lt;/code>&lt;/td>
&lt;td>发送选定区域进行测试，切换到插入模式 send current region to the skewer REPL and switch to it in insert state&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s s&lt;/code>&lt;/td>
&lt;td>切换到测试区域 switch to REPL&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
To be continued…&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-lua-in-emacs.org</title><link>/posts/emacs/using-lua-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-lua-in-emacs/</guid><description> Table of Contents Description
Features: Install Key Bindings
Commands Description This layer adds support for editing Lua.
Features: Editing lua files using lua-mode Sending code to a lua REPL Code linting using Luacheck Install To use this configuration layer, add it to your ~/.spacemacs. You will need to add lua to the existing dotspacemacs-configuration-layers list in this file.
In order to enable code linting, install Luacheck.
Key Bindings Commands Key Binding Description SPC m d lookup thing at point in lua documentation SPC m s b send buffer contents to REPL SPC m s f send current function to REPL SPC m s l send current line to REPL SPC m s r send current region to REPL</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Table of Contents
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="#description">Description&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#features">Features:&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#install">Install&lt;/a>&lt;/li>
&lt;li>
&lt;p>&lt;a href="#key-bindings">Key Bindings&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#commands">Commands&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer adds support for editing Lua.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>Editing lua files using &lt;a href="https://github.com/immerrr/lua-mode">lua-mode&lt;/a>&lt;/li>
&lt;li>Sending code to a lua REPL&lt;/li>
&lt;li>Code linting using &lt;a href="https://github.com/mpeterv/luacheck">Luacheck&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
Install
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">lua&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;p>
In order to enable code linting, install &lt;a href="https://github.com/mpeterv/luacheck">Luacheck&lt;/a>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-2">
&lt;h2 id="headline-5">
Key Bindings
&lt;/h2>
&lt;div id="outline-text-headline-5" class="outline-text-2">
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Commands
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m d&lt;/code>&lt;/td>
&lt;td>lookup thing at point in lua documentation&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s b&lt;/code>&lt;/td>
&lt;td>send buffer contents to REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s f&lt;/code>&lt;/td>
&lt;td>send current function to REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s l&lt;/code>&lt;/td>
&lt;td>send current line to REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s r&lt;/code>&lt;/td>
&lt;td>send current region to REPL&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-macro-in-emacs.org</title><link>/posts/emacs/using-macro-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-macro-in-emacs/</guid><description>using-macro-in-emacs
Codes Define macros #+srcname: define-macros #+begin_src emacs-lisp ;;; with-dir (defmacro do-in-dir (DIR &amp;amp;rest FORMS) &amp;#34;Execute FORMS in DIR.&amp;#34; (let ((orig-dir (gensym))) `(prog2 (setq ,orig-dir default-directory) (progn (cd ,DIR) ,@FORMS) (cd ,orig-dir)))) #+end_src #+RESULTS: define-macros : do-in-dir
Run macros #+srcname: run-macros #+begin_src emacs-lisp (macroexpand &amp;#39;(do-in-dir &amp;#34;~/.emacs.d&amp;#34;)) #+end_src #+RESULTS: run-macros | prog2 | (setq G1829 default-directory) | (progn (cd ~/.emacs.d)) | (cd G1829) |</description><content>&lt;h1 class="title">&lt;p>using-macro-in-emacs&lt;/p>
&lt;/h1>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Codes
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;div id="outline-container-headline-2" class="outline-4">
&lt;h4 id="headline-2">
Define macros
&lt;/h4>
&lt;div id="outline-text-headline-2" class="outline-text-4">
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+srcname: define-macros
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;;; with-dir&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(defmacro do-in-dir (DIR &lt;span style="color:#66d9ef">&amp;amp;rest&lt;/span> FORMS)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Execute FORMS in DIR.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (let ((orig-dir (gensym)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>(prog2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (setq &lt;span style="color:#f92672">,&lt;/span>orig-dir default-directory)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (progn (cd &lt;span style="color:#f92672">,&lt;/span>DIR) &lt;span style="color:#f92672">,@&lt;/span>FORMS)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (cd &lt;span style="color:#f92672">,&lt;/span>orig-dir))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+RESULTS: define-macros
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">:&lt;/span> do-in-dir&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-4">
&lt;h4 id="headline-3">
Run macros
&lt;/h4>
&lt;div id="outline-text-headline-3" class="outline-text-4">
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+srcname: run-macros
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+begin_src emacs-lisp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#a6e22e">macroexpand&lt;/span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>(do-in-dir &lt;span style="color:#e6db74">&amp;#34;~/.emacs.d&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+end_src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>+RESULTS: run-macros
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| prog2 | (setq G1829 default-directory) | (progn (cd ~/.emacs.d)) | (cd G1829) |&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-python-in-emacs.org</title><link>/posts/emacs/using-python-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-python-in-emacs/</guid><description>Table of Contents Description
Features: Install
Layer Dependencies
Auto-completion: Anaconda dependencies Syntax checking Test runner Automatic buffer formatting on save Automatic save of buffer when testing autoflake pylookup Hy-mode Configuration
Fill column Sort imports Management of Python versions and virtual environments
Manage virtual environments with pyvenv Manage multiple Python versions with pyenv
Automatic activation of local pyenv version Key Bindings
Inferior REPL process Running Python Script in shell Testing Refactoring Pip package management Live coding Hy REPL process Other Python commands Description This layer adds support for the Python language.</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Table of Contents
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="#description">Description&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#features">Features:&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#install">Install&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#layer">Layer&lt;/a>&lt;/li>
&lt;li>
&lt;p>&lt;a href="#dependencies">Dependencies&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#auto-completion-anaconda-dependencies">Auto-completion: Anaconda dependencies&lt;/a>&lt;/li>
&lt;li>&lt;a href="#syntax-checking">Syntax checking&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#test-runner">Test runner&lt;/a>&lt;/li>
&lt;li>&lt;a href="#automatic-buffer-formatting-on-save">Automatic buffer formatting on save&lt;/a>&lt;/li>
&lt;li>&lt;a href="#automatic-save-of-buffer-when-testing">Automatic save of buffer when testing&lt;/a>&lt;/li>
&lt;li>&lt;a href="#autoflake">autoflake&lt;/a>&lt;/li>
&lt;li>&lt;a href="#pylookup">pylookup&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hy-mode">Hy-mode&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#configuration">Configuration&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#fill-column">Fill column&lt;/a>&lt;/li>
&lt;li>&lt;a href="#sort-imports">Sort imports&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#management-of-python-versions-and-virtual-environments">Management of Python versions and virtual environments&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#manage-virtual-environments-with-pyvenv">Manage virtual environments with pyvenv&lt;/a>&lt;/li>
&lt;li>
&lt;p>&lt;a href="#manage-multiple-python-versions-with-pyenv">Manage multiple Python versions with pyenv&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#automatic-activation-of-local-pyenv-version">Automatic activation of local pyenv version&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="#key-bindings">Key Bindings&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#inferior-repl-process">Inferior REPL process&lt;/a>&lt;/li>
&lt;li>&lt;a href="#running-python-script-in-shell">Running Python Script in shell&lt;/a>&lt;/li>
&lt;li>&lt;a href="#testing">Testing&lt;/a>&lt;/li>
&lt;li>&lt;a href="#refactoring">Refactoring&lt;/a>&lt;/li>
&lt;li>&lt;a href="#pip-package-management">Pip package management&lt;/a>&lt;/li>
&lt;li>&lt;a href="#live-coding">Live coding&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hy-repl-process">Hy REPL process&lt;/a>&lt;/li>
&lt;li>&lt;a href="#other-python-commands">Other Python commands&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>This layer adds support for the Python language.&lt;/p>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Features:
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>Auto-completion using &lt;a href="https://github.com/proofit404/anaconda-mode">anaconda-mode&lt;/a>&lt;/li>
&lt;li>Code Navigation using &lt;a href="https://github.com/proofit404/anaconda-mode">anaconda-mode&lt;/a>&lt;/li>
&lt;li>Documentation Lookup using &lt;a href="https://github.com/proofit404/anaconda-mode">anaconda-mode&lt;/a> and &lt;a href="https://github.com/tsgates/pylookup">pylookup&lt;/a>&lt;/li>
&lt;li>Test Runners using &lt;a href="https://github.com/syl20bnr/nose.el">nose.el&lt;/a> or &lt;a href="https://github.com/ionrock/pytest-el">pytest&lt;/a>&lt;/li>
&lt;li>Virtual Environment using &lt;a href="https://github.com/jorgenschaefer/pyvenv">pyvenv&lt;/a> and &lt;a href="https://github.com/yyuu/pyenv">pyenv&lt;/a>&lt;/li>
&lt;li>semantic mode is enabled&lt;/li>
&lt;li>PEP8 compliant formatting via &lt;a href="https://github.com/google/yapf">YAPF&lt;/a>&lt;/li>
&lt;li>PEP8 checks with &lt;a href="https://pypi.python.org/pypi/flake8">flake8&lt;/a> or &lt;a href="https://pypi.python.org/pypi/pylint/1.6.4">pylint&lt;/a>&lt;/li>
&lt;li>Suppression of unused import with &lt;a href="https://github.com/myint/autoflake">autoflake&lt;/a>&lt;/li>
&lt;li>Use the &lt;code>%&lt;/code> key to jump between blocks with &lt;a href="https://github.com/redguardtoo/evil-matchit">evil-matchit&lt;/a>&lt;/li>
&lt;li>Sort imports with &lt;a href="https://pypi.python.org/pypi/isort">isort&lt;/a>&lt;/li>
&lt;li>Fix a missing import statement with &lt;a href="https://github.com/anachronic/importmagic.el">importmagic&lt;/a>&lt;/li>
&lt;li>Pip package manager with &lt;a href="https://github.com/brotzeit/pippel">pippel&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-2">
&lt;h2 id="headline-4">
Install
&lt;/h2>
&lt;div id="outline-text-headline-4" class="outline-text-2">
&lt;div id="outline-container-headline-5" class="outline-3">
&lt;h3 id="headline-5">
Layer
&lt;/h3>
&lt;div id="outline-text-headline-5" class="outline-text-3">
&lt;p>To use this configuration layer, add it to your &lt;code class="verbatim">~/.spacemacs&lt;/code>. You will need to
add &lt;code class="verbatim">python&lt;/code> to the existing &lt;code class="verbatim">dotspacemacs-configuration-layers&lt;/code> list in this
file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Dependencies
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;div id="outline-container-headline-7" class="outline-4">
&lt;h4 id="headline-7">
Auto-completion: Anaconda dependencies
&lt;/h4>
&lt;div id="outline-text-headline-7" class="outline-text-4">
&lt;p>&lt;code class="verbatim">anaconda-mode&lt;/code> tries to install the dependencies itself but sometimes
it does not work and you may encounter the following message when
opening a python buffer:&lt;/p>
&lt;pre class="example">
Blocking call to accept-process-output with quit inhibited!!
&lt;/pre>
&lt;p>
To fix this, install the &lt;code class="verbatim">anaconda-mode&lt;/code> &lt;a href="https://github.com/proofit404/anaconda-mode/wiki">anaconda-deps&lt;/a> by hand:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> pip install --upgrade &lt;span style="color:#e6db74">&amp;#34;jedi&amp;gt;=0.9.0&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;json-rpc&amp;gt;=1.8.1&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;service_factory&amp;gt;=0.1.5&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
If you encounter problems with Jedi 1.0 consider downgrading to 0.9.0. See &lt;a href="https://github.com/davidhalter/jedi/issues/873">this
issue&lt;/a> for details.&lt;/p>
&lt;p>
Source: &lt;a href="https://github.com/proofit404/anaconda-mode#issues">https://github.com/proofit404/anaconda-mode#issues&lt;/a>&lt;/p>
&lt;p>
If you are facing errors such as &amp;#34;Unable to run anaconda-mode server&amp;#34;, try
setting your &lt;code class="verbatim">PYTHONPATH&lt;/code> as explained at
&lt;a href="https://github.com/proofit404/anaconda-mode#pythonpath">https://github.com/proofit404/anaconda-mode#pythonpath&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-4">
&lt;h4 id="headline-8">
Syntax checking
&lt;/h4>
&lt;div id="outline-text-headline-8" class="outline-text-4">
&lt;p>Syntax checking uses &lt;code class="verbatim">flake8&lt;/code> package:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> pip install flake8&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-9" class="outline-3">
&lt;h3 id="headline-9">
Test runner
&lt;/h3>
&lt;div id="outline-text-headline-9" class="outline-text-3">
&lt;p>Both &lt;code class="verbatim">nose&lt;/code> and &lt;code class="verbatim">pytest&lt;/code> are supported. By default &lt;code class="verbatim">nose&lt;/code> is used.
To choose your test runner set the layer variable &lt;code class="verbatim">python-test-runner&lt;/code> to
either &lt;code class="verbatim">nose&lt;/code> or &lt;code class="verbatim">pytest&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq-default dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((python :variables python-test-runner &lt;span style="color:#e6db74">&amp;#39;pytest&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
If you need both then you can set &lt;code class="verbatim">python-test-runner&lt;/code> to a list like this:&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(setq-default dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((python :variables python-test-runner &lt;span style="color:#f92672">&amp;#39;&lt;/span>(pytest nose))))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This means that &lt;code class="verbatim">pytest&lt;/code> is your primary test runner. To use the secondary test
runner you can call the test functions with a prefix argument e.g. &lt;code>SPC u SPC m
t t&lt;/code> to run one test with &lt;code class="verbatim">nose&lt;/code>.&lt;/p>
&lt;p>
To set project specific test runners you can set &lt;code class="verbatim">python-test-runner&lt;/code> in a
directory local variable in your project root. &lt;code>SPC f v d&lt;/code> in Spacemacs. See
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Directory-Variables.html">the official documentation&lt;/a> for more information.&lt;/p>
&lt;p>
The root of the project is detected with a &lt;code class="verbatim">.git&lt;/code> directory or a &lt;code class="verbatim">setup.cfg&lt;/code> file.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-3">
&lt;h3 id="headline-10">
Automatic buffer formatting on save
&lt;/h3>
&lt;div id="outline-text-headline-10" class="outline-text-3">
&lt;p>To enable automatic buffer formatting on save with &lt;a href="https://github.com/google/yapf">YAPF&lt;/a> set the variable
&lt;code class="verbatim">python-enable-yapf-format-on-save&lt;/code> to &lt;code class="verbatim">t&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (python :variables python-enable-yapf-format-on-save &lt;span style="color:#66d9ef">t&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-11" class="outline-3">
&lt;h3 id="headline-11">
Automatic save of buffer when testing
&lt;/h3>
&lt;div id="outline-text-headline-11" class="outline-text-3">
&lt;p>By default a buffer is automatically saved before tests are executed upon it,
you can disable this feature by setting &lt;code class="verbatim">python-save-before-test&lt;/code> to &lt;code class="verbatim">nil&lt;/code>.&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span> (setq-default dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (python :variables python-save-before-test &lt;span style="color:#66d9ef">nil&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-3">
&lt;h3 id="headline-12">
autoflake
&lt;/h3>
&lt;div id="outline-text-headline-12" class="outline-text-3">
&lt;p>To be able to suppress unused imports easily, install &lt;a href="https://github.com/myint/autoflake">autoflake&lt;/a>:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> pip install autoflake&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-13" class="outline-3">
&lt;h3 id="headline-13">
pylookup
&lt;/h3>
&lt;div id="outline-text-headline-13" class="outline-text-3">
&lt;p>To use &lt;code class="verbatim">pylookup&lt;/code> on &lt;code>SPC m h H&lt;/code>, make sure you update the database first, using
&lt;code>SPC SPC pylookup-update&lt;/code>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-3">
&lt;h3 id="headline-14">
Hy-mode
&lt;/h3>
&lt;div id="outline-text-headline-14" class="outline-text-3">
&lt;p>To be able to connect to an inferior lisp repl in &lt;code class="verbatim">hy-mode&lt;/code>, you need to make sure
that hy is installed.&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> pip install hy&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-2">
&lt;h2 id="headline-15">
Configuration
&lt;/h2>
&lt;div id="outline-text-headline-15" class="outline-text-2">
&lt;div id="outline-container-headline-16" class="outline-3">
&lt;h3 id="headline-16">
Fill column
&lt;/h3>
&lt;div id="outline-text-headline-16" class="outline-text-3">
&lt;p>If you want to customize the fill column value, use something like this inside
the &lt;code class="verbatim">user-init&lt;/code> function in your &lt;code class="verbatim">.spacemacs&lt;/code>:&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(setq-default dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (python :variables python-fill-column &lt;span style="color:#ae81ff">99&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-17" class="outline-3">
&lt;h3 id="headline-17">
Sort imports
&lt;/h3>
&lt;div id="outline-text-headline-17" class="outline-text-3">
&lt;p>If you want imports to be automatically sorted when you save a file (using
&lt;a href="https://pypi.python.org/pypi/isort">isort&lt;/a>), set the &lt;code class="verbatim">python-sort-imports-on-save&lt;/code> variable in the python layer
config section:&lt;/p>
&lt;div class="src src-elisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>(setq-default dotspacemacs-configuration-layers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#39;&lt;/span>((python :variables python-sort-imports-on-save &lt;span style="color:#66d9ef">t&lt;/span>)))&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
or as a directory-local variable (for per-project settings).&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-18" class="outline-2">
&lt;h2 id="headline-18">
Management of Python versions and virtual environments
&lt;/h2>
&lt;div id="outline-text-headline-18" class="outline-text-2">
&lt;div id="outline-container-headline-19" class="outline-3">
&lt;h3 id="headline-19">
Manage virtual environments with pyvenv
&lt;/h3>
&lt;div id="outline-text-headline-19" class="outline-text-3">
&lt;p>A virtual environment provides isolation of your Python package versions. For a
general overview see &lt;a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/">this site&lt;/a>. &lt;a href="http://virtualenvwrapper.readthedocs.io/en/latest/index.html">Virtualenvwrapper&lt;/a> which is also explained in the
previous link, is a program which manages your virtual environments in a central
location set by the &lt;code class="verbatim">WORKON_HOME&lt;/code> environment variable.&lt;/p>
&lt;p>
Spacemacs integration of virtual environments and virtualenvwrapper is provided
by the &lt;a href="https://github.com/jorgenschaefer/pyvenv">pyvenv&lt;/a> package. It provides the following keybindings:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m V a&lt;/code>&lt;/td>
&lt;td>激活任何目录下的虚拟环境 activate a virtual environment in any directory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m V d&lt;/code>&lt;/td>
&lt;td>停止虚拟环境 deactivate active virtual environment&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m V w&lt;/code>&lt;/td>
&lt;td>在 WORKON 目录工作 work on virtual environment in &lt;code class="verbatim">WORKON_HOME&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-20" class="outline-3">
&lt;h3 id="headline-20">
Manage multiple Python versions with pyenv
&lt;/h3>
&lt;div id="outline-text-headline-20" class="outline-text-3">
&lt;p>If you need multiple Python versions (e.g. Python 2 and Python 3) then take a
look at &lt;a href="https://github.com/yyuu/pyenv">pyenv&lt;/a>. It enables the installation and managment of multiple
Python versions.
&lt;a href="https://www.brianthicks.com/post/2015/04/15/automate-your-python-environment-with-pyenv/">This blogpost&lt;/a> gives a good overview on how to use the tool. Spacemacs
integration is provided by &lt;a href="https://github.com/proofit404/pyenv-mode">pyenv mode&lt;/a> which has the following keybindings.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m v s&lt;/code>&lt;/td>
&lt;td>set a pyenv environment with &lt;a href="https://github.com/pyenv/pyenv">pyenv&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m v u&lt;/code>&lt;/td>
&lt;td>unset a pyenv environment with &lt;a href="https://github.com/pyenv/pyenv">pyenv&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
Pyenv can also manage virtual environments for each of the Python versions it
has installed. Those will be listed alongside your Python versions.&lt;/p>
&lt;div id="outline-container-headline-21" class="outline-4">
&lt;h4 id="headline-21">
Automatic activation of local pyenv version
&lt;/h4>
&lt;div id="outline-text-headline-21" class="outline-text-4">
&lt;p>A project-specific pyenv version may be written to a file called
&lt;code class="verbatim">.python-version&lt;/code> using the &lt;a href="https://github.com/yyuu/pyenv/blob/master/COMMANDS.md#user-content-pyenv-local">pyenv local&lt;/a> command.&lt;/p>
&lt;p>
Spacemacs can search in parent directories for this file, and automatically set
the pyenv version. The behavior can be set with the variable
&lt;code class="verbatim">python-auto-set-local-pyenv-version&lt;/code> to:&lt;/p>
&lt;ul>
&lt;li>&lt;code class="verbatim">on-visit&lt;/code> (default) set the version when you visit a python buffer,&lt;/li>
&lt;li>&lt;code class="verbatim">on-project-switch&lt;/code> set the version when you switch projects,&lt;/li>
&lt;li>&lt;code class="verbatim">nil&lt;/code> to disable.&lt;/li>
&lt;/ul>
&lt;p>The same is also possible on pyvenv with a file called &lt;code class="verbatim">.venv&lt;/code>. The behavior
can be set with the variable &lt;code class="verbatim">python-auto-set-local-pyvenv-virtualenv=&lt;/code> to:&lt;/p>
&lt;ul>
&lt;li>&lt;code class="verbatim">on-visit&lt;/code> (default) set the virtualenv when you visit a python buffer,&lt;/li>
&lt;li>&lt;code class="verbatim">on-project-switch&lt;/code> set the virtualenv when you switch projects,&lt;/li>
&lt;li>&lt;code class="verbatim">nil&lt;/code> to disable.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-22" class="outline-2">
&lt;h2 id="headline-22">
Key Bindings
&lt;/h2>
&lt;div id="outline-text-headline-22" class="outline-text-2">
&lt;div id="outline-container-headline-23" class="outline-3">
&lt;h3 id="headline-23">
Inferior REPL process
&lt;/h3>
&lt;div id="outline-text-headline-23" class="outline-text-3">
&lt;p>Start a Python or iPython inferior REPL process with &lt;code>SPC m s i&lt;/code>.
If &lt;code class="verbatim">ipython&lt;/code> is available in system executable search paths, &lt;code class="verbatim">ipython&lt;/code>
will be used to launch python shell; otherwise, default &lt;code class="verbatim">python&lt;/code>
interpreter will be used. You may change your system executable
search path by activating a virtual environment.&lt;/p>
&lt;p>
Send code to inferior process commands:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m s b&lt;/code>&lt;/td>
&lt;td>send buffer and keep code buffer focused&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s B&lt;/code>&lt;/td>
&lt;td>send buffer and switch to REPL in insert mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s f&lt;/code>&lt;/td>
&lt;td>send function and keep code buffer focused&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s F&lt;/code>&lt;/td>
&lt;td>send function and switch to REPL in insert mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s i&lt;/code>&lt;/td>
&lt;td>start inferior REPL process&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s r&lt;/code>&lt;/td>
&lt;td>send region and keep code buffer focused&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s R&lt;/code>&lt;/td>
&lt;td>send region and switch to REPL in insert mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CTRL+j&lt;/code>&lt;/td>
&lt;td>next item in REPL history&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>CTRL+k&lt;/code>&lt;/td>
&lt;td>previous item in REPL history&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-24" class="outline-3">
&lt;h3 id="headline-24">
Running Python Script in shell
&lt;/h3>
&lt;div id="outline-text-headline-24" class="outline-text-3">
&lt;p>To run a Python script like you would in the shell press &lt;code>SPC m c c&lt;/code>
to start the Python script in comint mode. This is useful when working with
multiple Python files since the REPL does not reload changes made in other
modules.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m c c&lt;/code>&lt;/td>
&lt;td>Execute current file in a comint shell&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m c C&lt;/code>&lt;/td>
&lt;td>Execute current file in a comint shell and switch to it in &lt;code class="verbatim">insert state&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
&lt;strong>Note:&lt;/strong> With the universal argument &lt;code>SPC u&lt;/code> you can enter a new
compilation command.&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-25" class="outline-3">
&lt;h3 id="headline-25">
Testing
&lt;/h3>
&lt;div id="outline-text-headline-25" class="outline-text-3">
&lt;p>Test commands start with &lt;code>m t&lt;/code>. To use the secondary test runner call the
function with a prefix argument, for example &lt;code>SPC u SPC m t a&lt;/code>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>No Debug&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m t a&lt;/code>&lt;/td>
&lt;td>launch all tests of the project&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t b&lt;/code>&lt;/td>
&lt;td>launch all tests of the current buffer (same as module)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t m&lt;/code>&lt;/td>
&lt;td>launch all tests of the current module&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t s&lt;/code>&lt;/td>
&lt;td>launch all tests of the current suite (only with &lt;code class="verbatim">nose&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t t&lt;/code>&lt;/td>
&lt;td>launch the current test (function)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Debug&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m t A&lt;/code>&lt;/td>
&lt;td>launch all tests of the project in debug mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t B&lt;/code>&lt;/td>
&lt;td>launch all tests of the current buffer (module) in debug mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t M&lt;/code>&lt;/td>
&lt;td>launch all tests of the current module in debug mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t S&lt;/code>&lt;/td>
&lt;td>launch all tests of the current suite in debug mode (only with &lt;code class="verbatim">nose&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m t T&lt;/code>&lt;/td>
&lt;td>launch the current test (function) in debug mode&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-26" class="outline-3">
&lt;h3 id="headline-26">
Refactoring
&lt;/h3>
&lt;div id="outline-text-headline-26" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m r f&lt;/code>&lt;/td>
&lt;td>fix a missing import statement with &lt;a href="https://pypi.python.org/pypi/importmagic">importmagic&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r i&lt;/code>&lt;/td>
&lt;td>remove unused imports with &lt;a href="https://github.com/myint/autoflake">autoflake&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m r I&lt;/code>&lt;/td>
&lt;td>sort imports with &lt;a href="https://pypi.python.org/pypi/isort">isort&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-27" class="outline-3">
&lt;h3 id="headline-27">
Pip package management
&lt;/h3>
&lt;div id="outline-text-headline-27" class="outline-text-3">
&lt;p>In python buffer type &lt;code>SPC m P&lt;/code> to open buffer listing all installed &lt;code class="verbatim">pip&lt;/code>
packages in the currently activated virtual environment.&lt;/p>
&lt;p>
&lt;strong>Note:&lt;/strong> To open this menu from outside a python buffer type
&lt;code>SPC SPC pippel-list-packages RET&lt;/code> .&lt;/p>
&lt;p>
In the package list buffer:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>RET&lt;/code>&lt;/td>
&lt;td>follow link (&lt;code class="verbatim">pippel-menu-visit-homepage&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>d&lt;/code>&lt;/td>
&lt;td>mark for deletion (&lt;code class="verbatim">pippel-menu-mark-delete&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>i&lt;/code>&lt;/td>
&lt;td>prompt user for packages (&lt;code class="verbatim">pippel-install-package&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>m&lt;/code>&lt;/td>
&lt;td>remove mark (&lt;code class="verbatim">pippel-menu-mark-unmark&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>r&lt;/code>&lt;/td>
&lt;td>refresh package list (&lt;code class="verbatim">pippel-list-packages&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>U&lt;/code>&lt;/td>
&lt;td>mark all upgradable (&lt;code class="verbatim">pippel-menu-mark-all-upgrades&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>u&lt;/code>&lt;/td>
&lt;td>mark for upgrade (&lt;code class="verbatim">pippel-menu-mark-upgrade&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>x&lt;/code>&lt;/td>
&lt;td>perform marked package menu actions (&lt;code class="verbatim">pippel-menu-execute&lt;/code>)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-28" class="outline-3">
&lt;h3 id="headline-28">
Live coding
&lt;/h3>
&lt;div id="outline-text-headline-28" class="outline-text-3">
&lt;p>Live coding is provided by the &lt;a href="https://github.com/donkirkby/live-py-plugin">live-py-plugin.&lt;/a>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m l&lt;/code>&lt;/td>
&lt;td>Toggle live-py-mode&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-29" class="outline-3">
&lt;h3 id="headline-29">
Hy REPL process
&lt;/h3>
&lt;div id="outline-text-headline-29" class="outline-text-3">
&lt;p>Start a Hy inferior repel process with &lt;code>SPC m s i&lt;/code>. If &lt;code class="verbatim">hy&lt;/code> is
available in system executable search paths, &lt;code class="verbatim">hy&lt;/code> will be used to
launch the shell. You may change your system executable search path
by activating a virtual enviornment.&lt;/p>
&lt;p>
Send code to hy REPL commands:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m s b&lt;/code>&lt;/td>
&lt;td>send buffer and keep code buffer focused&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s B&lt;/code>&lt;/td>
&lt;td>switch to REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s e&lt;/code>&lt;/td>
&lt;td>send sexp in front of the cursor to the REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s f&lt;/code>&lt;/td>
&lt;td>send function to REPL and stay in buffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s F&lt;/code>&lt;/td>
&lt;td>send function to REPL and switch to repl buffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s i&lt;/code>&lt;/td>
&lt;td>start inferior hy repl&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s r&lt;/code>&lt;/td>
&lt;td>send current region to the REPL and stay in buffer&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m s R&lt;/code>&lt;/td>
&lt;td>send current region to the REPL and switch to repl buffer&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-30" class="outline-3">
&lt;h3 id="headline-30">
Other Python commands
&lt;/h3>
&lt;div id="outline-text-headline-30" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC m =&lt;/code>&lt;/td>
&lt;td>Reformat the buffer according to PEP8 using &lt;a href="https://github.com/google/yapf">YAPF&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m d b&lt;/code>&lt;/td>
&lt;td>toggle a breakpoint using &lt;code class="verbatim">wdb&lt;/code>, &lt;code class="verbatim">ipdb&lt;/code>, &lt;code class="verbatim">pudb&lt;/code> or &lt;code class="verbatim">pdb&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g g&lt;/code>&lt;/td>
&lt;td>go to definition using &lt;code class="verbatim">anaconda-mode-find-definitions&lt;/code> (&lt;code>C-o&lt;/code> to jump back)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g a&lt;/code>&lt;/td>
&lt;td>go to assignment using &lt;code class="verbatim">anaconda-mode-find-assignments&lt;/code> (&lt;code>C-o&lt;/code> to jump back)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g b&lt;/code>&lt;/td>
&lt;td>jump back&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m g u&lt;/code>&lt;/td>
&lt;td>navigate between usages with &lt;code class="verbatim">anaconda-mode-find-references&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h d&lt;/code>&lt;/td>
&lt;td>look for documentation using &lt;code class="verbatim">helm-pydoc&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h h&lt;/code>&lt;/td>
&lt;td>quick documentation using anaconda&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m h H&lt;/code>&lt;/td>
&lt;td>open documentation in &lt;code class="verbatim">firefox&lt;/code> using &lt;a href="https://github.com/tsgates/pylookup">pylookup&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m v s&lt;/code>&lt;/td>
&lt;td>set a pyenv environment with &lt;a href="https://github.com/pyenv/pyenv">pyenv&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m v u&lt;/code>&lt;/td>
&lt;td>unset a pyenv environment with &lt;a href="https://github.com/pyenv/pyenv">pyenv&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m V w&lt;/code>&lt;/td>
&lt;td>work on virtual environment in &lt;code class="verbatim">WORKON_HOME&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m V a&lt;/code>&lt;/td>
&lt;td>activate a virtual environment in any directory&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC m V d&lt;/code>&lt;/td>
&lt;td>deactivate active virtual environment&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>using-spacemacs-base-in-emacs.org</title><link>/posts/emacs/using-spacemacs-base-in-emacs/</link><pubDate>Fri, 16 Feb 2018 20:03:50 -0400</pubDate><guid>/posts/emacs/using-spacemacs-base-in-emacs/</guid><description> Description TODO describe spacemacs distribution in this file</description><content>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Description
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
&lt;span class="todo">TODO&lt;/span>
describe spacemacs distribution in this file
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>Vim is a life style</title><link>/posts/vim/vimer/</link><pubDate>Fri, 16 Feb 2018 14:06:05 -0400</pubDate><guid>/posts/vim/vimer/</guid><description>vim outstanding configuration file &amp;#34; From cowboy configuration &amp;#34; Use the Solarized Dark theme set background=dark colorscheme solarized &amp;#34;colorscheme desert &amp;#34; Make Vim more useful set nocompatible &amp;#34; Use the OS clipboard by default (on versions compiled with `+clipboard`) set clipboard=unnamed &amp;#34; Enhance command-line completion set wildmenu &amp;#34; Allow cursor keys in insert mode set esckeys &amp;#34; Allow backspace in insert mode set backspace=indent,eol,start &amp;#34; Optimize for fast terminal connections set ttyfast &amp;#34; Add the g flag to search/replace by default set gdefault &amp;#34; Use UTF-8 without BOM set encoding=utf-8 nobomb &amp;#34; Change mapleader let mapleader=&amp;#34;,&amp;#34; &amp;#34; Don’t add empty newlines at the end of files set binary set noeol &amp;#34; Centralize backups, swapfiles and undo history set backupdir=~/dotfiles/.</description><content>&lt;h1 id="vim-outstanding-configuration-file">vim outstanding configuration file&lt;/h1>
&lt;pre tabindex="0">&lt;code>&amp;#34; From cowboy configuration
&amp;#34; Use the Solarized Dark theme
set background=dark
colorscheme solarized
&amp;#34;colorscheme desert
&amp;#34; Make Vim more useful
set nocompatible
&amp;#34; Use the OS clipboard by default (on versions compiled with `+clipboard`)
set clipboard=unnamed
&amp;#34; Enhance command-line completion
set wildmenu
&amp;#34; Allow cursor keys in insert mode
set esckeys
&amp;#34; Allow backspace in insert mode
set backspace=indent,eol,start
&amp;#34; Optimize for fast terminal connections
set ttyfast
&amp;#34; Add the g flag to search/replace by default
set gdefault
&amp;#34; Use UTF-8 without BOM
set encoding=utf-8 nobomb
&amp;#34; Change mapleader
let mapleader=&amp;#34;,&amp;#34;
&amp;#34; Don’t add empty newlines at the end of files
set binary
set noeol
&amp;#34; Centralize backups, swapfiles and undo history
set backupdir=~/dotfiles/.vim/backups
set directory=~/dotfiles/.vim/swaps
if exists(&amp;#34;&amp;amp;undodir&amp;#34;)
set undodir=~/dotfiles/.vim/undo
endif
set tags+=~/dotfiles/data/systags
&amp;#34; Don’t create backups when editing files in certain directories
set backupskip=/tmp/*,/private/tmp/*
&amp;#34; Respect modeline in files
set modeline
set modelines=4
&amp;#34; Enable per-directory .vimrc files and disable unsafe commands in them
set exrc
set secure
&amp;#34; Enable line numbers
set number
&amp;#34; Enable syntax highlighting
syntax on
&amp;#34; Highlight current line
set cursorline
&amp;#34; Make tabs as wide as two spaces
set tabstop=2
&amp;#34; Show “invisible” characters
set lcs=tab:▸\ ,trail:·,eol:¬,nbsp:_
set list
&amp;#34; Highlight searches
set hlsearch
&amp;#34; Ignore case of searches
set ignorecase
&amp;#34; Highlight dynamically as pattern is typed
set incsearch
&amp;#34; Always show status line
set laststatus=2
&amp;#34; Enable mouse in all modes
set mouse=a
&amp;#34; Disable error bells
set noerrorbells
&amp;#34; Don’t reset cursor to start of line when moving around.
set nostartofline
&amp;#34; Show the cursor position
set ruler
&amp;#34; Don’t show the intro message when starting Vim
set shortmess=atI
&amp;#34; Show the current mode
set showmode
&amp;#34; Show the filename in the window titlebar
set title
&amp;#34; Show the (partial) command as it’s being typed
set showcmd
&amp;#34; Use relative line numbers
if exists(&amp;#34;&amp;amp;relativenumber&amp;#34;)
set relativenumber
au BufReadPost * set relativenumber
endif
&amp;#34; Start scrolling three lines before the horizontal window border
set scrolloff=3
&amp;#34; ----------------------------------------
&amp;#34;vundle and pathogen for installing plugins
&amp;#34; ----------------------------------------
&amp;#34;source ~/.vim/vundle.vim
filetype off
execute pathogen#infect()
filetype plugin indent on
syntax on
&amp;#34; ----------------------------------------
&amp;#34; function key binding
&amp;#34; ----------------------------------------
&amp;#34; &amp;lt;F1&amp;gt; for help
nnoremap &amp;lt;f2&amp;gt; :edit .&amp;lt;cr&amp;gt;
set pastetoggle=&amp;lt;f3&amp;gt;
nnoremap &amp;lt;F4&amp;gt; :!deploy&amp;lt;CR&amp;gt;
nnoremap &amp;lt;F5&amp;gt; :call CompileCode()&amp;lt;CR&amp;gt;
imap &amp;lt;F5&amp;gt; &amp;lt;ESC&amp;gt;:call CompileCode()&amp;lt;CR&amp;gt;
vmap &amp;lt;F5&amp;gt; &amp;lt;ESC&amp;gt;:call CompileCode()&amp;lt;CR&amp;gt;
nnoremap &amp;lt;F6&amp;gt; :call RunResult()&amp;lt;CR&amp;gt;
nnoremap &amp;lt;F7&amp;gt; :FufFile&amp;lt;CR&amp;gt;
&amp;#34;nmap &amp;lt;F11&amp;gt; :so $VIM\basic.vim&amp;lt;CR&amp;gt;
&amp;#34;nmap &amp;lt;F12&amp;gt; :mks! $VIM\basic.vim&amp;lt;CR&amp;gt;
&amp;#34;run current file as command
nnoremap &amp;lt;F11&amp;gt; :! %
&amp;#34;compile and run automatically
nnoremap &amp;lt;F12&amp;gt; :.w !bash
&amp;#34; ----------------------------------------
&amp;#34;basic settings
&amp;#34; ----------------------------------------
set noerrorbells
set novisualbell
&amp;#34;col murphy
set guioptions-=T
&amp;#34;behavior
set hls
set cul
set ic
&amp;#34;show match
set sm
set mps=(:),{:},[:]
&amp;#34;text
set list
set listchars=tab:\|\
set wrap
set ai
set si
set cin
set is
&amp;#34;folding
set fen
set fdm=syntax
set scr=6
set cmdheight=2
set nobk
set aw
set ar
&amp;#34;encoding
set enc=utf-8
set fenc=utf-8
set tenc=utf-8
&amp;#34;guifont list of font names to be used in the GUI
set gfn=DejaVu\ Sans\ Mono\ 16
set ts=4
set sw=4
set com=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:&amp;gt;,fb:-
&amp;#34;filetype
&amp;#34;filetype plugin indent on
&amp;#34; ----------------------------------------
&amp;#34; More key bindings
&amp;#34; ----------------------------------------
&amp;#34;quick edit dotvimrc file
if has(&amp;#34;win32&amp;#34;)
map &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;ee :e $VIM\_vimrc&amp;lt;cr&amp;gt;
map &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;rc :source $VIM\_vimrc&amp;lt;cr&amp;gt; &amp;#34; 快速载入 vimrc 文件
else
map &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;ef :e /usr/share/vim/vimfiles&amp;lt;cr&amp;gt;
map &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;ee :e ~/.vimrc&amp;lt;cr&amp;gt;
map &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;rc :source ~/.vimrc&amp;lt;cr&amp;gt; &amp;#34; 快速载入 vimrc 文件
let helptags=&amp;#34;~/.vim/doc&amp;#34;
set helplang=cn
endif
&amp;#34;manipulating tabs
nmap &amp;lt;C-t&amp;gt; :tabnew&amp;lt;cr&amp;gt;
nmap &amp;lt;C-n&amp;gt; :tabnext&amp;lt;cr&amp;gt;
nmap &amp;lt;C-k&amp;gt; :tabclose&amp;lt;cr&amp;gt;
nmap &amp;lt;C-Tab&amp;gt; :tabnext&amp;lt;cr&amp;gt;
&amp;#34;using buffers
nmap &amp;lt;C-b&amp;gt; :buffers&amp;lt;cr&amp;gt;
nmap &amp;lt;C-d&amp;gt; :bnext&amp;lt;cr&amp;gt;
nmap &amp;lt;C-e&amp;gt; :bprevious&amp;lt;cr&amp;gt;
&amp;#34;tab to indent in normal mode
nmap &amp;lt;tab&amp;gt; v&amp;gt;&amp;lt;cr&amp;gt;
nmap &amp;lt;S-tab&amp;gt; v&amp;lt;&amp;lt;cr&amp;gt;
&amp;#34;sessions enabled
set sessionoptions=buffers,sesdir,help,tabpages,winsize
au VimLeave * mks! $VIM\basic.vim
&amp;#34;windows operation
nmap &amp;lt;silent&amp;gt; gk :wincmd k&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; gh :wincmd h&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; gl :wincmd l&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; g1 :wincmd t&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; g2 :wincmd b&amp;lt;Bar&amp;gt;:wincmd k&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; g3 :wincmd t&amp;lt;Bar&amp;gt;:wincmd j&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; g4 :wincmd b&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; gt g2&amp;lt;Bar&amp;gt;:wincmd h&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; gb g3&amp;lt;Bar&amp;gt;:wincmd l&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; gp :wincmd p&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; g= :wincmd =&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; gx :wincmd x&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; hs :split&amp;lt;Bar&amp;gt;:wincmd j&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; vs :vsplit&amp;lt;Bar&amp;gt;:wincmd l&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; &amp;#34;cs :close&amp;lt;CR&amp;gt;
&amp;#34;quick comments,leader is c
&amp;#34;normal comment
map cl &amp;lt;plug&amp;gt;NERDCommenterComment
&amp;#34;toggle comment stats
map ci &amp;lt;leader&amp;gt;ci
&amp;#34;sorroud words and lines,leader is s
&amp;#34;in visual mode, use `s&amp;#34;` to soround
map ss i&amp;#34;&amp;lt;esc&amp;gt;eli&amp;#34;
map sl 0i&amp;#34;&amp;lt;esc&amp;gt;Ai&amp;#34;
&amp;#34;deleting whitespaces
nmap dh :%s/^ *//g
nmap dt :%s/ *$//g
nmap db :%s/^\n//g
&amp;#34;macros
nmap ma qaYp&amp;lt;C-a&amp;gt;q
&amp;#34;Close pair symbles
inoremap ( ()&amp;lt;esc&amp;gt;i
&amp;#34;inoremap ) =ClosePair(&amp;#39;)&amp;#39;)
inoremap { {}&amp;lt;esc&amp;gt;i
&amp;#34;inoremap } =ClosePair(&amp;#39;}&amp;#39;)
inoremap [ []&amp;lt;esc&amp;gt;i
&amp;#34;inoremap ] =ClosePair(&amp;#39;]&amp;#39;)
inoremap &amp;lt; &amp;lt;&amp;gt;&amp;lt;esc&amp;gt;i
&amp;#34;inoremap &amp;gt; =ClosePair(&amp;#39;&amp;gt;&amp;#39;)
&amp;#34; ----------------------------------------
&amp;#34;plugins configurations
&amp;#34; ----------------------------------------
&amp;#34;indent guides
let g:indent_guides_enable_on_vim_startup = 1
hi IndentGuidesOdd ctermbg=lightgrey
hi IndentGuidesEven ctermbg=darkgray
&amp;#34;UltiSnips
let g:UltiSnipsExpandTrigger=&amp;#34;&amp;lt;tab&amp;gt;&amp;#34;
let g:UltiSnipsJumpForwardTrigger=&amp;#34;&amp;lt;c-b&amp;gt;&amp;#34;
let g:UltiSnipsJumpBackwardTrigger=&amp;#34;&amp;lt;c-z&amp;gt;&amp;#34;
&amp;#34; If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit=&amp;#34;vertical&amp;#34;
&amp;#34;fuzzy finder
let g:fuf_modesDisable = []
let g:fuf_mrufile_maxItem = 400
let g:fuf_mrucmd_maxItem = 400
nnoremap &amp;lt;leader&amp;gt;cc :FufFile&amp;lt;CR&amp;gt;
nnoremap &amp;lt;leader&amp;gt;cd :FufDir&amp;lt;CR&amp;gt;
&amp;#34; ----------------&amp;lt;&amp;gt;------------------------
&amp;#34; Functions
&amp;#34; ----------------------------------------
func! GotoCurrentDir()
exec &amp;#34;cd %:h&amp;#34;
endfunc
&amp;#34;autocompile
func! CompileCode()
exec &amp;#34;w&amp;#34;
if &amp;amp;filetype == &amp;#34;cpp&amp;#34;
exec &amp;#34;call CompileGpp()&amp;#34;
elseif &amp;amp;filetype == &amp;#34;c&amp;#34;
exec &amp;#34;call CompileGcc()&amp;#34;
elseif &amp;amp;filetype == &amp;#34;java&amp;#34;
exec &amp;#34;call CompileJava()&amp;#34;
elseif &amp;amp;filetype == &amp;#34;lua&amp;#34;
exec &amp;#34;call RunLua()&amp;#34;
elseif &amp;amp;filetype == &amp;#34;moon&amp;#34;
exec &amp;#34;call CompileMoon()&amp;#34;
elseif &amp;amp;filetype == &amp;#34;py&amp;#34;
exec &amp;#34;call RunPython()&amp;#34;
endif
endfunc
func! RunResult()
exec &amp;#34;w&amp;#34;
if search(&amp;#34;mpi\.h&amp;#34;) != 0
exec &amp;#34;!mpirun -np 4 ./%&amp;lt;&amp;#34;
elseif &amp;amp;filetype == &amp;#34;cpp&amp;#34;
exec &amp;#34;! ./%&amp;lt;&amp;#34;
elseif &amp;amp;filetype == &amp;#34;c&amp;#34;
exec &amp;#34;! ./%&amp;lt;&amp;#34;
elseif &amp;amp;filetype == &amp;#34;python&amp;#34;
exec &amp;#34;call RunPython()&amp;#34;
elseif &amp;amp;filetype == &amp;#34;lua&amp;#34;
exec &amp;#34;call RunLua()&amp;#34;
elseif &amp;amp;filetype == &amp;#34;java&amp;#34;
exec &amp;#34;!java %&amp;lt;&amp;#34;
endif
endfunc
func! RunPython()
exec &amp;#34;w&amp;#34;
exec &amp;#34;!python %&amp;#34;
endfunc
func! CompileJava()
exec &amp;#34;!javac %&amp;#34;
endfunc
func! RunLua()
exec &amp;#34;w&amp;#34;
exec &amp;#34;!luajit %&amp;#34;
endfunc
func! CompileMoon()
exec &amp;#34;w&amp;#34;
exec &amp;#34;!moon %&amp;#34;
exec &amp;#34;!moonc %&amp;#34;
let target = &amp;#34;%:r&amp;#34;.&amp;#34;.lua&amp;#34;
exec &amp;#34;!luajit &amp;#34;.target
endfunc
func! CompileGcc()
exec &amp;#34;w&amp;#34;
let compilecmd=&amp;#34;!gcc &amp;#34;
let compileflag=&amp;#34;-o %&amp;lt; &amp;#34;
if search(&amp;#34;mpi\.h&amp;#34;) != 0
let compilecmd = &amp;#34;!mpicc &amp;#34;
endif
if search(&amp;#34;glut\.h&amp;#34;) != 0
let compileflag .= &amp;#34; -lglut -lGLU -lGL &amp;#34;
endif
if search(&amp;#34;cv\.h&amp;#34;) != 0
let compileflag .= &amp;#34; -lcv -lhighgui -lcvaux &amp;#34;
endif
if search(&amp;#34;omp\.h&amp;#34;) != 0
let compileflag .= &amp;#34; -fopenmp &amp;#34;
endif
if search(&amp;#34;math\.h&amp;#34;) != 0
let compileflag .= &amp;#34; -lm &amp;#34;
endif
exec compilecmd.&amp;#34; % &amp;#34;.compileflag
endfunc
func! CompileGpp()
exec &amp;#34;w&amp;#34;
let compilecmd=&amp;#34;!g++ &amp;#34;
let compileflag=&amp;#34;-o %&amp;lt; &amp;#34;
if search(&amp;#34;mpi\.h&amp;#34;) != 0
let compilecmd = &amp;#34;!mpic++ &amp;#34;
endif
if search(&amp;#34;glut\.h&amp;#34;) != 0
let compileflag .= &amp;#34; -lglut -lGLU -lGL &amp;#34;
endif
if search(&amp;#34;cv\.h&amp;#34;) != 0
let compileflag .= &amp;#34; -lcv -lhighgui -lcvaux &amp;#34;
endif
if search(&amp;#34;omp\.h&amp;#34;) != 0
let compileflag .= &amp;#34; -fopenmp &amp;#34;
endif
if search(&amp;#34;math\.h&amp;#34;) != 0
let compileflag .= &amp;#34; -lm &amp;#34;
endif
exec compilecmd.&amp;#34; % &amp;#34;.compileflag
endfunc
&amp;#34; Strip trailing whitespace (,ss)
function! StripWhitespace()
let save_cursor = getpos(&amp;#34;.&amp;#34;)
let old_query = getreg(&amp;#39;/&amp;#39;)
:%s/\s\+$//e
call setpos(&amp;#39;.&amp;#39;, save_cursor)
call setreg(&amp;#39;/&amp;#39;, old_query)
endfunction
noremap &amp;lt;leader&amp;gt;ss :call StripWhitespace()&amp;lt;CR&amp;gt;
&amp;#34; Save a file as root (,W)
noremap &amp;lt;leader&amp;gt;W :w !sudo tee % &amp;gt; /dev/null&amp;lt;CR&amp;gt;
&amp;#34; Automatic commands
if has(&amp;#34;autocmd&amp;#34;)
&amp;#34; Enable file type detection
filetype on
&amp;#34; Treat .json files as .js
autocmd BufNewFile,BufRead *.json setfiletype json syntax=javascript
&amp;#34; Treat .md files as Markdown
autocmd BufNewFile,BufRead *.md setlocal filetype=markdown
endif
&lt;/code>&lt;/pre></content></item><item><title>2013-05-13-rake-in-coffee1.md</title><link>/posts/nodejs/2013-05-13-rake-in-coffee1/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/2013-05-13-rake-in-coffee1/</guid><description>layout: post title: &amp;ldquo;用coffee脚本自动生成MVC&amp;rdquo; description: &amp;quot;&amp;quot; category: &amp;ldquo;lesson&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 创建程序入口 mkdirp = require('./node_modules/express/node_modules/mkdirp') os = require('os') fs = require('fs') readline = require('readline') eol = 'win32' == os.platform() ? '\r\n' : '\n' views = ['list','create','get','update','layout'] emptyDirectory=(path, fn) -&amp;gt; fs.readdir path, (err, files)-&amp;gt; throw err if err &amp;amp;&amp;amp; 'ENOENT' != err.code fn(!files || !files.length) read=(path,fn) -&amp;gt; fs.readFile path,'utf8',(err,data)-&amp;gt; fn &amp;amp;&amp;amp; fn(data) write=(path, str) -&amp;gt; fs.writeFileSync(path, str,'utf8') console.log(' ' + path) mkdir=(path, fn) -&amp;gt; mkdirp path, 755, (err)-&amp;gt; throw err if err console.</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
title: &amp;ldquo;用coffee脚本自动生成MVC&amp;rdquo;
description: &amp;quot;&amp;quot;
category: &amp;ldquo;lesson&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h2 id="创建程序入口">创建程序入口&lt;/h2>
&lt;pre>&lt;code>mkdirp = require('./node_modules/express/node_modules/mkdirp')
os = require('os')
fs = require('fs')
readline = require('readline')
eol = 'win32' == os.platform() ? '\r\n' : '\n'
views = ['list','create','get','update','layout']
emptyDirectory=(path, fn) -&amp;gt;
fs.readdir path, (err, files)-&amp;gt;
throw err if err &amp;amp;&amp;amp; 'ENOENT' != err.code
fn(!files || !files.length)
read=(path,fn) -&amp;gt;
fs.readFile path,'utf8',(err,data)-&amp;gt;
fn &amp;amp;&amp;amp; fn(data)
write=(path, str) -&amp;gt;
fs.writeFileSync(path, str,'utf8')
console.log(' ' + path)
mkdir=(path, fn) -&amp;gt;
mkdirp path, 755, (err)-&amp;gt;
throw err if err
console.log ' ' + path
fn &amp;amp;&amp;amp; fn(path)
abort=(str) -&amp;gt;
console.error str
process.exit(1)
&lt;/code>&lt;/pre></content></item><item><title>2013-05-13-rake-in-coffee2.md</title><link>/posts/nodejs/2013-05-13-rake-in-coffee2/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/2013-05-13-rake-in-coffee2/</guid><description>layout: post title: &amp;ldquo;用coffee脚本自动生成MVC&amp;rdquo; description: &amp;quot;&amp;quot; category: &amp;ldquo;lesson&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 创建程序入口 createApplication=(path)-&amp;gt; console.log 'creating files...' createMVC path 生成MVC的入口 createMVC=(path)-&amp;gt; console.log path console.log(&amp;quot;请注意，我将为你自动生成相关文件。所有现有文件将被覆盖。&amp;quot;); console.log(&amp;quot;1. 生成数据模块定义文件&amp;quot;) moduleDir = './module/' + path mkdir moduleDir templateSchemaFile = './templates/schema.coffee' templateSchemaFileData = fs.readFileSync templateSchemaFile,'utf8' console.log templateSchemaFileData write moduleDir + '/schema.coffee',templateSchemaFileData console.log(&amp;quot;2. 生成视图定义文件&amp;quot;) viewDir= './views/' + path mkdir viewDir for view in views templateViewFile= './templates/' + view + '.jade' write viewDir + '/' + view + '.</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
title: &amp;ldquo;用coffee脚本自动生成MVC&amp;rdquo;
description: &amp;quot;&amp;quot;
category: &amp;ldquo;lesson&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h2 id="创建程序入口">创建程序入口&lt;/h2>
&lt;pre>&lt;code>createApplication=(path)-&amp;gt;
console.log 'creating files...'
createMVC path
&lt;/code>&lt;/pre>
&lt;h2 id="生成mvc的入口">生成MVC的入口&lt;/h2>
&lt;pre>&lt;code>createMVC=(path)-&amp;gt;
console.log path
console.log(&amp;quot;请注意，我将为你自动生成相关文件。所有现有文件将被覆盖。&amp;quot;);
console.log(&amp;quot;1. 生成数据模块定义文件&amp;quot;)
moduleDir = './module/' + path
mkdir moduleDir
templateSchemaFile = './templates/schema.coffee'
templateSchemaFileData = fs.readFileSync templateSchemaFile,'utf8'
console.log templateSchemaFileData
write moduleDir + '/schema.coffee',templateSchemaFileData
console.log(&amp;quot;2. 生成视图定义文件&amp;quot;)
viewDir= './views/' + path
mkdir viewDir
for view in views
templateViewFile= './templates/' + view + '.jade'
write viewDir + '/' + view + '.jade', fs.readFileSync templateViewFile,'utf8'
&lt;/code>&lt;/pre></content></item><item><title>2013-05-13-rake-in-coffee3.md</title><link>/posts/nodejs/2013-05-13-rake-in-coffee3/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/2013-05-13-rake-in-coffee3/</guid><description>layout: post title: &amp;ldquo;用coffee脚本自动生成MVC&amp;rdquo; description: &amp;quot;&amp;quot; category: &amp;ldquo;lesson&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 主程序入口 main=()-&amp;gt; rl = readline.createInterface(process.stdin, process.stdout) console.log &amp;quot;Please define your Module's name and schema in following format&amp;quot; console.log &amp;quot;name=key1:value1,key2:value2,...&amp;quot; rl.setPrompt('OHAI&amp;gt; ') rl.prompt() rl.on 'line',(line)-&amp;gt; name = line.split('=') MODULE_NAME = name[0] MODULE_SCHEMA = name[1].split(',').join('\n') console.log MODULE_NAME console.log MODULE_SCHEMA console.log 'Generating new MVC files...' createApplication MODULE_NAME console.log 'Doing Customization Stuff...' moduleFile = './module/' + MODULE_NAME + '/schema.coffee' customize moduleFile,MODULE_NAME,MODULE_SCHEMA for view in views viewFile = '.</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
title: &amp;ldquo;用coffee脚本自动生成MVC&amp;rdquo;
description: &amp;quot;&amp;quot;
category: &amp;ldquo;lesson&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h2 id="主程序入口">主程序入口&lt;/h2>
&lt;pre>&lt;code>main=()-&amp;gt;
rl = readline.createInterface(process.stdin, process.stdout)
console.log &amp;quot;Please define your Module's name and schema in following format&amp;quot;
console.log &amp;quot;name=key1:value1,key2:value2,...&amp;quot;
rl.setPrompt('OHAI&amp;gt; ')
rl.prompt()
rl.on 'line',(line)-&amp;gt;
name = line.split('=')
MODULE_NAME = name[0]
MODULE_SCHEMA = name[1].split(',').join('\n')
console.log MODULE_NAME
console.log MODULE_SCHEMA
console.log 'Generating new MVC files...'
createApplication MODULE_NAME
console.log 'Doing Customization Stuff...'
moduleFile = './module/' + MODULE_NAME + '/schema.coffee'
customize moduleFile,MODULE_NAME,MODULE_SCHEMA
for view in views
viewFile = './views/' + MODULE_NAME + '/' + view + '.jade'
customize viewFile,MODULE_NAME,MODULE_SCHEMA
console.log 'Done'
process.exit(0)
&lt;/code>&lt;/pre>
&lt;h2 id="必要的后期个性化更改">必要的后期个性化更改&lt;/h2>
&lt;pre>&lt;code>customize=(file,module_name,module_schema)-&amp;gt;
data = fs.readFileSync file,'utf8'
data = data.replace /{_MODULE_NAME}/g,module_name
data = data.replace /{_MODULE_INSTANCE}/g,module_name
data = data.replace /{_MODULE_SCHEMA}/g,module_schema
fs.writeFileSync file,data
&lt;/code>&lt;/pre>
&lt;h2 id="别忘了main主函数的调用">别忘了&lt;code>main()&lt;/code>主函数的调用&lt;/h2></content></item><item><title>2013-05-14-markdown.md</title><link>/posts/misc/2013-05-14-markdown/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/2013-05-14-markdown/</guid><description>layout: post category: lessons title: &amp;ldquo;Markdown的深入学习&amp;rdquo; tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] Knockdown Github flavored Markdown Syntax Highlight
Advanced New Files *在设置文件中添加以下内容
&amp;quot;os_specific_alias&amp;quot;: { &amp;quot;pack&amp;quot;: { &amp;quot;windows&amp;quot;: &amp;quot;~\\AppData\\Roaming\\Sublime Text 2\\Packages&amp;quot;, &amp;quot;linux&amp;quot;: &amp;quot;~/.config/sublime-text-2/Packages&amp;quot;, &amp;quot;osx&amp;quot;: &amp;quot;~/Library/Application Support/Sublime Text 2/Packages&amp;quot; }, &amp;quot;post&amp;quot;:{ &amp;quot;windows&amp;quot;:&amp;quot;E:\\wiki_html\\_posts&amp;quot;, &amp;quot;osx&amp;quot;: &amp;quot;~/jekyll.github.com/_posts&amp;quot; }, &amp;quot;home&amp;quot;:{ &amp;quot;windows&amp;quot;:&amp;quot;C:\\Documents and Settings\\user&amp;quot;, &amp;quot;osx&amp;quot;: &amp;quot;~/&amp;quot; } } 这样输入home:.vimrc将直接在根目录下创建新的文件
输入post:post.md可以直接在相关目录下创建文件
感觉相当于一个快捷方式
设置Terminal特别的命令 {&amp;quot;keys&amp;quot;:[&amp;quot;alt+3&amp;quot;],&amp;quot;command&amp;quot;:&amp;quot;open_terminal&amp;quot;, &amp;quot;args&amp;quot;:{ &amp;quot;parameters&amp;quot;:[&amp;quot;/c&amp;quot;,&amp;quot;E:\\devenv\\Rails\\Git\\bin\\sh.exe --login -i&amp;quot;] } }, 这样可以直接启用sh的环境来工作</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
category: lessons
title: &amp;ldquo;Markdown的深入学习&amp;rdquo;
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h2 id="knockdown">Knockdown&lt;/h2>
&lt;p>Github flavored Markdown &lt;code>Syntax Highlight&lt;/code>&lt;/p>
&lt;h2 id="advanced-new-files">Advanced New Files&lt;/h2>
&lt;p>*在设置文件中添加以下内容&lt;/p>
&lt;pre>&lt;code>&amp;quot;os_specific_alias&amp;quot;: {
&amp;quot;pack&amp;quot;: {
&amp;quot;windows&amp;quot;: &amp;quot;~\\AppData\\Roaming\\Sublime Text 2\\Packages&amp;quot;,
&amp;quot;linux&amp;quot;: &amp;quot;~/.config/sublime-text-2/Packages&amp;quot;,
&amp;quot;osx&amp;quot;: &amp;quot;~/Library/Application Support/Sublime Text 2/Packages&amp;quot;
},
&amp;quot;post&amp;quot;:{
&amp;quot;windows&amp;quot;:&amp;quot;E:\\wiki_html\\_posts&amp;quot;,
&amp;quot;osx&amp;quot;: &amp;quot;~/jekyll.github.com/_posts&amp;quot;
},
&amp;quot;home&amp;quot;:{
&amp;quot;windows&amp;quot;:&amp;quot;C:\\Documents and Settings\\user&amp;quot;,
&amp;quot;osx&amp;quot;: &amp;quot;~/&amp;quot;
}
}
&lt;/code>&lt;/pre>
&lt;p>这样输入&lt;code>home:.vimrc&lt;/code>将直接在根目录下创建新的文件&lt;/p>
&lt;p>输入&lt;code>post:post.md&lt;/code>可以直接在相关目录下创建文件&lt;/p>
&lt;p>感觉相当于一个快捷方式&lt;/p>
&lt;h2 id="设置terminal特别的命令">设置Terminal特别的命令&lt;/h2>
&lt;pre>&lt;code>{&amp;quot;keys&amp;quot;:[&amp;quot;alt+3&amp;quot;],&amp;quot;command&amp;quot;:&amp;quot;open_terminal&amp;quot;,
&amp;quot;args&amp;quot;:{
&amp;quot;parameters&amp;quot;:[&amp;quot;/c&amp;quot;,&amp;quot;E:\\devenv\\Rails\\Git\\bin\\sh.exe --login -i&amp;quot;]
}
},
&lt;/code>&lt;/pre>
&lt;p>这样可以直接启用sh的环境来工作&lt;/p></content></item><item><title>2013-5-10-redis.md</title><link>/posts/database/2013-5-10-redis/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/database/2013-5-10-redis/</guid><description> layout: post category: lessons title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（一）&amp;rdquo; tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 环境搭建 基本架构 设计为Node+Express+Redis的MVC框架，需要安装Node，Express,Redis。
安装Redis 下载Redis
解压后，存放在一个目录下，假设E:\Redis\，并将该目录路径添加到你的系统path中，方便直接访问可执行文件
进入Redis目录 cd E:\Redis
创建redis.conf文件 vim redis.conf，内容如下
port 6379 timeout 300 dir E:\db dbfilename dump.rdb save 900 1 save 300 10 save 60 10000 注意dir和dbfilename选项是必须的，否则你将无法保存数据库文件。
当然你需要提前创建dir目录mkdir E:\db
建立一个简单的批处理redis.cmd，来启动redis-server
E:\Redis\redis-server.exe E:\Redis\redis.conf
同样建立一个简单的批处理redic.cmd，来启动redis-client
E:\Redis\redis-cli
这样，你可以通过调用redis和redic来启动服务器和客户端
还可以将Redis-server安装成windows的服务来启动
sc create redisserver binPath= &amp;#34;C:\windows\system32\cmd.exe E:\Redis\redis-server.exe E:\Redis\redis.conf&amp;#34; sc start redisserver windows在启动该服务时会报错，但没关系，实际上已经启动了，可以打开任务管理器查看cmd和redis-server进程即可。也可以在命令行下执行redic来连接Redis服务器。</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
category: lessons
title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（一）&amp;rdquo;
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h1 id="环境搭建">环境搭建&lt;/h1>
&lt;h2 id="基本架构">基本架构&lt;/h2>
&lt;p>设计为Node+Express+Redis的MVC框架，需要安装&lt;code>Node&lt;/code>，&lt;code>Express&lt;/code>,&lt;code>Redis&lt;/code>。&lt;/p>
&lt;h2 id="安装redis">安装Redis&lt;/h2>
&lt;p>&lt;a href="https://code.google.com/p/servicestack/wiki/RedisWindowsDownload#Download_32bit_Cygwin_builds_for_Windows">下载Redis&lt;/a>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>解压后，存放在一个目录下，假设&lt;code>E:\Redis\&lt;/code>，并将该目录路径添加到你的系统path中，方便直接访问可执行文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>进入Redis目录 &lt;code>cd E:\Redis&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>创建redis.conf文件 &lt;code>vim redis.conf&lt;/code>，内容如下&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>port 6379
timeout 300
dir E:\db
dbfilename dump.rdb
save 900 1
save 300 10
save 60 10000
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>注意dir和dbfilename选项是必须的，否则你将无法保存数据库文件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当然你需要提前创建dir目录&lt;code>mkdir E:\db&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>建立一个简单的批处理redis.cmd，来启动redis-server&lt;/p>
&lt;p>E:\Redis\redis-server.exe E:\Redis\redis.conf&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同样建立一个简单的批处理redic.cmd，来启动redis-client&lt;/p>
&lt;p>E:\Redis\redis-cli&lt;/p>
&lt;/li>
&lt;li>
&lt;p>这样，你可以通过调用&lt;code>redis&lt;/code>和&lt;code>redic&lt;/code>来启动服务器和客户端&lt;/p>
&lt;/li>
&lt;li>
&lt;p>还可以将Redis-server安装成windows的服务来启动&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>sc create redisserver binPath= &amp;#34;C:\windows\system32\cmd.exe E:\Redis\redis-server.exe E:\Redis\redis.conf&amp;#34;
sc start redisserver
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>windows在启动该服务时会报错，但没关系，实际上已经启动了，可以打开&lt;code>任务管理器&lt;/code>查看&lt;code>cmd&lt;/code>和&lt;code>redis-server&lt;/code>进程即可。也可以在命令行下执行&lt;code>redic&lt;/code>来连接Redis服务器。&lt;/li>
&lt;/ul></content></item><item><title>2013-5-10-redis2.md</title><link>/posts/database/2013-5-10-redis2/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/database/2013-5-10-redis2/</guid><description>layout: post category: lessons title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（二）&amp;rdquo; tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 安装Node和npm 下载Nodewindows版，可以下载安装版本或者单执行文件版本。
将coffee-script的文件夹解压，参看其中bin文件夹下是否有coffee这个文件，E:\coffee\bin\coffee.cmd
下面已单执行文件为例，将该文件存放E:\coffee\bin\node.exe
修改coffee.cmd文件和npm.cmd文件，将目录添加到系统路径
在命令行下执行node、npm和coffee命令看是否成功</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
category: lessons
title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（二）&amp;rdquo;
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h2 id="安装node和npm">安装Node和npm&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>下载Nodewindows版，可以下载&lt;a href="http://nodejs.org/dist/v0.10.5/node-v0.10.5-x86.msi">安装版本&lt;/a>或者&lt;a href="http://nodejs.org/dist/v0.10.5/node.exe">单执行文件版本&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将coffee-script的文件夹解压，参看其中&lt;code>bin&lt;/code>文件夹下是否有&lt;code>coffee&lt;/code>这个文件，&lt;code>E:\coffee\bin\coffee.cmd&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下面已单执行文件为例，将该文件存放&lt;code>E:\coffee\bin\node.exe&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改coffee.cmd文件和npm.cmd文件，将目录添加到系统路径&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在命令行下执行node、npm和coffee命令看是否成功&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>2013-5-10-redis3.md</title><link>/posts/database/2013-5-10-redis3/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/database/2013-5-10-redis3/</guid><description>layout: post category: lessons title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（三）&amp;rdquo; tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 安装Express 安装express十分容易 npm install -gd express 执行express，生成MVC的框架 express blog cd blog npm install node app 打开http://127.0.0.1:3000/，你可以看到Express的Hello Word欢迎页面，表示Express已经成功运行。 使用coffee-script开驾驭Express require &amp;#34;coffee-script&amp;#34; http = require &amp;#39;http&amp;#39; path = require &amp;#39;path&amp;#39; express = require &amp;#39;express&amp;#39; app = express() app.configure(-&amp;gt; app.set(&amp;#39;port&amp;#39;, process.env.PORT || 3000) app.use(express.logger(&amp;#39;dev&amp;#39;)) app.use(express.directory(__dirname + &amp;#39;public&amp;#39;)) app.use(express.static(path.join(__dirname, &amp;#39;public&amp;#39;))) app.use(express.favicon()) app.set(&amp;#39;views&amp;#39;, __dirname + &amp;#39;/views&amp;#39;) app.set(&amp;#39;view engine&amp;#39;, &amp;#39;jade&amp;#39;) app.use(express.bodyParser({keepExtensions: true, uploadDir: &amp;#39;.</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
category: lessons
title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（三）&amp;rdquo;
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h3 id="安装express">安装Express&lt;/h3>
&lt;ul>
&lt;li>安装express十分容易&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>npm install -gd express
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>执行express，生成MVC的框架&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>express blog
cd blog
npm install
node app
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>打开http://127.0.0.1:3000/，你可以看到Express的&lt;code>Hello Word&lt;/code>欢迎页面，表示Express已经成功运行。&lt;/li>
&lt;/ul>
&lt;h4 id="使用coffee-script开驾驭express">使用coffee-script开驾驭Express&lt;/h4>
&lt;pre tabindex="0">&lt;code>require &amp;#34;coffee-script&amp;#34;
http = require &amp;#39;http&amp;#39;
path = require &amp;#39;path&amp;#39;
express = require &amp;#39;express&amp;#39;
app = express()
app.configure(-&amp;gt;
app.set(&amp;#39;port&amp;#39;, process.env.PORT || 3000)
app.use(express.logger(&amp;#39;dev&amp;#39;))
app.use(express.directory(__dirname + &amp;#39;public&amp;#39;))
app.use(express.static(path.join(__dirname, &amp;#39;public&amp;#39;)))
app.use(express.favicon())
app.set(&amp;#39;views&amp;#39;, __dirname + &amp;#39;/views&amp;#39;)
app.set(&amp;#39;view engine&amp;#39;, &amp;#39;jade&amp;#39;)
app.use(express.bodyParser({keepExtensions: true, uploadDir: &amp;#39;./public/resources&amp;#39;}))
app.use(express.methodOverride())
app.use(express.cookieParser())
app.use(express.session({ secret: &amp;#39;bang590&amp;#39; }))
app.use(app.router)
app.use(express.errorHandler({ dumpExceptions: true, showStack: true }))
app.enable(&amp;#39;trust proxy&amp;#39;)
)
app.get &amp;#39;/&amp;#39;, (req, res) -&amp;gt;
res.send &amp;#34;Hello World!&amp;#34;
port = process.env.PORT or 3000
http.createServer(app).listen app.get(&amp;#39;port&amp;#39;), -&amp;gt;
console.log(&amp;#34;Express server listening on port &amp;#34; + app.get(&amp;#39;port&amp;#39;)
&lt;/code>&lt;/pre></content></item><item><title>2013-5-10-redis4.md</title><link>/posts/database/2013-5-10-redis4/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/database/2013-5-10-redis4/</guid><description> layout: post category: lessons title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（四）&amp;rdquo; tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 安装Markdown vim package.json,在dependencies部分，增加markdown的内容，版本任意即可。
再次执行npm install安装Markdown模块
参看Markdown的帮助文件，可以看到使用Markdown很简单
md = require &amp;#39;Markdown&amp;#39; output = md.Markdown2html &amp;#34;&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&amp;#34; console.log output 其它依赖库</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
category: lessons
title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（四）&amp;rdquo;
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h3 id="安装markdown">安装Markdown&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>vim package.json&lt;/code>,在&lt;code>dependencies&lt;/code>部分，增加&lt;code>markdown&lt;/code>的内容，版本任意即可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>再次执行&lt;code>npm install&lt;/code>安装Markdown模块&lt;/p>
&lt;/li>
&lt;li>
&lt;p>参看Markdown的帮助文件，可以看到使用Markdown很简单&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>md = require &amp;#39;Markdown&amp;#39;
output = md.Markdown2html &amp;#34;&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&amp;#34;
console.log output
&lt;/code>&lt;/pre>&lt;h3 id="其它依赖库">其它依赖库&lt;/h3></content></item><item><title>2013-5-10-redis5.md</title><link>/posts/database/2013-5-10-redis5/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/database/2013-5-10-redis5/</guid><description>layout: post category: lessons title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（五）&amp;rdquo; tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 设计MVC Module数据模型 Redis Package vim package.json,在dependencies部分，增加Redis的内容，版本任意即可。 RON Package vim package.json,在dependencies部分，增加ron的内容，版本任意即可。
查看Ron的帮助文件，可以看到语法很简单
在routes下面建立module_users.coffee文件
在这个文件中，定义了我们需要的数据库模块
ron = require &amp;#39;ron&amp;#39; client = ron port: 6379 host: &amp;#39;127.0.0.1&amp;#39; name: &amp;#39;auth&amp;#39; Users = client.get &amp;#39;users&amp;#39; Users.property id&amp;#39;, {identifier: true} Users.property &amp;#39;username&amp;#39;, {unique: false} Users.property &amp;#39;email&amp;#39;, {unique: false} data = {username: &amp;#39;ron&amp;#39;, email: &amp;#39;ron@domain.com&amp;#39;} Users.create data, (err, user)- &amp;gt; console.log(err, user.id) Users.</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
category: lessons
title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（五）&amp;rdquo;
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h1 id="设计mvc">设计MVC&lt;/h1>
&lt;h2 id="module数据模型">Module数据模型&lt;/h2>
&lt;h3 id="redis-package">Redis Package&lt;/h3>
&lt;ul>
&lt;li>&lt;code>vim package.json&lt;/code>,在&lt;code>dependencies&lt;/code>部分，增加&lt;code>Redis&lt;/code>的内容，版本任意即可。&lt;/li>
&lt;/ul>
&lt;h3 id="ron-package">RON Package&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>vim package.json&lt;/code>,在&lt;code>dependencies&lt;/code>部分，增加&lt;code>ron&lt;/code>的内容，版本任意即可。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看Ron的帮助文件，可以看到语法很简单&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在routes下面建立module_users.coffee文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在这个文件中，定义了我们需要的数据库模块&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-coffeescript" data-lang="coffeescript">&lt;span style="display:flex;">&lt;span>ron = &lt;span style="color:#a6e22e">require&lt;/span> &lt;span style="color:#e6db74">&amp;#39;ron&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>client = &lt;span style="color:#a6e22e">ron&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port: &lt;span style="color:#ae81ff">6379&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host: &lt;span style="color:#e6db74">&amp;#39;127.0.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#e6db74">&amp;#39;auth&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Users = &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span> &lt;span style="color:#e6db74">&amp;#39;users&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">Users&lt;/span>.&lt;span style="color:#a6e22e">property&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#e6db74">&amp;#39;, {identifier: true}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Users.property &amp;#39;&lt;/span>&lt;span style="color:#a6e22e">username&lt;/span>&lt;span style="color:#e6db74">&amp;#39;, {unique: false}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Users.property &amp;#39;&lt;/span>&lt;span style="color:#a6e22e">email&lt;/span>&lt;span style="color:#e6db74">&amp;#39;, {unique: false}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">data = {username: &amp;#39;&lt;/span>&lt;span style="color:#a6e22e">ron&lt;/span>&lt;span style="color:#e6db74">&amp;#39;, email: &amp;#39;&lt;/span>&lt;span style="color:#a6e22e">ron@domain&lt;/span>.&lt;span style="color:#a6e22e">com&lt;/span>&lt;span style="color:#e6db74">&amp;#39;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Users.create data, (err, user)- &amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> console.log(err, user.id)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Users.get data, (err, user)- &amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> console.log(err, user.id)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Users.update data,(err, user)- &amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> console.log(err, user.id)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Users.remove data,(err, user)- &amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> console.log(err, user.id)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Users.list (err, users)- &amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> console.log(err, users)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>文件中主要执行了三个任务&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>连接数据库&lt;/p>
&lt;/li>
&lt;li>
&lt;p>定义数据结构&lt;/p>
&lt;/li>
&lt;li>
&lt;p>定义CRUD方法&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>注意慎用&lt;code>{unique:true}&lt;/code>的属性，因为会阻止你保存相同的数据&lt;/li>
&lt;/ul></content></item><item><title>2013-5-10-redis6.md</title><link>/posts/database/2013-5-10-redis6/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/database/2013-5-10-redis6/</guid><description>layout: post category: lessons title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（六）&amp;rdquo; tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] 与Express结合 module_users = require &amp;#39;./routes/module_users.coffee&amp;#39; app.get &amp;#39;users&amp;#39;,module_users.list 流程很简单 引用模块文件
调用模块文件中的方法，前提是你要将方法输出，请参见下面的引用
测试 Controller控制器 Express路由原理 在app.coffee文件中定义路径，添加引用 index = require &amp;#39;./routes/index.coffee&amp;#39; app.get &amp;#39;index&amp;#39;,index.list 在routes/index.coffee中定义方法，输出引用 list=(req,res)-&amp;gt; res.render &amp;#39;index&amp;#39;,{title:&amp;#34;Hello Express&amp;#34;} module.exports.list = list 这样实现了Controller和Module之间的双向通信
其中req是http请求，res是http回应，具体可参考Express手册中文版
常用的Express API req.body
这个对应的是解析过的请求体。这个特性是bodyParser() 中间件提供,其它的请求体解析中间件可以放在这个中间件之后。当bodyParser()中间件使用后，这个对象默认为 {}。
// POST user[name]=tobi&amp;amp;user[email]=tobi@learnboost.com req.body.user.name // =&amp;gt; &amp;#34;tobi&amp;#34; req.params
这是一个数组对象，命名过的参数会以键值对的形式存放。 比如你有一个路由/user/:name, &amp;quot;name&amp;quot;属性会存放在req.params.name. 这个对象默认为 {}.
// GET /user/tj req.params.name // =&amp;gt; &amp;#34;tj&amp;#34; res.</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
category: lessons
title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（六）&amp;rdquo;
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h3 id="与express结合">与Express结合&lt;/h3>
&lt;pre tabindex="0">&lt;code>module_users = require &amp;#39;./routes/module_users.coffee&amp;#39;
app.get &amp;#39;users&amp;#39;,module_users.list
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>流程很简单&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>引用模块文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调用模块文件中的方法，前提是你要将方法输出，请参见下面的引用&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="测试">测试&lt;/h3>
&lt;h2 id="controller控制器">Controller控制器&lt;/h2>
&lt;h3 id="express路由原理">Express路由原理&lt;/h3>
&lt;ul>
&lt;li>在app.coffee文件中定义路径，添加引用&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>index = require &amp;#39;./routes/index.coffee&amp;#39;
app.get &amp;#39;index&amp;#39;,index.list
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>在routes/index.coffee中定义方法，输出引用&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>list=(req,res)-&amp;gt;
res.render &amp;#39;index&amp;#39;,{title:&amp;#34;Hello Express&amp;#34;}
module.exports.list = list
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>这样实现了Controller和Module之间的双向通信&lt;/p>
&lt;/li>
&lt;li>
&lt;p>其中req是http请求，res是http回应，具体可参考&lt;a href="http://expressjs.jser.us/api.html">Express手册中文版&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="常用的express-api">常用的Express API&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>req.body&lt;/p>
&lt;/li>
&lt;li>
&lt;p>这个对应的是解析过的请求体。这个特性是&lt;code>bodyParser()&lt;/code> 中间件提供,其它的请求体解析中间件可以放在这个中间件之后。当&lt;code>bodyParser()&lt;/code>中间件使用后，这个对象默认为 {}。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// POST user[name]=tobi&amp;amp;user[email]=tobi@learnboost.com
req.body.user.name
// =&amp;gt; &amp;#34;tobi&amp;#34;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>req.params&lt;/p>
&lt;/li>
&lt;li>
&lt;p>这是一个数组对象，命名过的参数会以键值对的形式存放。 比如你有一个路由&lt;code>/user/:name&lt;/code>, &lt;code>&amp;quot;name&amp;quot;&lt;/code>属性会存放在&lt;code>req.params.name&lt;/code>. 这个对象默认为 &lt;code>{}&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>// GET /user/tj
req.params.name
// =&amp;gt; &amp;#34;tj&amp;#34;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>res.render(view, [locals], callback)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>渲染view, 同时向callback 传入渲染后的字符串。 callback如果不传的话，直接会把渲染后的字符串输出至请求方， 一般如果不需要再对渲染后的模板作操作，就不需要传callback。 当有错误发生时next(err)会被执行. 如果提供了callback参数，可能发生的错误和渲染的字符串都会被当作参数传入, 并且没有默认响应。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>res.render &amp;#39;index&amp;#39;, (err, html)-&amp;gt;
console.log &amp;#34;index.html&amp;#34;
res.render &amp;#39;user&amp;#39;, { name: &amp;#39;Tobi&amp;#39; }
&lt;/code>&lt;/pre>&lt;h3 id="javascript的模块输出和引用">Javascript的模块输出和引用&lt;/h3>
&lt;ul>
&lt;li>需要使用module.exports方法&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>list=(req,res)-&amp;gt;
Users.list (err, user)- &amp;gt;
console.log(err, user.id)
module.exports.list = list
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>这样你的list函数可以被其它文件引用了&lt;/p>
&lt;/li>
&lt;li>
&lt;p>有时候可以更加简化&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>module.exports.list=(req,res)-&amp;gt;
Users.list (err, users)- &amp;gt;
console.log(err)
&lt;/code>&lt;/pre></content></item><item><title>2013-5-10-redis7.md</title><link>/posts/database/2013-5-10-redis7/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/database/2013-5-10-redis7/</guid><description> layout: post category: lessons title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（七）&amp;rdquo; tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags: [intro, beginner, jekyll, tutorial] Ron模块接口 node-ron的Github
API接口文档
View视图 Jade模板 Jquery Coffee-script的客户端应用</description><content>&lt;hr>
&lt;h2 id="tags-intro-beginner-jekyll-tutorial">layout: post
category: lessons
title: &amp;ldquo;自己搭建Node+Express+Redis的MVC框架（七）&amp;rdquo;
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags: [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h3 id="ron模块接口">Ron模块接口&lt;/h3>
&lt;p>&lt;a href="https://github.com/wdavidw/node-ron">node-ron的Github&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.adaltas.com/projects/node-ron">API接口文档&lt;/a>&lt;/p>
&lt;h2 id="view视图">View视图&lt;/h2>
&lt;h3 id="jade模板">Jade模板&lt;/h3>
&lt;h3 id="jquery">Jquery&lt;/h3>
&lt;h3 id="coffee-script的客户端应用">Coffee-script的客户端应用&lt;/h3></content></item><item><title>2013-5-6-express-tutorial-1.md</title><link>/posts/nodejs/2013-5-6-express-tutorial-1/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/2013-5-6-express-tutorial-1/</guid><description>layout: post category : lessons tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags : [intro, beginner, jekyll, tutorial] 从零开始构建Express+Mongoose的程序 如果你已经看过第一部分，请猛击这里看下一章
关于Express的框架 调用http、express和path模块 http = require 'http' path = require 'path' 生成express应用 express = require 'express' app = express() app.configure(-&amp;gt; # 设置端口 app.set('port', process.env.PORT || 3000) # 设置视图和公共目录 app.use(express.logger('dev')) # app.use(express.directory(__dirname + 'public')) app.use(express.static(path.join(__dirname, 'public'))) app.use(express.favicon()) # 设置视图渲染模板为jade app.set('views', __dirname + '/views') app.set('view engine', 'jade') # 设置查询体解析为json功能 app.use(express.bodyParser({keepExtensions: true, uploadDir: './public/resources'})) # 设置http方法重写，如使用put更改数据等 app.use(express.methodOverride()) # 设置cookie和session # app.</description><content>&lt;hr>
&lt;h2 id="tags--intro-beginner-jekyll-tutorial">layout: post
category : lessons
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags : [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h2 id="从零开始构建expressmongoose的程序">从零开始构建Express+Mongoose的程序&lt;/h2>
&lt;p>&lt;a href="http://linuxing3.github.io/lessons/2013/05/06/express-tutorial-2/">如果你已经看过第一部分，请猛击这里看下一章&lt;/a>&lt;/p>
&lt;h3 id="关于express的框架">关于Express的框架&lt;/h3>
&lt;h3 id="调用httpexpress和path模块">调用http、express和path模块&lt;/h3>
&lt;pre>&lt;code>http = require 'http'
path = require 'path'
&lt;/code>&lt;/pre>
&lt;h3 id="生成express应用">生成express应用&lt;/h3>
&lt;pre>&lt;code>express = require 'express'
app = express()
app.configure(-&amp;gt;
# 设置端口
app.set('port', process.env.PORT || 3000)
# 设置视图和公共目录
app.use(express.logger('dev'))
# app.use(express.directory(__dirname + 'public'))
app.use(express.static(path.join(__dirname, 'public')))
app.use(express.favicon())
# 设置视图渲染模板为jade
app.set('views', __dirname + '/views')
app.set('view engine', 'jade')
# 设置查询体解析为json功能
app.use(express.bodyParser({keepExtensions: true, uploadDir: './public/resources'}))
# 设置http方法重写，如使用put更改数据等
app.use(express.methodOverride())
# 设置cookie和session
# app.use(express.cookieParser())
# app.use(express.session({ secret: 'bang590' }))
# 设置路由功能
app.use(app.router)
app.use(express.errorHandler({ dumpExceptions: true, showStack: true }))
app.enable('trust proxy')
)
&lt;/code>&lt;/pre>
&lt;h3 id="启动服务器">启动服务器&lt;/h3>
&lt;pre>&lt;code>port = process.env.PORT or 3000
http.createServer(app).listen(app.get('port'), -&amp;gt;
console.log(&amp;quot;Express server listening on port &amp;quot; + app.get('port'))
)
&lt;/code>&lt;/pre>
&lt;h3 id="设置列表路由">设置列表路由&lt;/h3>
&lt;pre>&lt;code>app.get('/blogs',mongodb.findAll)
&lt;/code>&lt;/pre>
&lt;h4 id="设置新建路由">设置新建路由&lt;/h4>
&lt;pre>&lt;code>app.get('/newblog', (req, res)-&amp;gt;
res.render('newblog',{title:'Input New Blog'})
)
app.post('/newblog', mongodb.create)
&lt;/code>&lt;/pre>
&lt;h4 id="设置统一化路由">设置统一化路由&lt;/h4>
&lt;pre>&lt;code>app.all('/blog/:id/:op?',mongodb.findById)
&lt;/code>&lt;/pre>
&lt;h4 id="分路由">分路由&lt;/h4>
&lt;pre>&lt;code>app.get('/blog/:id',mongodb.findById)
app.get('/blog/:id/edit',mongodb.findById)
app.put('/blog/:id/edit',mongodb.update)
app.post('/blog/:id/edit',mongodb.update)
app.get('/blog/:id/delete',mongodb.remo ve)
app.get('*', (req, res)-&amp;gt;
res.send('what???', 404)
)
&lt;/code>&lt;/pre>
&lt;h3 id="关于mongoose的框架">关于Mongoose的框架&lt;/h3>
&lt;h4 id="确定数据库的初始化设置连接blogs集合">确定数据库的初始化设置,连接blogs集合&lt;/h4>
&lt;pre>&lt;code>mongoose = require('mongoose')
mongoose.connect('localhost', 'blogs')
&lt;/code>&lt;/pre>
&lt;h4 id="定义数据结构">定义数据结构&lt;/h4>
&lt;pre>&lt;code>BlogId = mongoose.Schema.ObjectId
BlogSchema = mongoose.Schema({
owner: BlogId,
name: String,
age: String,
work: String,
email: String,
title:String,
content:String,
image:String,
date:Date
})
&lt;/code>&lt;/pre>
&lt;h4 id="生成表模型可作为类使用">生成表模型，可作为类使用&lt;/h4>
&lt;pre>&lt;code>Blog = mongoose.model('Blog', BlogSchema)
&lt;/code>&lt;/pre>
&lt;h4 id="crud具体方法和函数">CRUD具体方法和函数&lt;/h4>
&lt;pre>&lt;code>create=(req,res)-&amp;gt;
url = req.files.post['image'].path
json = {
name: req.body.post['name'],
age: req.body.post['age'],
work: req.body.post['work'],
email: req.body.post['email'],
title:req.body.post['title'],
content:req.body.post['content'],
image:url.slice(7,url.length),
date:req.body.post['date']
}
aBlog = new Blog(json)
aBlog.save((err)-&amp;gt;
console.log &amp;quot;Hello! &amp;quot; + aBlog.name + &amp;quot; are &amp;quot;+ aBlog.work
)
res.redirect('blogs')
module.exports.create = create
&lt;/code>&lt;/pre>
&lt;h4 id="查找">查找&lt;/h4>
&lt;pre>&lt;code>findAll =(req,res)-&amp;gt;
Blog.find({},(err,docs)-&amp;gt;
res.render('blogs',{title:'Blogs',blog:docs})
)
module.exports.findAll = findAll
findById =(req,res)-&amp;gt;
Blog.findById(req.params.id,(err,doc)-&amp;gt;
console.log &amp;quot;Found &amp;quot; + doc
res.render('editblog',{title:'Blogs',blog:doc})
)
module.exports.findById = findById
&lt;/code>&lt;/pre>
&lt;h4 id="移除remove">移除remove&lt;/h4>
&lt;pre>&lt;code>remove=(req,res)-&amp;gt;
Blog.findByIdAndRemove(req.params.id,(err,doc)-&amp;gt;
console.log &amp;quot;removed!&amp;quot; + doc.name
res.redirect('blogs')
)
module.exports.remove = remove
&lt;/code>&lt;/pre>
&lt;h4 id="更新update">更新update&lt;/h4>
&lt;pre>&lt;code>update =(req,res)-&amp;gt;
Blog.findByIdAndUpdate(req.params.id,req.body.post,(err,docs)-&amp;gt;
console.log docs + &amp;quot;updated!&amp;quot;
res.redirect('blogs')
)
module.exports.update = update
&lt;/code>&lt;/pre></content></item><item><title>2013-5-6-express-tutorial-2.md</title><link>/posts/nodejs/2013-5-6-express-tutorial-2/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/2013-5-6-express-tutorial-2/</guid><description>layout: post category : lessons tagline: &amp;ldquo;Supporting tagline&amp;rdquo; tags : [intro, beginner, jekyll, tutorial] 从零开始构建Express+Mongoose的程序2 如果你没有看过第一部分，请猛击这里
本文之间重点讲解如何通过发送网页数据创建Mongodb的文件。
这等于是建立一个数据库的表中的一行记录。
首先我们需要一个页面，在jade模板中应该这样定义 extends single block content3 form(method='post',enctype=&amp;quot;multipart/form- data&amp;quot;,action='/newblog') input(type='hidden',id='',value=Date.now(),name='post[ date]') textarea(id='post_convaluent',id='Content',name='post[ content]') input(type=&amp;quot;file&amp;quot;,id='btn-file',name=&amp;quot;post[image]&amp;quot;) input(type='submit',id='btn-smt',value='好了吗？现在点击就可以发布') 说明： 通过post方法采取newblog的行动，发送多段的数据
网页抓取的数据存储在req.body.post中，以json的格式，供后续处理
需要设定对应的路由 app.post('/newblog', mongodb.create) 说明 **通过设定post的路由，告诉express，如果有post数据到newblog页面，就调用mongodb中的create方法 **
####调用的方法 create=(req,res)-&amp;gt; url = req.files.post[&amp;lsquo;image&amp;rsquo;].path json = { name: req.body.post[&amp;rsquo;name&amp;rsquo;], age: req.body.post[&amp;lsquo;age&amp;rsquo;], work: req.body.post[&amp;lsquo;work&amp;rsquo;], email: req.body.post[&amp;rsquo;email&amp;rsquo;], title:req.body.post[&amp;rsquo;title&amp;rsquo;], content:req.body.post[&amp;lsquo;content&amp;rsquo;], image:url.slice(7,url.length), date:req.body.post[&amp;lsquo;date&amp;rsquo;] } aBlog = new Blog(json) aBlog.save((err)-&amp;gt; console.log &amp;ldquo;Hello! &amp;quot; + aBlog.</description><content>&lt;hr>
&lt;h2 id="tags--intro-beginner-jekyll-tutorial">layout: post
category : lessons
tagline: &amp;ldquo;Supporting tagline&amp;rdquo;
tags : [intro, beginner, jekyll, tutorial]&lt;/h2>
&lt;h2 id="从零开始构建expressmongoose的程序2">从零开始构建Express+Mongoose的程序2&lt;/h2>
&lt;p>&lt;a href="http://linuxing3.github.io/lessons/2013/05/06/express-tutorial-1/">如果你没有看过第一部分，请猛击这里&lt;/a>&lt;/p>
&lt;p>本文之间重点讲解如何通过发送网页数据创建Mongodb的文件。&lt;/p>
&lt;p>这等于是建立一个数据库的表中的一行记录。&lt;/p>
&lt;h4 id="首先我们需要一个页面在jade模板中应该这样定义">首先我们需要一个页面，在jade模板中应该这样定义&lt;/h4>
&lt;pre>&lt;code>extends single
block content3
form(method='post',enctype=&amp;quot;multipart/form- data&amp;quot;,action='/newblog')
input(type='hidden',id='',value=Date.now(),name='post[ date]')
textarea(id='post_convaluent',id='Content',name='post[ content]')
input(type=&amp;quot;file&amp;quot;,id='btn-file',name=&amp;quot;post[image]&amp;quot;)
input(type='submit',id='btn-smt',value='好了吗？现在点击就可以发布')
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>说明：&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>通过post方法采取newblog的行动，发送多段的数据&lt;/strong>&lt;/p>
&lt;p>&lt;strong>网页抓取的数据存储在req.body.post中，以json的格式，供后续处理&lt;/strong>&lt;/p>
&lt;h4 id="需要设定对应的路由">需要设定对应的路由&lt;/h4>
&lt;pre>&lt;code>app.post('/newblog', mongodb.create)
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>说明&lt;/li>
&lt;/ul>
&lt;p>**通过设定post的路由，告诉express，如果有post数据到newblog页面，就调用mongodb中的create方法 **&lt;/p>
&lt;p>####调用的方法
create=(req,res)-&amp;gt;
url = req.files.post[&amp;lsquo;image&amp;rsquo;].path
json = {
name: req.body.post[&amp;rsquo;name&amp;rsquo;],
age: req.body.post[&amp;lsquo;age&amp;rsquo;],
work: req.body.post[&amp;lsquo;work&amp;rsquo;],
email: req.body.post[&amp;rsquo;email&amp;rsquo;],
title:req.body.post[&amp;rsquo;title&amp;rsquo;],
content:req.body.post[&amp;lsquo;content&amp;rsquo;],
image:url.slice(7,url.length),
date:req.body.post[&amp;lsquo;date&amp;rsquo;]
}
aBlog = new Blog(json)
aBlog.save((err)-&amp;gt;
console.log &amp;ldquo;Hello! &amp;quot; + aBlog.name + &amp;quot; are &amp;ldquo;+ aBlog. work
)
res.redirect(&amp;lsquo;blogs&amp;rsquo;)&lt;/p>
&lt;h4 id="注意其中对文件的处理方法">注意其中对文件的处理方法。&lt;/h4>
&lt;p>&lt;em>app配置中要启动bodyparser方法，并且使用扩展名和上传目录两个参数&lt;/em>&lt;/p>
&lt;pre>&lt;code>app.use(express.bodyParser({keepExtensions: true, uploadDir: './public/resources'}))
&lt;/code>&lt;/pre>
&lt;p>&lt;em>根据express的设计，上传后的文件路径将是/public/resources，我们要把public/这七个字符去掉，让网页可以加载resources路径）&lt;/em>&lt;/p>
&lt;pre>&lt;code>image:url.slice(7,url.length)
&lt;/code>&lt;/pre></content></item><item><title>alpine.md</title><link>/posts/linux/alpine/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/linux/alpine/</guid><description>chroot to alpine linux install ./sbin/apk.static -X http://nl.alpinelinux.org/alpine/latest-stable/main/ -U --allow-untrusted --root /alpine --initdb add alpine-base mkdev mknod -m 666 /alpine/dev/full c 1 7 mknod -m 666 /alpine/dev/ptmx c 5 2 mknod -m 644 /alpine/dev/random c 1 8 mknod -m 644 /alpine/dev/urandom c 1 9 mknod -m 666 /alpine/dev/zero c 1 5 mknod -m 666 /alpine/dev/tty c 5 0 mknod -m 666 /alpine/dev/sda b 8 0 mknod -m 666 /alpine/dev/sda1 b 8 1 mknod -m 666 /alpine/dev/sda2 b 8 2 mknod -m 666 /alpine/dev/sda3 b 8 3 mknod -m 666 /alpine/dev/sda4 b 8 4 mknod -m 666 /alpine/dev/sda5 b 8 5 mknod -m 666 /alpine/dev/sda6 b 8 6 mknod -m 666 /alpine/dev/sdb b 8 16 mknod -m 666 /alpine/dev/sda1 b 8 17 mknod -m 666 /alpine/dev/sda2 b 8 18 mknod -m 666 /alpine/dev/sda3 b 8 19 mknod -m 666 /alpine/dev/sda4 b 8 20 mknod -m 666 /alpine/dev/sda5 b 8 21 mknod -m 666 /alpine/dev/sda6 b 8 22 cp /etc/resolv.</description><content>&lt;h1 id="chroot-to-alpine-linux">chroot to alpine linux&lt;/h1>
&lt;pre tabindex="0">&lt;code>install
./sbin/apk.static -X http://nl.alpinelinux.org/alpine/latest-stable/main/ -U --allow-untrusted --root /alpine --initdb add alpine-base
mkdev
mknod -m 666 /alpine/dev/full c 1 7
mknod -m 666 /alpine/dev/ptmx c 5 2
mknod -m 644 /alpine/dev/random c 1 8
mknod -m 644 /alpine/dev/urandom c 1 9
mknod -m 666 /alpine/dev/zero c 1 5
mknod -m 666 /alpine/dev/tty c 5 0
mknod -m 666 /alpine/dev/sda b 8 0
mknod -m 666 /alpine/dev/sda1 b 8 1
mknod -m 666 /alpine/dev/sda2 b 8 2
mknod -m 666 /alpine/dev/sda3 b 8 3
mknod -m 666 /alpine/dev/sda4 b 8 4
mknod -m 666 /alpine/dev/sda5 b 8 5
mknod -m 666 /alpine/dev/sda6 b 8 6
mknod -m 666 /alpine/dev/sdb b 8 16
mknod -m 666 /alpine/dev/sda1 b 8 17
mknod -m 666 /alpine/dev/sda2 b 8 18
mknod -m 666 /alpine/dev/sda3 b 8 19
mknod -m 666 /alpine/dev/sda4 b 8 20
mknod -m 666 /alpine/dev/sda5 b 8 21
mknod -m 666 /alpine/dev/sda6 b 8 22
cp /etc/resolv.conf /alpine/etc/
mkdir -p /alpine/root
mkdir -p /alpine/etc/apk echo &amp;#34;http://nl.alpinelinux.org/alpine/latest-stable/main&amp;#34; &amp;gt; /alpine/etc/apk/repositories
mkbootable
rc-update add devfs sysinit
rc-update add dmesg sysinit
rc-update add mdev sysinit
rc-update add hwclock boot
rc-update add modules boot
rc-update add sysctl boot
rc-update add hostname boot
rc-update add bootmisc boot
rc-update add syslog boot
rc-update add mount-ro shutdown
rc-update add killprocs shutdown
rc-update add savecache shutdown
goalpine
mount -t proc none /alpine/proc
mount -o bind /sys /alpine/sys
mount -o bind /dev /alpine/dev
chroot /alpine /bin/sh -l
echo rc-update add devfs sysinit
echo rc-update add dmesg sysinit
echo rc-update add mdev sysinit
echo rc-update add hwclock boot
echo rc-update add modules boot
echo rc-update add sysctl boot
echo rc-update add hostname boot
echo rc-update add bootmisc boot
echo rc-update add syslog boot
echo rc-update add mount-ro shutdown
echo rc-update add killprocs shutdown
echo rc-update add savecache shutdown
&lt;/code>&lt;/pre></content></item><item><title>archlinux.md</title><link>/posts/linux/archlinux/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/linux/archlinux/</guid><description>Install Archlinux from beggining Boot from iso file 将安装的your_arch_image.iso文件放在win_drive的根目录，假设这里是ntfs格式
使用grub4dos来引导最小镜像文件
root (hd0,0) kernel /vmlinuz archisolabel=ARCH2016 initrd /archiso.img 启动后会进入系统安全模式，在这里执行
mkdir /mnt/iso mount -r -t ntfs /dev/win_drive /mnt/iso modprobe loop losetup /dev/loop6 /mnt/iso/your_arch_image.iso ln -s /dev/loop6 /dev/disks/by-label/ARCH2016 exit 这样就可以启动安装光盘了！
Prepare your partition Using fdisk to create partition table fdisk /dev/sda n # creating new partion w # write Format partition mkfs.ext4 /dev/sda1 Mount new partition as install target mount /dev/sda1 /mnt Setting network Setting network with netctl cp /etc/netctl/examples/ethernet-static /etc/netctl/office netctl list netctl start office office profie as follows Description=&amp;#39;A basic dhcp ethernet connection&amp;#39; Interface=eth0 Connection=ethernet IP=dhcp ForceConnect=yes DHCPClient=&amp;#34;dhclient&amp;#34; Setting network behind proxy NAT Forward ssh to the virtual machine with port forward And don&amp;rsquo;t forget to export your new environment variables</description><content>&lt;h1 id="install-archlinux-from-beggining">Install Archlinux from beggining&lt;/h1>
&lt;h2 id="boot-from-iso-file">Boot from iso file&lt;/h2>
&lt;p>将安装的your_arch_image.iso文件放在&lt;code>win_drive&lt;/code>的根目录，假设这里是&lt;code>ntfs&lt;/code>格式&lt;/p>
&lt;p>使用grub4dos来引导最小镜像文件&lt;/p>
&lt;pre tabindex="0">&lt;code>root (hd0,0)
kernel /vmlinuz archisolabel=ARCH2016
initrd /archiso.img
&lt;/code>&lt;/pre>&lt;p>启动后会进入系统安全模式，在这里执行&lt;/p>
&lt;pre tabindex="0">&lt;code>mkdir /mnt/iso
mount -r -t ntfs /dev/win_drive /mnt/iso
modprobe loop
losetup /dev/loop6 /mnt/iso/your_arch_image.iso
ln -s /dev/loop6 /dev/disks/by-label/ARCH2016
exit
&lt;/code>&lt;/pre>&lt;p>这样就可以启动安装光盘了！&lt;/p>
&lt;h2 id="prepare-your-partition">Prepare your partition&lt;/h2>
&lt;h3 id="using-fdisk-to-create-partition-table">Using &lt;code>fdisk&lt;/code> to create partition table&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>fdisk /dev/sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n &lt;span style="color:#75715e"># creating new partion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>w &lt;span style="color:#75715e"># write&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="format-partition">Format partition&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>mkfs.ext4 /dev/sda1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="mount-new-partition-as-install-target">Mount new partition as install target&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>mount /dev/sda1 /mnt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setting-network">Setting network&lt;/h2>
&lt;h3 id="setting-network-with-netctl">Setting network with &lt;code>netctl&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>cp /etc/netctl/examples/ethernet-static /etc/netctl/office
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netctl list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>netctl start office
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="office-profie-as-follows">&lt;code>office&lt;/code> profie as follows&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;A basic dhcp ethernet connection&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Interface&lt;span style="color:#f92672">=&lt;/span>eth0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">=&lt;/span>ethernet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IP&lt;span style="color:#f92672">=&lt;/span>dhcp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ForceConnect&lt;span style="color:#f92672">=&lt;/span>yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DHCPClient&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dhclient&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="setting-network-behind-proxy">Setting network behind proxy&lt;/h3>
&lt;ul>
&lt;li>&lt;code>NAT Forward&lt;/code>&lt;/li>
&lt;li>&lt;code>ssh&lt;/code> to the virtual machine with port forward&lt;/li>
&lt;/ul>
&lt;p>And don&amp;rsquo;t forget to export your new environment variables&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>export http_proxy&lt;span style="color:#f92672">=&lt;/span>your_proxy_id:your_proxy_port
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="generating-file-system-genfstab--o-mnt-mntetcfstab">Generating file system &lt;code>genfstab -o /mnt /mnt/etc/fstab&lt;/code>&lt;/h3>
&lt;h3 id="change-root-arch-chroot-mnt">change root &lt;code>arch-chroot /mnt&lt;/code>&lt;/h3>
&lt;p>Ok, Now your job on iso live environment is done!&lt;/p>
&lt;h2 id="next-steps-are-in-you-newly-installed-archlinux-environment">Next steps are in you newly installed archlinux environment&lt;/h2>
&lt;h3 id="vim-etcfstab">&lt;code>vim etc/fstab&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>/dev/sda1 / ext4 rw,relatime,data&lt;span style="color:#f92672">=&lt;/span>ordered &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/sda2 /home ext4 rw,relatime,data&lt;span style="color:#f92672">=&lt;/span>ordered &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="nano-etchostname">&lt;code>nano /etc/hostname&lt;/code>&lt;/h1>
&lt;p>arch&lt;/p>
&lt;h3 id="basic-configuration">Basic Configuration&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>nano /etc/hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nano /etc/locale.gen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nano /etc/locale.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nano /usr/share/i18n/locales/zh_CN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>locale-gen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkinitcpio -p linux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>grub-install /dev/sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>grub-mkconfig -o /boot/grub/grub.cfg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>passwd root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="nano-etcpacmandmirrorlist">&lt;code>nano /etc/pacman.d/mirrorlist&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> http://mirror.bjtu.edu.cn/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> http://mirrors.163.com/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> http://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> http://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> http://mirrors.neusoft.edu.cn/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> http://mirrors.hust.edu.cn/archlinux/$repo/os/$arch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="nano-etcpacmanconf">&lt;code>nano /etc/pacman.conf&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>options&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HoldPkg &lt;span style="color:#f92672">=&lt;/span> pacman glibc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#CleanMethod = KeepInstalled&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#UseDelta = 0.7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Architecture &lt;span style="color:#f92672">=&lt;/span> auto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>core&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Include &lt;span style="color:#f92672">=&lt;/span> /etc/pacman.d/mirrorlist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>extra&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Include &lt;span style="color:#f92672">=&lt;/span> /etc/pacman.d/mirrorlist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>community&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Include &lt;span style="color:#f92672">=&lt;/span> /etc/pacman.d/mirrorlist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>archlinuxfr&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SigLevel &lt;span style="color:#f92672">=&lt;/span> Optional TrustAll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Server &lt;span style="color:#f92672">=&lt;/span> http://repo.archlinux.fr/$arch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="using-pacman-to-install-programs">Using pacman to install programs&lt;/h3>
&lt;pre tabindex="0">&lt;code>pacman -Syy
pacman -S gvim
pacman -S git ruby lua clojure node gem npm
pacman -S python
pacman -S python-pip python-setuptools
pacman -S calcurse ranger
pacman -S cmus
pacman -S tmux
pacman -S openssh
pacman -S xorg-xauth
pacman -S xorg-server xorg-xinit
pacman -S notion
pacman -S enlightenment
pacman -S connman
pacman -S redis
pacman -S mongodb
pacman -S mysql
pacman -S couchdb
pacman -S wqy-bitmapfont wqy-zenhei ttf-arphic-ukai ttf-arphic-uming
pacman -S ttf-monaco
pacman -S ttf-dejavu
pacman -S wqy-zenhei
pacman -S fbterm
pacman -S libx86
pacman -S fcitx
pacman -S fcitx-fbterm
pacman -S yaourt
pacman -S rsync customizepkg
yaourt -S infinality
yaourt -S fongconfig-infinality
pacman -S urxvt
pacman -S rxvt-unicode
pacman -S gtk2-perl
pacman -S vim-ultisnips
pacman -S vim-fugitive
pacman -S vim-nerdtree vim-minibufexpl vim-supertab vim-surround
&lt;/code>&lt;/pre>&lt;h3 id="linking-conf-files">linking conf files&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ln -s archdotfiles/.curlrc ~/.curlrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s archdotfiles/.wgetrc ~/.wgetrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s archdotfiles/.bashrc ~/.bashrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s archdotfiles/.gitconfig ~/.gitconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s archdotfiles/.xinitrc ~/.xinitrc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ln -s archdotfiles/.Xdefaults ~/.Xdefaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>The &lt;code>gitconfig&lt;/code> file like&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>user&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> your name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email &lt;span style="color:#f92672">=&lt;/span> your email
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>push&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default &lt;span style="color:#f92672">=&lt;/span> matching
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>http&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proxy&lt;span style="color:#f92672">=&lt;/span>http://127.0.0.1:3127
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>credential&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> helper&lt;span style="color:#f92672">=&lt;/span>store
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="installing-separate-servers-by-compling-from-source">installing separate servers by compling from source&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>wget http://openresty.org/download/ngx_openresty-1.5.12.1.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv ngx_openresty-1.5.12.1.tar.gz /home/shared/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar zxvf ngx_openresty-1.5.12.1.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ngx_openresty-1.5.12.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure --with-luajit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/local/openresty/nginx/sbin/nginx &amp;amp;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="evince-to-display-chinese-charaters">evince to display chinese charaters&lt;/h3>
&lt;h4 id="install-doppler-data">install &lt;code>doppler-data&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pacman -S doppler-data
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="modify-etcfontsconfd49-sansserifconfi">modify &lt;code>/etc/fonts/conf.d/49-sansserif.confi&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&amp;lt;?xml version&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>?&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;!DOCTYPE fontconfig SYSTEM &lt;span style="color:#e6db74">&amp;#34;fonts.dtd&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;fontconfig&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;!--
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> If the font still has no generic name, add sans-serif
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;match target&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pattern&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;test qual&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;all&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;family&amp;#34;&lt;/span> compare&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;not_eq&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;string&amp;gt;sans-serif&amp;lt;/string&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/test&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;test qual&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;all&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;family&amp;#34;&lt;/span> compare&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;not_eq&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;string&amp;gt;serif&amp;lt;/string&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/test&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;test qual&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;all&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;family&amp;#34;&lt;/span> compare&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;not_eq&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;string&amp;gt;monospace&amp;lt;/string&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/test&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;edit name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;family&amp;#34;&lt;/span> mode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;append_last&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;string&amp;gt;wqy-zenhei&amp;lt;/string&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/edit&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/match&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/fontconfig&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="virtualbox-guest-utils">Virtualbox-guest-utils&lt;/h3>
&lt;p>After installing, run the following script&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;load virtualbox modules&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;you can install virtualbox-guest-utils first&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>modprobe -a vboxguest vboxsf vboxvideo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;mounting virtualbox shared folders&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;mounting winshared in /root/winshared&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount -t vboxsf winshared /root/winshared
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;mounting mfa in /home/mfa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount -t vboxsf mfa /home/mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;rsync from windows shared folder to /home/shared&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;Done&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="doing-sync-for-shared-folders">Doing sync for shared folders&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>rsync /root/winshared/* /home/shared/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="great-you-have-a-fully-operational-archlinux-in-your-computer">Great! You have a fully operational Archlinux in your computer&lt;/h2>
&lt;h3 id="more-configuration-in-office">More configuration in office&lt;/h3>
&lt;p>We must configure the network by defining the ip address and route&lt;/p>
&lt;p>We have 2 subnet, first 192.168.76.x,second 192.168.5.x&lt;/p>
&lt;p>We need proper routes to comunicate between them&lt;/p>
&lt;pre tabindex="0">&lt;code>echo &amp;#34;Configure your network and routing&amp;#34;
ifconfig enp3s0 down
ifconfig enp3s0 192.168.76.54 netmask 255.255.252.0
route add -net 0.0.0.0 netmask 0.0.0.0 gateway 192.168.76.1 dev enp3s0
route add -net 192.168.76.0 netmask 255.255.252.0 gateway 192.168.76.63 dev enp3s0
route add -net 192.168.76.255 netmask 255.255.255.255 gateway 192.168.76.63 dev enp3s0
route add -net 224.0.0.0 netmask 240.0.0.0 gateway 192.168.76.3 dev enp3s0
route add -net 255.255.255.255 netmask 255.255.255.255 gateway 192.168.76.3 dev enp3s0
ifconfig enp3s0 up
echo &amp;#34;Done!&amp;#34;
&lt;/code>&lt;/pre>&lt;p>The route &lt;code>224.0.0.0&lt;/code> is the key for connecting two subnet&lt;/p>
&lt;p>The gateway is &lt;code>192.168.76.3&lt;/code>, not as default &lt;code>76.1&lt;/code>&lt;/p>
&lt;h2 id="the-grub-setting">The grub setting&lt;/h2>
&lt;h3 id="grub4dos">grub4dos&lt;/h3>
&lt;p>A problem os &lt;code>grub2dos&lt;/code> is that it may not know&lt;/p>
&lt;h4 id="how-to-install-on-my-mac-mini">how to install on my Mac mini&lt;/h4>
&lt;ul>
&lt;li>install refind&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="http://www.rodsbooks.com/refind/installing.html#windows">rEFInd引导程序&lt;/a>会以图标的方式列出你所有的操作系统。因此，你可以通过点击相应的图标来启动Windows、Ubuntu或者优盘中的操作系统。&lt;/p>
&lt;p>&lt;a href="http://sourceforge.net/projects/refind/files/0.8.4/refind-bin-0.8.4.zip/download">点击这里下载rEFInd for Windows 8&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://edk2.svn.sourceforge.net/svnroot/edk2/trunk/edk2/ShellBinPkg/UefiShell/X64/Shell.efi">点击这里下载rEFInd Shell&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://dl.dropbox.com/u/17629062/Shell2.zip">点击这里下载rEFInd Shell for old EFI&lt;/a>&lt;/p>
&lt;ul>
&lt;li>install rEFInd&lt;/li>
&lt;/ul>
&lt;p>If you haven&amp;rsquo;t installed rEFInd previously, unpack its zip file to a FAT partition. This can be the ESP itself or another partition, such as a USB flash drive. If you&amp;rsquo;re simply repairing a lost NVRAM entry, you needn&amp;rsquo;t move your existing rEFInd files.&lt;/p>
&lt;ul>
&lt;li>Identify your filesystems&lt;/li>
&lt;/ul>
&lt;p>which are labelled with the form fsn:, as in fs0: for the first filesystem, fs1: for the second, and so on. Type the filesystem number followed by the Enter key to begin using it. You can then type ls or dir to see the contents of the filesystem. Chances are your ESP will be fs0:, but it could be something else. (The following steps assume your ESP is fs0:; you&amp;rsquo;ll need to adjust them if it&amp;rsquo;s not.) If rEFInd&amp;rsquo;s source files are on another device, you must identify it, too.&lt;/p>
&lt;ul>
&lt;li>create a directory&lt;/li>
&lt;/ul>
&lt;p>If necessary, create a directory for rEFInd by typing mkdir fs0:\EFI\refind. (If the fs0:\EFI directory doesn&amp;rsquo;t already exist, you must create it first, though.)&lt;/p>
&lt;ul>
&lt;li>Change to the directory in which rEFInd&amp;rsquo;s files exist.&lt;/li>
&lt;/ul>
&lt;p>Type &lt;code>cp refind_x64.efi fs0:\EFI\refind&lt;/code> to copy the rEFInd binary file. Adjust the name if you&amp;rsquo;re using an IA32 or AARCH64 computer.)&lt;/p>
&lt;p>Type &lt;code>cp refind.conf-sample fs0:\EFI\refind\refind.conf&lt;/code> to copy and rename
the sample rEFInd configuration file.&lt;/p>
&lt;p>Type &lt;code>cp -r icons fs0:\EFI\refind\&lt;/code> to copy rEFInd&amp;rsquo;s icons.&lt;/p>
&lt;p>Optionally, &lt;code>type cp -r drivers_x64 fs0:\EFI\refind\&lt;/code> to copy rEFInd&amp;rsquo;s X64 drivers. (You could instead copy the IA32 or AARCH64 drivers or limit
yourself to just the drivers you need, of course.)&lt;/p>
&lt;p>Type &lt;code>fs0:&lt;/code>, if necessary, to change to the ESP.&lt;/p>
&lt;p>Type &lt;code>cd \EFI\refind&lt;/code> to change to rEFInd&amp;rsquo;s installation directory.&lt;/p>
&lt;p>If you want to edit rEFInd&amp;rsquo;s options, type &lt;code>edit refind.conf&lt;/code> and use the shell&amp;rsquo;s built-in text editor to do so. Press &lt;code>F2&lt;/code> followed by the Enter key
to save your changes and &lt;code>F3&lt;/code> to exit.&lt;/p>
&lt;p>Type &lt;code>bcfg boot dump -b&lt;/code> to see a list of existing NVRAM entries. Pay attention to their numbers (labelled Option: and Variable:, with the latter number preceded by the string Boot, as in Boot0007). You&amp;rsquo;ll want to create
a boot entry for rEFInd using a number that&amp;rsquo;s not in use.&lt;/p>
&lt;p>Type &lt;code>bcfg boot add 3 fs0:\EFI\refind\refind_x64.efi &amp;quot;rEFInd&amp;quot;&lt;/code>, adjusting the number (3 in this example), filesystem (fs0:), and filename (\EFI\refind\refind_x64.efi) as necessary for your system.&lt;/p>
&lt;p>If you&amp;rsquo;re used to Linux, be sure to use backslashes (), not Linux-style forward slashes (/), as directory separators. Note that some shells may ignore the number you entered and use another one, so watch for this possibility.&lt;/p>
&lt;p>Type &lt;code>bcfg boot mv 3 0&lt;/code>, substituting the option number for the entry you
created for 3. This moves rEFInd to the top of the boot order.&lt;/p>
&lt;p>Type &lt;code>reset&lt;/code> to reboot the computer.&lt;/p>
&lt;p>2.下载和解压以后，按照以下的步骤安装rEFInd。&lt;/p>
&lt;pre>&lt;code>返回桌面
右击开始按钮，选择管理员命令行
输入 `mountvol g: /s` (这将你的EFI目录结构映射到G盘)
进入解压的rEFInd目录。例如： `cd c:\users\gary\downloads\refind-bin-0.8.4\refind-bin-0.8.4` 。
当你输入 `dir` 命令，你可以看到一个refind目录
输入如下命令将refind拷贝到EFI引导区 `xcopy /E refind g:\EFI\refind\`
输入如下命令进入refind文件夹 `cd g:\EFI\refind`
重命名示例配置文件 `rename refind.conf-sample refind.conf`
运行如下命令将rEFind设置为引导程序 `bcdedit /set {bootmgr} path \EFI\refind\refind_x64.efi`
重启你的电脑
你将会看到一个包含`Ubuntu`和`Windows`的图形菜单
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>
&lt;p>install windows with winclone&lt;/p>
&lt;/li>
&lt;li>
&lt;p>boot windows&lt;/p>
&lt;/li>
&lt;li>
&lt;p>edit &lt;code>BCD&lt;/code> with &lt;code>bootice&lt;/code> to add &lt;code>grub4dos&lt;/code> based on &lt;code>grldr.mbr&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>edit &lt;code>menu.lst&lt;/code> to add &lt;code>linux&lt;/code> entry&lt;/p>
&lt;/li>
&lt;li>
&lt;p>install &lt;code>linux&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>babel-loader.md</title><link>/posts/nodejs/babel-loader/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/babel-loader/</guid><description>babel-loader Babel is a compiler for writing next generation JavaScript.
This package allows transpiling JavaScript files using Babel and webpack.
Notes: Issues with the output should be reported on the babel issue tracker;
Installation npm install babel-loader babel-core babel-preset-es2015 babel-preset-react --save-dev Note: npm will deprecate auto-installing of peerDependencies on the next major release, so required peer dependencies like babel-core and webpack will have to be listed explicitly in your package.json.</description><content>&lt;h1 id="babel-loaderhttpstravis-ciorgbabelbabel-loader">&lt;a href="https://travis-ci.org/babel/babel-loader">babel-loader&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>Babel is a compiler for writing next generation JavaScript.&lt;/p>
&lt;/blockquote>
&lt;p>This package allows transpiling JavaScript files using &lt;a href="https://github.com/babel/babel">Babel&lt;/a> and &lt;a href="https://github.com/webpack/webpack">webpack&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Notes:&lt;/strong> Issues with the output should be reported on the babel &lt;a href="https://github.com/babel/babel/issues">issue tracker&lt;/a>;&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install babel-loader babel-core babel-preset-es2015 babel-preset-react --save-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note:&lt;/strong> &lt;a href="https://npmjs.com">npm&lt;/a> will deprecate &lt;a href="https://github.com/npm/npm/issues/6565">auto-installing of peerDependencies&lt;/a> on the next major release, so required peer dependencies like babel-core and webpack will have to be listed explicitly in your &lt;code>package.json&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> If you&amp;rsquo;re upgrading from babel 5 to babel 6, please take a look &lt;a href="https://medium.com/@malyw/how-to-update-babel-5-x-6-x-d828c230ec53#.yqxukuzdk">at this guide&lt;/a>.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>&lt;a href="http://webpack.github.io/docs/using-loaders.html">Documentation: Using loaders&lt;/a>&lt;/p>
&lt;p>Within your webpack configuration object, you&amp;rsquo;ll need to add the babel-loader to the list of modules, like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">module&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">loaders&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/\.jsx?$/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exclude&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/(node_modules|bower_components)/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">loader&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;babel&amp;#39;&lt;/span>, &lt;span style="color:#75715e">// &amp;#39;babel-loader&amp;#39; is also a legal name to reference
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">query&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">presets&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;es2015&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="options">Options&lt;/h3>
&lt;p>See the &lt;code>babel&lt;/code> &lt;a href="http://babeljs.io/docs/usage/options/">options&lt;/a>.&lt;/p>
&lt;p>You can pass options to the loader by writing them as a &lt;a href="https://github.com/webpack/loader-utils">query string&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">module&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">loaders&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/\.jsx?$/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exclude&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/(node_modules|bower_components)/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">loader&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;babel?presets[]=react,presets[]=es2015&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or by using the query property:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">module&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">loaders&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/\.jsx?$/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exclude&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/(node_modules|bower_components)/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">loader&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;babel&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">query&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">presets&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;es2015&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This loader also supports the following loader-specific option:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>cacheDirectory&lt;/code>: Default &lt;code>false&lt;/code>. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is blank (&lt;code>loader: 'babel-loader?cacheDirectory'&lt;/code>) the loader will use the default OS temporary file directory.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>cacheIdentifier&lt;/code>: Default is a string composed by the babel-core&amp;rsquo;s version, the babel-loader&amp;rsquo;s version and the contents of .babelrc file if it exists. This can set to a custom value to force cache busting if the identifier changes.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> The &lt;code>sourceMap&lt;/code> option is ignored, instead sourceMaps are automatically enabled when webpack is configured to use them (via the &lt;code>devtool&lt;/code> config option).&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h3 id="babel-loader-is-slow">babel-loader is slow!&lt;/h3>
&lt;p>Make sure you are transforming as few files as possible. Because you are probably
matching &lt;code>/\.js$/&lt;/code>, you might be transforming the &lt;code>node_modules&lt;/code> folder or other unwanted
source.&lt;/p>
&lt;p>To exclude &lt;code>node_modules&lt;/code>, see the &lt;code>exclude&lt;/code> option in the &lt;code>loaders&lt;/code> config as documented above.&lt;/p>
&lt;p>You can also speed up babel-loader by as much as 2x by using the &lt;code>cacheDirectory&lt;/code> option.
This will cache transformations to the filesystem.&lt;/p>
&lt;h3 id="babel-is-injecting-helpers-into-each-file-and-bloating-my-code">babel is injecting helpers into each file and bloating my code!&lt;/h3>
&lt;p>babel uses very small helpers for common functions such as &lt;code>_extend&lt;/code>. By default
this will be added to every file that requires it.&lt;/p>
&lt;p>You can instead require the babel runtime as a separate module to avoid the duplication.&lt;/p>
&lt;p>The following configuration disables automatic per-file runtime injection in babel, instead
requiring &lt;code>babel-plugin-transform-runtime&lt;/code> and making all helper references use it.&lt;/p>
&lt;p>See the &lt;a href="http://babeljs.io/docs/plugins/transform-runtime/">docs&lt;/a> for more information.&lt;/p>
&lt;p>&lt;strong>NOTE:&lt;/strong> You must run &lt;code>npm install babel-plugin-transform-runtime --save&lt;/code> to include this in your project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">loaders&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// the &amp;#39;transform-runtime&amp;#39; plugin tells babel to require the runtime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// instead of inlining it.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/\.jsx?$/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exclude&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/(node_modules|bower_components)/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">loader&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;babel&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">query&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">presets&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;es2015&amp;#39;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">plugins&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;transform-runtime&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="using-cachedirectory-fails-with-enoent-error">using &lt;code>cacheDirectory&lt;/code> fails with ENOENT Error&lt;/h3>
&lt;p>If using cacheDirectory results in an error similar to the following:&lt;/p>
&lt;pre tabindex="0">&lt;code>ERROR in ./frontend/src/main.jsx
Module build failed: Error: ENOENT, open &amp;#39;true/350c59cae6b7bce3bb58c8240147581bfdc9cccc.json.gzip&amp;#39;
@ multi app
&lt;/code>&lt;/pre>&lt;p>(notice the &lt;code>true/&lt;/code> in the filepath)&lt;/p>
&lt;p>That means that most likely, you&amp;rsquo;re not setting the options correctly, and you&amp;rsquo;re doing something similar to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">loaders&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/\.jsx?$/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exclude&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/(node_modules|bower_components)/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">loader&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;babel?cacheDirectory=true&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s not the correct way of setting boolean values. You should do instead:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">loaders&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/\.jsx?$/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exclude&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/(node_modules|bower_components)/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">loader&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;babel?cacheDirectory&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or use the &lt;a href="https://webpack.github.io/docs/using-loaders.html#query-parameters">query&lt;/a> property:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">loaders&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// the optional &amp;#39;runtime&amp;#39; transformer tells babel to require the runtime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// instead of inlining it.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/\.jsx?$/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exclude&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">/(node_modules|bower_components)/&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">loader&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;babel&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">query&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cacheDirectory&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="custom-polyfills-eg-promise-library">custom polyfills (e.g. Promise library)&lt;/h3>
&lt;p>Since Babel includes a polyfill that includes a custom &lt;a href="https://github.com/facebook/regenerator/blob/master/runtime.js">regenerator runtime&lt;/a> and &lt;a href="https://github.com/zloirock/core-js">core.js&lt;/a>, the following usual shimming method using &lt;code>webpack.ProvidePlugin&lt;/code> will not work:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">webpack&lt;/span>.&lt;span style="color:#a6e22e">ProvidePlugin&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;Promise&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bluebird&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following approach will not work either:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;babel-runtime/core-js/promise&amp;#39;&lt;/span>).&lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;bluebird&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">promise&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Promise;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>which outputs to (using &lt;code>runtime&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;use strict&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">_Promise&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;babel-runtime/core-js/promise&amp;#39;&lt;/span>)[&lt;span style="color:#e6db74">&amp;#39;default&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;babel-runtime/core-js/promise&amp;#39;&lt;/span>)[&lt;span style="color:#e6db74">&amp;#39;default&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;bluebird&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">promise&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">_Promise&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The previous &lt;code>Promise&lt;/code> library is referenced and used before it is overridden.&lt;/p>
&lt;p>One approach is to have a &amp;ldquo;bootstrap&amp;rdquo; step in your application that would first override the default globals before your application:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// bootstrap.js
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;babel-runtime/core-js/promise&amp;#39;&lt;/span>).&lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;bluebird&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./app&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="licensehttpcoutomit-licenseorg">&lt;a href="http://couto.mit-license.org/">License&lt;/a>&lt;/h2></content></item><item><title>basic.md</title><link>/posts/python/basic/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/python/basic/</guid><description>python basic walk for root,dirs,files in os.walk(&amp;#39;/workspace/techbook&amp;#39;): for file in files: if os.path.splitext(file)[1] == &amp;#39;.markdown&amp;#39;: src = os.path.join(root,file) print(src) new_file = os.path.splitext(file)[0] + &amp;#39;.md&amp;#39; dst = os.path.join(root, new_file) print(dst) os.rename(src,dst)</description><content>&lt;h1 id="python">python&lt;/h1>
&lt;h2 id="basic-walk">basic walk&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-py" data-lang="py">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> root,dirs,files &lt;span style="color:#f92672">in&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>walk(&lt;span style="color:#e6db74">&amp;#39;/workspace/techbook&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file &lt;span style="color:#f92672">in&lt;/span> files:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>splitext(file)[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;.markdown&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> src &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(root,file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(src)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new_file &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>splitext(file)[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;.md&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dst &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(root, new_file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(dst)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> os&lt;span style="color:#f92672">.&lt;/span>rename(src,dst)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>bigdata.md</title><link>/posts/academy/bigdata/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/academy/bigdata/</guid><description/><content/></item><item><title>browserify.md</title><link>/posts/nodejs/browserify/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/browserify/</guid><description>browserify require('modules') in the browser
Use a node-style require() to organize your browser code and load modules installed by npm.
browserify will recursively analyze all the require() calls in your app in order to build a bundle you can serve up to the browser in a single &amp;lt;script&amp;gt; tag.
getting started If you&amp;rsquo;re new to browserify, check out the browserify handbook and the resources on browserify.org.
Check out browserify search to find browserify-compatible packages on npm.</description><content>&lt;h1 id="browserify">browserify&lt;/h1>
&lt;p>&lt;code>require('modules')&lt;/code> in the browser&lt;/p>
&lt;p>Use a &lt;a href="http://nodejs.org">node&lt;/a>-style &lt;code>require()&lt;/code> to organize your browser code
and load modules installed by &lt;a href="https://www.npmjs.com">npm&lt;/a>.&lt;/p>
&lt;p>browserify will recursively analyze all the &lt;code>require()&lt;/code> calls in your app in
order to build a bundle you can serve up to the browser in a single &lt;code>&amp;lt;script&amp;gt;&lt;/code>
tag.&lt;/p>
&lt;p>&lt;a href="https://travis-ci.org/substack/node-browserify">&lt;img src="https://secure.travis-ci.org/substack/node-browserify.png" alt="build status">&lt;/a>&lt;/p>
&lt;p>&lt;img src="http://substack.net/images/browserify_logo.png" alt="browserify!">&lt;/p>
&lt;h1 id="getting-started">getting started&lt;/h1>
&lt;p>If you&amp;rsquo;re new to browserify, check out the
&lt;a href="https://github.com/substack/browserify-handbook">browserify handbook&lt;/a>
and the resources on &lt;a href="http://browserify.org/">browserify.org&lt;/a>.&lt;/p>
&lt;p>Check out &lt;a href="http://browserifysearch.org/">browserify search&lt;/a> to find
browserify-compatible packages on npm.&lt;/p>
&lt;h1 id="example">example&lt;/h1>
&lt;p>Whip up a file, &lt;code>main.js&lt;/code> with some &lt;code>require()&lt;/code>s in it. You can use relative
paths like &lt;code>'./foo.js'&lt;/code> and &lt;code>'../lib/bar.js'&lt;/code> or module paths like &lt;code>'gamma'&lt;/code>
that will search &lt;code>node_modules/&lt;/code> using
&lt;a href="https://github.com/substack/node-resolve">node&amp;rsquo;s module lookup algorithm&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">foo&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./foo.js&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">bar&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;../lib/bar.js&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">gamma&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;gamma&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">elem&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;result&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">foo&lt;/span>(&lt;span style="color:#ae81ff">100&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">bar&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;baz&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">elem&lt;/span>.&lt;span style="color:#a6e22e">textContent&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">gamma&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Export functionality by assigning onto &lt;code>module.exports&lt;/code> or &lt;code>exports&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">n&lt;/span>) { &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">n&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">111&lt;/span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now just use the &lt;code>browserify&lt;/code> command to build a bundle starting at &lt;code>main.js&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ browserify main.js &amp;gt; bundle.js
&lt;/code>&lt;/pre>&lt;p>All of the modules that &lt;code>main.js&lt;/code> needs are included in the &lt;code>bundle.js&lt;/code> from a
recursive walk of the &lt;code>require()&lt;/code> graph using
&lt;a href="https://github.com/defunctzombie/node-required">required&lt;/a>.&lt;/p>
&lt;p>To use this bundle, just toss a &lt;code>&amp;lt;script src=&amp;quot;bundle.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code> into your
html!&lt;/p>
&lt;h1 id="install">install&lt;/h1>
&lt;p>With &lt;a href="https://www.npmjs.com/">npm&lt;/a> do:&lt;/p>
&lt;pre tabindex="0">&lt;code>npm install -g browserify
&lt;/code>&lt;/pre>&lt;h1 id="usage">usage&lt;/h1>
&lt;pre tabindex="0">&lt;code>Usage: browserify [entry files] {OPTIONS}
Standard Options:
--outfile, -o Write the browserify bundle to this file.
If unspecified, browserify prints to stdout.
--require, -r A module name or file to bundle.require()
Optionally use a colon separator to set the target.
--entry, -e An entry point of your app
--ignore, -i Replace a file with an empty stub. Files can be globs.
--exclude, -u Omit a file from the output bundle. Files can be globs.
--external, -x Reference a file from another bundle. Files can be globs.
--transform, -t Use a transform module on top-level files.
--command, -c Use a transform command on top-level files.
--standalone -s Generate a UMD bundle for the supplied export name.
This bundle works with other module systems and sets the name
given as a window global if no module system is found.
--debug -d Enable source maps that allow you to debug your files
separately.
--help, -h Show this message
For advanced options, type `browserify --help advanced`.
Specify a parameter.
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>Advanced Options:
--insert-globals, --ig, --fast [default: false]
Skip detection and always insert definitions for process, global,
__filename, and __dirname.
benefit: faster builds
cost: extra bytes
--insert-global-vars, --igv
Comma-separated list of global variables to detect and define.
Default: __filename,__dirname,process,Buffer,global
--detect-globals, --dg [default: true]
Detect the presence of process, global, __filename, and __dirname and define
these values when present.
benefit: npm modules more likely to work
cost: slower builds
--ignore-missing, --im [default: false]
Ignore `require()` statements that don&amp;#39;t resolve to anything.
--noparse=FILE
Don&amp;#39;t parse FILE at all. This will make bundling much, much faster for giant
libs like jquery or threejs.
--no-builtins
Turn off builtins. This is handy when you want to run a bundle in node which
provides the core builtins.
--no-commondir
Turn off setting a commondir. This is useful if you want to preserve the
original paths that a bundle was generated with.
--no-bundle-external
Turn off bundling of all external modules. This is useful if you only want
to bundle your local files.
--bare
Alias for both --no-builtins, --no-commondir, and sets --insert-global-vars
to just &amp;#34;__filename,__dirname&amp;#34;. This is handy if you want to run bundles in
node.
--no-browser-field, --no-bf
Turn off package.json browser field resolution. This is also handy if you
need to run a bundle in node.
--node
Alias for --bare and --no-browser-field.
--full-paths
Turn off converting module ids into numerical indexes. This is useful for
preserving the original paths that a bundle was generated with.
--deps
Instead of standard bundle output, print the dependency array generated by
module-deps.
--list
Print each file in the dependency graph. Useful for makefiles.
--extension=EXTENSION
Consider files with specified EXTENSION as modules, this option can used
multiple times.
--global-transform=MODULE, -g MODULE
Use a transform module on all files after any ordinary transforms have run.
--plugin=MODULE, -p MODULE
Register MODULE as a plugin.
Passing arguments to transforms and plugins:
For -t, -g, and -p, you may use subarg syntax to pass options to the
transforms or plugin function as the second parameter. For example:
-t [ foo -x 3 --beep ]
will call the `foo` transform for each applicable file by calling:
foo(file, { x: 3, beep: true })
&lt;/code>&lt;/pre>&lt;h1 id="compatibility">compatibility&lt;/h1>
&lt;p>Many &lt;a href="https://www.npmjs.com/">npm&lt;/a> modules that don&amp;rsquo;t do IO will just work after being
browserified. Others take more work.&lt;/p>
&lt;p>Many node built-in modules have been wrapped to work in the browser, but only
when you explicitly &lt;code>require()&lt;/code> or use their functionality.&lt;/p>
&lt;p>When you &lt;code>require()&lt;/code> any of these modules, you will get a browser-specific shim:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.npmjs.com/package/assert">assert&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/buffer">buffer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/console-browserify">console&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/constants-browserify">constants&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/crypto-browserify">crypto&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/domain-browser">domain&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/events">events&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/stream-http">http&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/https-browserify">https&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/os-browserify">os&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/path-browserify">path&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/punycode">punycode&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/querystring-es3">querystring&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/stream-browserify">stream&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/string_decoder">string_decoder&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/timers-browserify">timers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/tty-browserify">tty&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/url">url&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/util">util&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/vm-browserify">vm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/browserify-zlib">zlib&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Additionally, if you use any of these variables, they
&lt;a href="https://github.com/substack/insert-module-globals">will be defined&lt;/a>
in the bundled output in a browser-appropriate way:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.npmjs.com/package/process">process&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.npmjs.com/package/buffer">Buffer&lt;/a>&lt;/li>
&lt;li>global - top-level scope object (window)&lt;/li>
&lt;li>__filename - file path of the currently executing file&lt;/li>
&lt;li>__dirname - directory path of the currently executing file&lt;/li>
&lt;/ul>
&lt;h1 id="more-examples">more examples&lt;/h1>
&lt;h2 id="external-requires">external requires&lt;/h2>
&lt;p>You can just as easily create a bundle that will export a &lt;code>require()&lt;/code> function so
you can &lt;code>require()&lt;/code> modules from another script tag. Here we&amp;rsquo;ll create a
&lt;code>bundle.js&lt;/code> with the &lt;a href="https://www.npmjs.com/package/through">through&lt;/a>
and &lt;a href="https://www.npmjs.com/package/duplexer">duplexer&lt;/a> modules.&lt;/p>
&lt;pre tabindex="0">&lt;code>$ browserify -r through -r duplexer -r ./my-file.js:my-module &amp;gt; bundle.js
&lt;/code>&lt;/pre>&lt;p>Then in your page you can do:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;bundle.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">through&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;through&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">duplexer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;duplexer&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">myModule&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;my-module&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* ... */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="external-source-maps">external source maps&lt;/h2>
&lt;p>If you prefer the source maps be saved to a separate &lt;code>.js.map&lt;/code> source map file, you may use
&lt;a href="https://github.com/thlorenz/exorcist">exorcist&lt;/a> in order to achieve that. It&amp;rsquo;s as simple as:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ browserify main.js --debug | exorcist bundle.js.map &amp;gt; bundle.js
&lt;/code>&lt;/pre>&lt;p>Learn about additional options &lt;a href="https://github.com/thlorenz/exorcist#usage">here&lt;/a>.&lt;/p>
&lt;h2 id="multiple-bundles">multiple bundles&lt;/h2>
&lt;p>If browserify finds a &lt;code>require&lt;/code>d function already defined in the page scope, it
will fall back to that function if it didn&amp;rsquo;t find any matches in its own set of
bundled modules.&lt;/p>
&lt;p>In this way, you can use browserify to split up bundles among multiple pages to
get the benefit of caching for shared, infrequently-changing modules, while
still being able to use &lt;code>require()&lt;/code>. Just use a combination of &lt;code>--external&lt;/code> and
&lt;code>--require&lt;/code> to factor out common dependencies.&lt;/p>
&lt;p>For example, if a website with 2 pages, &lt;code>beep.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">robot&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./robot.js&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">robot&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;beep&amp;#39;&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and &lt;code>boop.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">robot&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./robot.js&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">robot&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;boop&amp;#39;&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>both depend on &lt;code>robot.js&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">s&lt;/span>) { &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span>.&lt;span style="color:#a6e22e">toUpperCase&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;!&amp;#39;&lt;/span> };
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>$ browserify -r ./robot.js &amp;gt; static/common.js
$ browserify -x ./robot.js beep.js &amp;gt; static/beep.js
$ browserify -x ./robot.js boop.js &amp;gt; static/boop.js
&lt;/code>&lt;/pre>&lt;p>Then on the beep page you can have:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;common.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;beep.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>while the boop page can have:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;common.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;boop.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This approach using &lt;code>-r&lt;/code> and &lt;code>-x&lt;/code> works fine for a small number of split assets,
but there are plugins for automatically factoring out components which are
described in the
&lt;a href="https://github.com/substack/browserify-handbook#partitioning">partitioning section of the browserify handbook&lt;/a>.&lt;/p>
&lt;h2 id="api-example">api example&lt;/h2>
&lt;p>You can use the API directly too:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">browserify&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;browserify&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">b&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">browserify&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">b&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./browser/main.js&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">b&lt;/span>.&lt;span style="color:#a6e22e">bundle&lt;/span>().&lt;span style="color:#a6e22e">pipe&lt;/span>(&lt;span style="color:#a6e22e">process&lt;/span>.&lt;span style="color:#a6e22e">stdout&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="methods">methods&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">browserify&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;browserify&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="browserifyfiles--opts">&lt;code>browserify([files] [, opts])&lt;/code>&lt;/h2>
&lt;p>Returns a new browserify instance.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>&lt;code>files&lt;/code> and &lt;code>opts&lt;/code> are both optional, but must be in the order shown if both are
passed.&lt;/p>
&lt;p>Entry files may be passed in &lt;code>files&lt;/code> and / or &lt;code>opts.entries&lt;/code>.&lt;/p>
&lt;p>If an entry file is a stream, its contents will be used. You should pass
&lt;code>opts.basedir&lt;/code> when using streaming files so that relative requires can be
resolved.&lt;/p>
&lt;p>&lt;code>opts.entries&lt;/code> has the same definition as &lt;code>files&lt;/code>.&lt;/p>
&lt;p>&lt;code>opts.noParse&lt;/code> is an array which will skip all require() and global parsing for
each file in the array. Use this for giant libs like jquery or threejs that
don&amp;rsquo;t have any requires or node-style globals but take forever to parse.&lt;/p>
&lt;p>&lt;code>opts.transform&lt;/code> is an array of transform functions or modules names which will
transform the source code before the parsing.&lt;/p>
&lt;p>&lt;code>opts.extensions&lt;/code> is an array of optional extra extensions for the module lookup
machinery to use when the extension has not been specified.
By default browserify considers only &lt;code>.js&lt;/code> and &lt;code>.json&lt;/code> files in such cases.&lt;/p>
&lt;p>&lt;code>opts.basedir&lt;/code> is the directory that browserify starts bundling from for
filenames that start with &lt;code>.&lt;/code>.&lt;/p>
&lt;p>&lt;code>opts.paths&lt;/code> is an array of directories that browserify searches when looking
for modules which are not referenced using relative path. Can be absolute or
relative to &lt;code>basedir&lt;/code>. Equivalent of setting &lt;code>NODE_PATH&lt;/code> environmental variable
when calling &lt;code>browserify&lt;/code> command.&lt;/p>
&lt;p>&lt;code>opts.commondir&lt;/code> sets the algorithm used to parse out the common paths. Use
&lt;code>false&lt;/code> to turn this off, otherwise it uses the
&lt;a href="https://www.npmjs.com/package/commondir">commondir&lt;/a> module.&lt;/p>
&lt;p>&lt;code>opts.fullPaths&lt;/code> disables converting module ids into numerical indexes. This is
useful for preserving the original paths that a bundle was generated with.&lt;/p>
&lt;p>&lt;code>opts.builtins&lt;/code> sets the list of built-ins to use, which by default is set in
&lt;code>lib/builtins.js&lt;/code> in this distribution.&lt;/p>
&lt;p>&lt;code>opts.bundleExternal&lt;/code> boolean option to set if external modules should be
bundled. Defaults to true.&lt;/p>
&lt;p>When &lt;code>opts.insertGlobals&lt;/code> is true, always insert &lt;code>process&lt;/code>, &lt;code>global&lt;/code>,
&lt;code>__filename&lt;/code>, and &lt;code>__dirname&lt;/code> without analyzing the AST for faster builds but
larger output bundles. Default false.&lt;/p>
&lt;p>When &lt;code>opts.detectGlobals&lt;/code> is true, scan all files for &lt;code>process&lt;/code>, &lt;code>global&lt;/code>,
&lt;code>__filename&lt;/code>, and &lt;code>__dirname&lt;/code>, defining as necessary. With this option npm
modules are more likely to work but bundling takes longer. Default true.&lt;/p>
&lt;p>When &lt;code>opts.debug&lt;/code> is true, add a source map inline to the end of the bundle.
This makes debugging easier because you can see all the original files if
you are in a modern enough browser.&lt;/p>
&lt;p>When &lt;code>opts.standalone&lt;/code> is a non-empty string, a standalone module is created
with that name and a &lt;a href="https://github.com/forbeslindesay/umd">umd&lt;/a> wrapper.
You can use namespaces in the standalone global export using a &lt;code>.&lt;/code> in the string
name as a separator, for example &lt;code>'A.B.C'&lt;/code>. The global export will be &lt;a href="https://github.com/ForbesLindesay/umd#name-casing-and-characters">sanitized
and camel cased&lt;/a>.&lt;/p>
&lt;p>Note that in standalone mode the &lt;code>require()&lt;/code> calls from the original source will
still be around, which may trip up AMD loaders scanning for &lt;code>require()&lt;/code> calls.
You can remove these calls with
&lt;a href="https://www.npmjs.com/package/derequire">derequire&lt;/a>:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ npm install -g derequire
$ browserify main.js --standalone Foo | derequire &amp;gt; bundle.js
&lt;/code>&lt;/pre>&lt;p>&lt;code>opts.insertGlobalVars&lt;/code> will be passed to
&lt;a href="https://www.npmjs.com/package/insert-module-globals">insert-module-globals&lt;/a>
as the &lt;code>opts.vars&lt;/code> parameter.&lt;/p>
&lt;p>&lt;code>opts.externalRequireName&lt;/code> defaults to &lt;code>'require'&lt;/code> in &lt;code>expose&lt;/code> mode but you can
use another name.&lt;/p>
&lt;p>Note that if files do not contain javascript source code then you also need to
specify a corresponding transform for them.&lt;/p>
&lt;p>All other options are forwarded along to
&lt;a href="https://www.npmjs.com/package/module-deps">module-deps&lt;/a>
and &lt;a href="https://www.npmjs.com/package/browser-pack">browser-pack&lt;/a> directly.&lt;/p>
&lt;h2 id="baddfile-opts">b.add(file, opts)&lt;/h2>
&lt;p>Add an entry file from &lt;code>file&lt;/code> that will be executed when the bundle loads.&lt;/p>
&lt;p>If &lt;code>file&lt;/code> is an array, each item in &lt;code>file&lt;/code> will be added as an entry file.&lt;/p>
&lt;h2 id="brequirefile-opts">b.require(file, opts)&lt;/h2>
&lt;p>Make &lt;code>file&lt;/code> available from outside the bundle with &lt;code>require(file)&lt;/code>.&lt;/p>
&lt;p>The &lt;code>file&lt;/code> param is anything that can be resolved by &lt;code>require.resolve()&lt;/code>.&lt;/p>
&lt;p>&lt;code>file&lt;/code> can also be a stream, but you should also use &lt;code>opts.basedir&lt;/code> so that
relative requires will be resolvable.&lt;/p>
&lt;p>If &lt;code>file&lt;/code> is an array, each item in &lt;code>file&lt;/code> will be required.
In &lt;code>file&lt;/code> array form, you can use a string or object for each item. Object items
should have a &lt;code>file&lt;/code> property and the rest of the parameters will be used for
the &lt;code>opts&lt;/code>.&lt;/p>
&lt;p>Use the &lt;code>expose&lt;/code> property of opts to specify a custom dependency name.
&lt;code>require('./vendor/angular/angular.js', {expose: 'angular'})&lt;/code> enables &lt;code>require('angular')&lt;/code>&lt;/p>
&lt;h2 id="bbundlecb">b.bundle(cb)&lt;/h2>
&lt;p>Bundle the files and their dependencies into a single javascript file.&lt;/p>
&lt;p>Return a readable stream with the javascript file contents or
optionally specify a &lt;code>cb(err, buf)&lt;/code> to get the buffered results.&lt;/p>
&lt;h2 id="bexternalfile">b.external(file)&lt;/h2>
&lt;p>Prevent &lt;code>file&lt;/code> from being loaded into the current bundle, instead referencing
from another bundle.&lt;/p>
&lt;p>If &lt;code>file&lt;/code> is an array, each item in &lt;code>file&lt;/code> will be externalized.&lt;/p>
&lt;p>If &lt;code>file&lt;/code> is another bundle, that bundle&amp;rsquo;s contents will be read and excluded
from the current bundle as the bundle in &lt;code>file&lt;/code> gets bundled.&lt;/p>
&lt;h2 id="bignorefile">b.ignore(file)&lt;/h2>
&lt;p>Prevent the module name or file at &lt;code>file&lt;/code> from showing up in the output bundle.&lt;/p>
&lt;p>Instead you will get a file with &lt;code>module.exports = {}&lt;/code>.&lt;/p>
&lt;h2 id="bexcludefile">b.exclude(file)&lt;/h2>
&lt;p>Prevent the module name or file at &lt;code>file&lt;/code> from showing up in the output bundle.&lt;/p>
&lt;p>If your code tries to &lt;code>require()&lt;/code> that file it will throw unless you&amp;rsquo;ve provided
another mechanism for loading it.&lt;/p>
&lt;h2 id="btransformtr-opts">b.transform(tr, opts={})&lt;/h2>
&lt;p>Transform source code before parsing it for &lt;code>require()&lt;/code> calls with the transform
function or module name &lt;code>tr&lt;/code>.&lt;/p>
&lt;p>If &lt;code>tr&lt;/code> is a function, it will be called with &lt;code>tr(file)&lt;/code> and it should return a
&lt;a href="https://github.com/substack/stream-handbook#through">through-stream&lt;/a>
that takes the raw file contents and produces the transformed source.&lt;/p>
&lt;p>If &lt;code>tr&lt;/code> is a string, it should be a module name or file path of a
&lt;a href="https://github.com/substack/module-deps#transforms">transform module&lt;/a>
with a signature of:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">through&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;through&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">file&lt;/span>) { &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">through&lt;/span>() };
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You don&amp;rsquo;t need to necessarily use the
&lt;a href="https://www.npmjs.com/package/through">through&lt;/a> module. Browserify is compatible with the newer, more verbose &lt;a href="http://nodejs.org/api/stream.html#stream_class_stream_transform_1">Transform streams&lt;/a> built into Node v0.10.&lt;/p>
&lt;p>Here&amp;rsquo;s how you might compile coffee script on the fly using &lt;code>.transform()&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">coffee&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;coffee-script&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">through&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;through&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">b&lt;/span>.&lt;span style="color:#a6e22e">transform&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">file&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">through&lt;/span>(&lt;span style="color:#a6e22e">write&lt;/span>, &lt;span style="color:#a6e22e">end&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">write&lt;/span> (&lt;span style="color:#a6e22e">buf&lt;/span>) { &lt;span style="color:#a6e22e">data&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#a6e22e">buf&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">end&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">queue&lt;/span>(&lt;span style="color:#a6e22e">coffee&lt;/span>.&lt;span style="color:#a6e22e">compile&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">queue&lt;/span>(&lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that on the command-line with the &lt;code>-c&lt;/code> flag you can just do:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ browserify -c &amp;#39;coffee -sc&amp;#39; main.coffee &amp;gt; bundle.js
&lt;/code>&lt;/pre>&lt;p>Or better still, use the &lt;a href="https://github.com/jnordberg/coffeeify">coffeeify&lt;/a>
module:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ npm install coffeeify
$ browserify -t coffeeify main.coffee &amp;gt; bundle.js
&lt;/code>&lt;/pre>&lt;p>If &lt;code>opts.global&lt;/code> is &lt;code>true&lt;/code>, the transform will operate on ALL files, despite
whether they exist up a level in a &lt;code>node_modules/&lt;/code> directory. Use global
transforms cautiously and sparingly, since most of the time an ordinary
transform will suffice. You can also not configure global transforms in a
&lt;code>package.json&lt;/code> like you can with ordinary transforms.&lt;/p>
&lt;p>Global transforms always run after any ordinary transforms have run.&lt;/p>
&lt;p>Transforms may obtain options from the command-line with
&lt;a href="https://www.npmjs.com/package/subarg">subarg&lt;/a> syntax:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ browserify -t [ foo --bar=555 ] main.js
&lt;/code>&lt;/pre>&lt;p>or from the api:&lt;/p>
&lt;pre tabindex="0">&lt;code>b.transform(&amp;#39;foo&amp;#39;, { bar: 555 })
&lt;/code>&lt;/pre>&lt;p>In both cases, these options are provided as the second argument to the
transform function:&lt;/p>
&lt;pre tabindex="0">&lt;code>module.exports = function (file, opts) { /* opts.bar === 555 */ }
&lt;/code>&lt;/pre>&lt;p>Options sent to the browserify constructor are also provided under
&lt;code>opts._flags&lt;/code>. These browserify options are sometimes required if your transform
needs to do something different when browserify is run in debug mode, for
example.&lt;/p>
&lt;h2 id="bpluginplugin-opts">b.plugin(plugin, opts)&lt;/h2>
&lt;p>Register a &lt;code>plugin&lt;/code> with &lt;code>opts&lt;/code>. Plugins can be a string module name or a
function the same as transforms.&lt;/p>
&lt;p>&lt;code>plugin(b, opts)&lt;/code> is called with the browserify instance &lt;code>b&lt;/code>.&lt;/p>
&lt;p>For more information, consult the plugins section below.&lt;/p>
&lt;h2 id="bpipeline">b.pipeline&lt;/h2>
&lt;p>There is an internal
&lt;a href="https://www.npmjs.com/package/labeled-stream-splicer">labeled-stream-splicer&lt;/a>
pipeline with these labels:&lt;/p>
&lt;ul>
&lt;li>&lt;code>'record'&lt;/code> - save inputs to play back later on subsequent &lt;code>bundle()&lt;/code> calls&lt;/li>
&lt;li>&lt;code>'deps'&lt;/code> - &lt;a href="https://www.npmjs.com/package/module-deps">module-deps&lt;/a>&lt;/li>
&lt;li>&lt;code>'json'&lt;/code> - adds &lt;code>module.exports=&lt;/code> to the beginning of json files&lt;/li>
&lt;li>&lt;code>'unbom'&lt;/code> - remove byte-order markers&lt;/li>
&lt;li>&lt;code>'unshebang'&lt;/code> - remove #! labels on the first line&lt;/li>
&lt;li>&lt;code>'syntax'&lt;/code> - check for syntax errors&lt;/li>
&lt;li>&lt;code>'sort'&lt;/code> - sort the dependencies for deterministic bundles&lt;/li>
&lt;li>&lt;code>'dedupe'&lt;/code> - remove duplicate source contents&lt;/li>
&lt;li>&lt;code>'label'&lt;/code> - apply integer labels to files&lt;/li>
&lt;li>&lt;code>'emit-deps'&lt;/code> - emit &lt;code>'dep'&lt;/code> event&lt;/li>
&lt;li>&lt;code>'debug'&lt;/code> - apply source maps&lt;/li>
&lt;li>&lt;code>'pack'&lt;/code> - &lt;a href="https://www.npmjs.com/package/browser-pack">browser-pack&lt;/a>&lt;/li>
&lt;li>&lt;code>'wrap'&lt;/code> - apply final wrapping, &lt;code>require=&lt;/code> and a newline and semicolon&lt;/li>
&lt;/ul>
&lt;p>You can call &lt;code>b.pipeline.get()&lt;/code> with a label name to get a handle on a stream pipeline
that you can &lt;code>push()&lt;/code>, &lt;code>unshift()&lt;/code>, or &lt;code>splice()&lt;/code> to insert your own transform
streams.&lt;/p>
&lt;h1 id="bresetopts">b.reset(opts)&lt;/h1>
&lt;p>Reset the pipeline back to a normal state. This function is called automatically
when &lt;code>bundle()&lt;/code> is called multiple times.&lt;/p>
&lt;p>This function triggers a &amp;lsquo;reset&amp;rsquo; event.&lt;/p>
&lt;h1 id="packagejson">package.json&lt;/h1>
&lt;p>browserify uses the &lt;code>package.json&lt;/code> in its module resolution algorithm, just like
node. If there is a &lt;code>&amp;quot;main&amp;quot;&lt;/code> field, browserify will start resolving the package
at that point. If there is no &lt;code>&amp;quot;main&amp;quot;&lt;/code> field, browserify will look for an
&lt;code>&amp;quot;index.js&amp;quot;&lt;/code> file in the module root directory. Here are some more
sophisticated things you can do in the package.json:&lt;/p>
&lt;h2 id="browser-field">browser field&lt;/h2>
&lt;p>There is a special &amp;ldquo;&lt;a href="https://gist.github.com/4339901">browser&lt;/a>&amp;rdquo; field you can
set in your package.json on a per-module basis to override file resolution for
browser-specific versions of files.&lt;/p>
&lt;p>For example, if you want to have a browser-specific module entry point for your
&lt;code>&amp;quot;main&amp;quot;&lt;/code> field you can just set the &lt;code>&amp;quot;browser&amp;quot;&lt;/code> field to a string:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;browser&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;./browser.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or you can have overrides on a per-file basis:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;browser&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;fs&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;level-fs&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;./lib/ops.js&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;./browser/opts.js&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that the browser field only applies to files in the local module, and like
transforms, it doesn&amp;rsquo;t apply into &lt;code>node_modules&lt;/code> directories.&lt;/p>
&lt;h2 id="browserifytransform">browserify.transform&lt;/h2>
&lt;p>You can specify source transforms in the package.json in the
&lt;code>browserify.transform&lt;/code> field. There is more information about how source
transforms work in package.json on the
&lt;a href="https://github.com/substack/module-deps#transforms">module-deps readme&lt;/a>.&lt;/p>
&lt;p>For example, if your module requires &lt;a href="https://www.npmjs.com/package/brfs">brfs&lt;/a>, you
can add&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;browserify&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> { &lt;span style="color:#f92672">&amp;#34;transform&amp;#34;&lt;/span>: [ &lt;span style="color:#e6db74">&amp;#34;brfs&amp;#34;&lt;/span> ] }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>to your package.json. Now when somebody &lt;code>require()&lt;/code>s your module, brfs will
automatically be applied to the files in your module without explicit
intervention by the person using your module. Make sure to add transforms to
your package.json dependencies field.&lt;/p>
&lt;h1 id="events">events&lt;/h1>
&lt;h2 id="bonfile-function-file-id-parent-">b.on(&amp;lsquo;file&amp;rsquo;, function (file, id, parent) {})&lt;/h2>
&lt;h2 id="bpipelineonfile-function-file-id-parent-">b.pipeline.on(&amp;lsquo;file&amp;rsquo;, function (file, id, parent) {})&lt;/h2>
&lt;p>When a file is resolved for the bundle, the bundle emits a &lt;code>'file'&lt;/code> event with
the full &lt;code>file&lt;/code> path, the &lt;code>id&lt;/code> string passed to &lt;code>require()&lt;/code>, and the &lt;code>parent&lt;/code>
object used by
&lt;a href="https://github.com/defunctzombie/node-browser-resolve">browser-resolve&lt;/a>.&lt;/p>
&lt;p>You could use the &lt;code>file&lt;/code> event to implement a file watcher to regenerate bundles
when files change.&lt;/p>
&lt;h2 id="bonpackage-function-pkg-">b.on(&amp;lsquo;package&amp;rsquo;, function (pkg) {})&lt;/h2>
&lt;h2 id="bpipelineonpackage-function-pkg-">b.pipeline.on(&amp;lsquo;package&amp;rsquo;, function (pkg) {})&lt;/h2>
&lt;p>When a package file is read, this event fires with the contents. The package
directory is available at &lt;code>pkg.__dirname&lt;/code>.&lt;/p>
&lt;h2 id="bonbundle-function-bundle-">b.on(&amp;lsquo;bundle&amp;rsquo;, function (bundle) {})&lt;/h2>
&lt;p>When &lt;code>.bundle()&lt;/code> is called, this event fires with the &lt;code>bundle&lt;/code> output stream.&lt;/p>
&lt;h2 id="bonreset-function--">b.on(&amp;lsquo;reset&amp;rsquo;, function () {})&lt;/h2>
&lt;p>When the &lt;code>.reset()&lt;/code> method is called or implicitly called by another call to
&lt;code>.bundle()&lt;/code>, this event fires.&lt;/p>
&lt;h2 id="bontransform-function-tr-file-">b.on(&amp;rsquo;transform&amp;rsquo;, function (tr, file) {})&lt;/h2>
&lt;h2 id="bpipelineontransform-function-tr-file-">b.pipeline.on(&amp;rsquo;transform&amp;rsquo;, function (tr, file) {})&lt;/h2>
&lt;p>When a transform is applied to a file, the &lt;code>'transform'&lt;/code> event fires on the
bundle stream with the transform stream &lt;code>tr&lt;/code> and the &lt;code>file&lt;/code> that the transform
is being applied to.&lt;/p>
&lt;h1 id="plugins">plugins&lt;/h1>
&lt;p>For some more advanced use-cases, a transform is not sufficiently extensible.
Plugins are modules that take the bundle instance as their first parameter and
an option hash as their second.&lt;/p>
&lt;p>Plugins can be used to do perform some fancy features that transforms can&amp;rsquo;t do.
For example, &lt;a href="https://www.npmjs.com/package/factor-bundle">factor-bundle&lt;/a> is a
plugin that can factor out common dependencies from multiple entry-points into a
common bundle. Use plugins with &lt;code>-p&lt;/code> and pass options to plugins with
&lt;a href="https://www.npmjs.com/package/subarg">subarg&lt;/a> syntax:&lt;/p>
&lt;pre tabindex="0">&lt;code>browserify x.js y.js -p [ factor-bundle -o bundle/x.js -o bundle/y.js ] \
&amp;gt; bundle/common.js
&lt;/code>&lt;/pre>&lt;p>For a list of plugins, consult the
&lt;a href="https://www.npmjs.com/browse/keyword/browserify-plugin">browserify-plugin tag&lt;/a>
on npm.&lt;/p>
&lt;h1 id="list-of-source-transforms">list of source transforms&lt;/h1>
&lt;p>There is a &lt;a href="https://github.com/substack/node-browserify/wiki/list-of-transforms">wiki page that lists the known browserify
transforms&lt;/a>.&lt;/p>
&lt;p>If you write a transform, make sure to add your transform to that wiki page and
add a package.json keyword of &lt;code>browserify-transform&lt;/code> so that
&lt;a href="https://www.npmjs.com/browse/keyword/browserify-transform">people can browse for all the browserify
transforms&lt;/a> on npmjs.org.&lt;/p>
&lt;h1 id="third-party-tools">third-party tools&lt;/h1>
&lt;p>There is a &lt;a href="https://github.com/substack/node-browserify/wiki/browserify-tools">wiki page that lists the known browserify
tools&lt;/a>.&lt;/p>
&lt;p>If you write a tool, make sure to add it to that wiki page and
add a package.json keyword of &lt;code>browserify-tool&lt;/code> so that
&lt;a href="https://www.npmjs.com/browse/keyword/browserify-tool">people can browse for all the browserify
tools&lt;/a> on npmjs.org.&lt;/p>
&lt;h1 id="changelog">changelog&lt;/h1>
&lt;p>Releases are documented in
&lt;a href="changelog.markdown">changelog.markdown&lt;/a> and on the
&lt;a href="https://twitter.com/browserify">browserify twitter feed&lt;/a>.&lt;/p>
&lt;h1 id="license">license&lt;/h1>
&lt;p>MIT&lt;/p>
&lt;p>&lt;img src="http://substack.net/images/browserify/browserify.png" alt="browserify!">&lt;/p></content></item><item><title>clojure.md</title><link>/posts/misc/clojure/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/clojure/</guid><description>title: Clojure is great Clojure define functions A function can take arguments
A function can have comments as doc
A function will return the last statement
(defn hello [arg1 arg2] &amp;#34;This is my playground of clojure&amp;#34; (println (str &amp;#34;Multiple &amp;#34; arg1 &amp;#34;*&amp;#34; arg2)) (println &amp;#34;=&amp;#34;) (def mul (* arg1 arg2)) (println mul) ) (defn factional [n] (reduce * (range 1 (inc n)))) (println (factional 3)) Discrimination of elements in a list inc n : Increase the number by 1</description><content>&lt;h2 id="title-clojure-is-great">title: Clojure is great&lt;/h2>
&lt;h1 id="clojure">Clojure&lt;/h1>
&lt;h2 id="define-functions">define functions&lt;/h2>
&lt;p>A function can take arguments&lt;/p>
&lt;p>A function can have comments as doc&lt;/p>
&lt;p>A function will return the last statement&lt;/p>
&lt;pre tabindex="0">&lt;code>(defn hello [arg1 arg2]
&amp;#34;This is my playground of clojure&amp;#34;
(println (str &amp;#34;Multiple &amp;#34; arg1 &amp;#34;*&amp;#34; arg2))
(println &amp;#34;=&amp;#34;)
(def mul (* arg1 arg2))
(println mul)
)
(defn factional [n]
(reduce * (range 1 (inc n))))
(println (factional 3))
&lt;/code>&lt;/pre>&lt;h1 id="discrimination-of-elements-in-a-list">Discrimination of elements in a list&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;code>inc n&lt;/code> : Increase the number by 1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>range 1 n&lt;/code> Range start from 1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>reduce action list&lt;/code>:Apply the action the first and second element of a list, reducing into a new element as the head of a list. And do the same through the whole list.&lt;/p>
&lt;/li>
&lt;/ul></content></item><item><title>deploy.md</title><link>/posts/misc/deploy/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/deploy/</guid><description>title: auto git deploy A simple bash script to push your code to git # !/bin/bash set -o nounset set -o errexit echo $0 echo $* echo $$ echo &amp;#34;Will deploy your code to git server...&amp;#34; git add -A git commit -m &amp;#34;$1&amp;#34; git push -u origin $2 echo &amp;#34;Done!&amp;#34;</description><content>&lt;h2 id="title-auto-git-deploy">title: auto git deploy&lt;/h2>
&lt;h2 id="a-simple-bash-script-to-push-your-code-to-git">A simple &lt;code>bash&lt;/code> script to push your code to &lt;code>git&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># !/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -o nounset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -o errexit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;Will deploy your code to git server...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add -A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push -u origin $2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;Done!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>docker.md</title><link>/posts/docker/docker/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/docker/docker/</guid><description>Docker: Containerized Virtual Machine System for easy deploy About Docker, meaning in English is transporter on ship. You can image a docker as container.
Docker is a abstracted layer of lxc with aufs(Advanced Union File System).
Under the hard work of docker, and application can be packaged as a container, which can lay on images standarized by docker.
redis node nginx ubuntu image Docker layer lxc AUFS Kernel modules Installtion of archlinux Using Grub4dos Put the file grldr on c:\ Drive</description><content>&lt;h1 id="docker-containerized-virtual-machine-system-for-easy-deploy">Docker: Containerized Virtual Machine System for easy deploy&lt;/h1>
&lt;p>About Docker, meaning in English is transporter on ship. You can image a docker as container.&lt;/p>
&lt;p>Docker is a abstracted layer of &lt;code>lxc&lt;/code> with &lt;code>aufs&lt;/code>(Advanced Union File System).&lt;/p>
&lt;p>Under the hard work of docker, and application can be packaged as a container, which can lay on images standarized by docker.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>redis&lt;/th>
&lt;th>node&lt;/th>
&lt;th>nginx&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ubuntu image&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Docker layer&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lxc AUFS&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kernel modules&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="installtion-of-archlinux">Installtion of archlinux&lt;/h2>
&lt;ol>
&lt;li>Using Grub4dos&lt;/li>
&lt;/ol>
&lt;p>Put the file &lt;code>grldr&lt;/code> on &lt;code>c:\&lt;/code> Drive&lt;/p>
&lt;p>Edit the &lt;code>boot.ini&lt;/code> file&lt;/p>
&lt;pre tabindex="0">&lt;code>c:\grldr = &amp;#34;install arch&amp;#34;
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>Editing menulist&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>title install archlinux
root (hd0,0)
kernel (hd0,0)/vmlinuz label=ARCH-201408
initrd (hd0,0)/archiso.img
boot
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>
&lt;p>Booting pre system&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Fallback to basic shell&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Getting the &lt;code>iso&lt;/code> file to be recognized&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>The trick is to find the &lt;code>archlinux.iso&lt;/code> file and set it the &lt;code>loop&lt;/code> device&lt;/p>
&lt;p>Then link the loop device to the same label of &lt;code>Grub&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>mkdir /iso
mount -t ntfs -r /dev/sda1 /iso
modprobe loop
losetup /dev/loop6 /iso/archlnux.iso
ln -s /dev/loop6 /udisk/dev/by-label/ARCH-201408
exit
&lt;/code>&lt;/pre>&lt;ol start="6">
&lt;li>Booting real system of &lt;code>iso&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>Finnaly we go the live iso running and ready to install everything&lt;/p>
&lt;ol start="7">
&lt;li>
&lt;p>Following the normal installtion procedure&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install bootloader&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Copy the two files &lt;code>vmlinuz-linux&lt;/code> and &lt;code>initramfs-linux.img&lt;/code> from &lt;code>archlinux&lt;/code> system to &lt;code>C:&lt;/code> Drive&lt;/p>
&lt;p>These two files will be used to preload&lt;/p>
&lt;pre tabindex="0">&lt;code>title archlinux
root (hd0,0)
kernel (hd0,0)/vmlinuz-linux ro vga=791
initrd (hd0,0)/initramfs-linux.img
boot
&lt;/code>&lt;/pre>&lt;h2 id="installtion-of-docker">Installtion of Docker&lt;/h2>
&lt;pre tabindex="0">&lt;code>pacman -S docker
docker -d &amp;amp;
docker pull ubuntu:latest
docker search redis
docker run ubuntu /bin/echo hello world
docker run -i -t ubuntu /bin/bash
docker run -p 6379:6379 redis /usr/local/bin/redis-server
docker ps -a
docker ps
docker stop ubuntu
docker rm ubuntu
docker login
docker push -m &amp;#34;Updated&amp;#34; -t me/ubuntu ubuntu
&lt;/code>&lt;/pre>&lt;h2 id="maniy-popular-images">maniy popular images&lt;/h2>
&lt;blockquote>
&lt;p>alpine
debian
nginx&lt;/p>
&lt;/blockquote>
&lt;h2 id="some-common-dockerfiles">some common dockerfiles&lt;/h2>
&lt;h4 id="run-a-git-server-in-a-container">Run a git server in a container.&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># docker run --rm -it -p 1234:22 \&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># -e DEBUG=true \&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># -e &amp;#34;PUBKEY=$(cat ~/.ssh/id_ed25519.pub)&amp;#34; \&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># --name gitserver \&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># jess/gitserver&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> alpine&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">MAINTAINER&lt;/span>&lt;span style="color:#e6db74"> xingwenju&amp;lt;linuxing3@qq.com&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENV&lt;/span> HOME /root&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> apk --no-cache add &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> git &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> openssh &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> sed -i &lt;span style="color:#e6db74">&amp;#34;s/#PasswordAuthentication yes/PasswordAuthentication no/&amp;#34;&lt;/span> /etc/ssh/sshd_config &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> sed -i &lt;span style="color:#e6db74">&amp;#34;s/#PubkeyAuthentication yes/PubkeyAuthentication yes/&amp;#34;&lt;/span> /etc/ssh/sshd_config &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> echo -e &lt;span style="color:#e6db74">&amp;#34;AllowUsers git\n&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/ssh/sshd_config &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> echo -e &lt;span style="color:#e6db74">&amp;#34;Port 22\n&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/ssh/sshd_config &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> addgroup git &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> adduser -D -S -s /usr/bin/git-shell -h /home/git -g git git &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> mkdir -p /home/git/.ssh &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> chown -R git:git /home/git &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> passwd -u git&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENV&lt;/span> HOME /home/git&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">EXPOSE&lt;/span>&lt;span style="color:#e6db74"> 22&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> $HOME&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> ./start.sh /&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> create_repo /usr/bin/create_repo&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENTRYPOINT&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;/start.sh&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">CMD&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;/usr/sbin/sshd&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;-D&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;-e&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;-f&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;/etc/ssh/sshd_config&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="run-a-vncserver-in-a-container">Run a vncserver in a container&lt;/h4>
&lt;pre tabindex="0">&lt;code>FROM debian:stretch
MAINTAINER xingwenju&amp;lt;linuxing3@qq.com&amp;gt;
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
libgssapi-krb5-2 \
rdesktop \
--no-install-recommends \
&amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*
ENTRYPOINT [ &amp;#34;rdesktop&amp;#34; ]
&lt;/code>&lt;/pre>&lt;h5 id="my-iamges">My iamges&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>zixia/wechaty latest 6983abd102f3 &lt;span style="color:#ae81ff">5&lt;/span> days ago 1.19GB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mhart/alpine-node latest 84e8c92ba0a8 &lt;span style="color:#ae81ff">2&lt;/span> weeks ago 66.8MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jare/vim-bundle latest cdac66b264c1 &lt;span style="color:#ae81ff">3&lt;/span> weeks ago 291MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>continuumio/anaconda3 latest 279ba92400be &lt;span style="color:#ae81ff">3&lt;/span> months ago 3.05GB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alpine latest 76da55c8019d &lt;span style="color:#ae81ff">5&lt;/span> months ago 3.97MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jare/drop-in latest 6a02f36eb456 &lt;span style="color:#ae81ff">12&lt;/span> months ago 438MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jare/go-tools latest 0070db6a3e96 &lt;span style="color:#ae81ff">12&lt;/span> months ago 566MB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>express.md</title><link>/posts/nodejs/express/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/express/</guid><description>Express Fast, unopinionated, minimalist web framework for node.
[![NPM Version][npm-image]][npm-url] [![NPM Downloads][downloads-image]][downloads-url] [![Linux Build][travis-image]][travis-url] [![Windows Build][appveyor-image]][appveyor-url] [![Test Coverage][coveralls-image]][coveralls-url]
var express = require(&amp;#39;express&amp;#39;) var app = express() app.get(&amp;#39;/&amp;#39;, function (req, res) { res.send(&amp;#39;Hello World&amp;#39;) }) app.listen(3000) Installation $ npm install express Features Robust routing Focus on high performance Super-high test coverage HTTP helpers (redirection, caching, etc) View system supporting 14+ template engines Content negotiation Executable for generating applications quickly Docs &amp;amp; Community PROTIP Be sure to read Migrating from 3.</description><content>&lt;h1 id="expresshttpexpressjscom">&lt;a href="http://expressjs.com/">Express&lt;/a>&lt;/h1>
&lt;p>Fast, unopinionated, minimalist web framework for &lt;a href="http://nodejs.org">node&lt;/a>.&lt;/p>
&lt;p>[![NPM Version][npm-image]][npm-url]
[![NPM Downloads][downloads-image]][downloads-url]
[![Linux Build][travis-image]][travis-url]
[![Windows Build][appveyor-image]][appveyor-url]
[![Test Coverage][coveralls-image]][coveralls-url]&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">express&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;express&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">express&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">req&lt;/span>, &lt;span style="color:#a6e22e">res&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">res&lt;/span>.&lt;span style="color:#a6e22e">send&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Hello World&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">listen&lt;/span>(&lt;span style="color:#ae81ff">3000&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="installation">Installation&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm install express
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Robust routing&lt;/li>
&lt;li>Focus on high performance&lt;/li>
&lt;li>Super-high test coverage&lt;/li>
&lt;li>HTTP helpers (redirection, caching, etc)&lt;/li>
&lt;li>View system supporting 14+ template engines&lt;/li>
&lt;li>Content negotiation&lt;/li>
&lt;li>Executable for generating applications quickly&lt;/li>
&lt;/ul>
&lt;h2 id="docs--community">Docs &amp;amp; Community&lt;/h2>
&lt;p>&lt;strong>PROTIP&lt;/strong> Be sure to read &lt;a href="https://github.com/strongloop/express/wiki/Migrating-from-3.x-to-4.x">Migrating from 3.x to 4.x&lt;/a> as well as &lt;a href="https://github.com/strongloop/express/wiki/New-features-in-4.x">New features in 4.x&lt;/a>.&lt;/p>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;p>The quickest way to get started with express is to utilize the executable &lt;a href="https://github.com/expressjs/generator">&lt;code>express(1)&lt;/code>&lt;/a> to generate an application as shown below:&lt;/p>
&lt;p>Install the executable. The executable&amp;rsquo;s major version will match Express&amp;rsquo;s:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm install -g express-generator@4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ express /tmp/foo &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd /tmp/foo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install dependencies:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="philosophy">Philosophy&lt;/h2>
&lt;p>The Express philosophy is to provide small, robust tooling for HTTP servers, making
it a great solution for single page applications, web sites, hybrids, or public
HTTP APIs.&lt;/p>
&lt;p>Express does not force you to use any specific ORM or template engine. With support for over
14 template engines via &lt;a href="https://github.com/tj/consolidate.js">Consolidate.js&lt;/a>,
you can quickly craft your perfect framework.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>To view the examples, clone the Express repo and install the dependencies:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone git://github.com/strongloop/express.git --depth &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd express
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then run whichever example you want:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ node examples/content-negotiation
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tests">Tests&lt;/h2>
&lt;p>To run the test suite, first install the dependencies, then run &lt;code>npm test&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ npm test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="people">People&lt;/h2>
&lt;p>The original author of Express is &lt;a href="https://github.com/tj">TJ Holowaychuk&lt;/a> [![TJ&amp;rsquo;s Gratipay][gratipay-image-visionmedia]][gratipay-url-visionmedia]&lt;/p>
&lt;p>The current lead maintainer is &lt;a href="https://github.com/dougwilson">Douglas Christopher Wilson&lt;/a> [![Doug&amp;rsquo;s Gratipay][gratipay-image-dougwilson]][gratipay-url-dougwilson]&lt;/p>
&lt;p>&lt;a href="https://github.com/strongloop/express/graphs/contributors">List of all contributors&lt;/a>&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>&lt;a href="LICENSE">MIT&lt;/a>&lt;/p></content></item><item><title>game2048.md</title><link>/posts/game/game2048/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/game/game2048/</guid><description>2048游戏 基本逻辑 -- move cell Matrix = {} if(touched) then --check direction if direction=left then i = curCell k = index + 1 if M[i] == M[j] then M[i] = M[i] + M[j] M[j] = 0 else M[i] = idle M[j] = idle end end end -- init matrix with with fill cell with 0 for i=1,4 do M[i] = {} for j=1,4 do M[i][j] = 0 end end -- fill cell with random(2,4)</description><content>&lt;h1 id="2048游戏">2048游戏&lt;/h1>
&lt;h2 id="基本逻辑">基本逻辑&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- move cell&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Matrix &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(touched) &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--check direction&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> direction&lt;span style="color:#f92672">=&lt;/span>left &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#f92672">=&lt;/span> curCell
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#f92672">=&lt;/span> index &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> M[i] &lt;span style="color:#f92672">==&lt;/span> M[j] &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M[i] &lt;span style="color:#f92672">=&lt;/span> M[i] &lt;span style="color:#f92672">+&lt;/span> M[j]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M[j] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M[i] &lt;span style="color:#f92672">=&lt;/span> idle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M[j] &lt;span style="color:#f92672">=&lt;/span> idle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- init matrix with with fill cell with 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M[i] &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M[i][j] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- fill cell with random(2,4)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>git.md</title><link>/posts/misc/git/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/git/</guid><description>my git notes generally I use git for save credential [credential] helper = store [user] name = name email = email [origin] master = url</description><content>&lt;h1 id="my-git-notes">my git notes&lt;/h1>
&lt;h2 id="generally-i-use-git-for">generally I use git for&lt;/h2>
&lt;h3 id="save-credential">save credential&lt;/h3>
&lt;pre tabindex="0">&lt;code>[credential]
helper = store
[user]
name = name
email = email
[origin]
master = url
&lt;/code>&lt;/pre></content></item><item><title>goagent.md</title><link>/posts/misc/goagent/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/goagent/</guid><description>title: Goagent on Archlinux Configuring goagent in Archlinux Install pacman -S goagent Install certificates mkdir /usr/share/ca-certificates/goagent cp /usr/share/goagent/local/CA.crt /usr/share/ca-certificates/goagent/GoAgent.crt echo &amp;#39;goagent/GoAgent.crt&amp;#39; &amp;gt;&amp;gt; /etc/ca-certificates.conf update-ca-certificates Configure /etc/goagent [gae] appid = you appid [proxy] enable = 1 autodetect = 1 host = 127.0.0.1 port = 3127 Note: this [proxy] is the father proxy for goagent since I&amp;rsquo;m behind a http proxy of my company Start it! systemctl start goagent systemctl enable goagent The full goagent.</description><content>&lt;h2 id="title-goagent-on-archlinux">title: Goagent on Archlinux&lt;/h2>
&lt;h1 id="configuring-goagent-in-archlinux">Configuring &lt;code>goagent&lt;/code> in Archlinux&lt;/h1>
&lt;h2 id="install">Install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pacman -S goagent
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="install-certificates">Install certificates&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>mkdir /usr/share/ca-certificates/goagent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp /usr/share/goagent/local/CA.crt /usr/share/ca-certificates/goagent/GoAgent.crt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#39;goagent/GoAgent.crt&amp;#39;&lt;/span> &amp;gt;&amp;gt; /etc/ca-certificates.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>update-ca-certificates
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configure-etcgoagent">Configure &lt;code>/etc/goagent&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>gae&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>appid &lt;span style="color:#f92672">=&lt;/span> you appid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>proxy&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autodetect &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>host &lt;span style="color:#f92672">=&lt;/span> 127.0.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3127&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Note: this &lt;code>[proxy]&lt;/code> is the father proxy for goagent since I&amp;rsquo;m behind a http proxy of my company&lt;/li>
&lt;/ul>
&lt;h2 id="start-it">Start it!&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>systemctl start goagent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl enable goagent
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-full-goagentinifor-being-overwitten">The full &lt;code>goagent.ini&lt;/code>,for being overwitten&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>listen&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip &lt;span style="color:#f92672">=&lt;/span> 127.0.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8087&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>visible &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debuginfo &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>gae&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>appid &lt;span style="color:#f92672">=&lt;/span> goagent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path &lt;span style="color:#f92672">=&lt;/span> /2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mode &lt;span style="color:#f92672">=&lt;/span> https
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>profile &lt;span style="color:#f92672">=&lt;/span> ipv4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>obfuscate &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>validate &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>transport &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>options &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>regions &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>iplist&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>google_cn &lt;span style="color:#f92672">=&lt;/span> www.google.cn|www.g.cn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>google_hk &lt;span style="color:#f92672">=&lt;/span> www.google.com|mail.google.com|www.google.com.hk|www.google.com.tw|www.l.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>google_talk &lt;span style="color:#f92672">=&lt;/span>talk.google.com|talk.l.google.com|talkx.l.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>google_ipv6 &lt;span style="color:#f92672">=&lt;/span> 2404:6800:4005:c00::64|2404:6800:4005:c00::65|2404:6800:4005:c00::5e|2404:6800:4005:c00::67|2404:6800:4005:c00::2f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;google_tw &lt;span style="color:#f92672">=&lt;/span> www.google.com.tw|www.google.com.sg|www.google.co.jp|www.google.sg|www.google.cat|mail.google.com|mail.l.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>ipv4/hosts&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mtalk.google.com &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>talk.google.com &lt;span style="color:#f92672">=&lt;/span> google_talk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>talk.l.google.com &lt;span style="color:#f92672">=&lt;/span> google_talk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>talkx.l.google.com &lt;span style="color:#f92672">=&lt;/span> google_talk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.google.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.google.com.hk &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googleapis.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.android.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.appspot.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googletagservices.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googlegroups.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googlesource.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googleusercontent.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.google-analytics.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googlecode.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.gstatic.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.ggpht.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.dropbox.com:443 &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.box.com:443 &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.copy.com:443 &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; .c.youtube.com &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; .youtube.com &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; .googlevideo.com &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; https?://www&lt;span style="color:#ae81ff">\.&lt;/span>youtube&lt;span style="color:#ae81ff">\.&lt;/span>com/watch &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; https?://www&lt;span style="color:#ae81ff">\.&lt;/span>example&lt;span style="color:#ae81ff">\.&lt;/span>com/.+&lt;span style="color:#ae81ff">\.&lt;/span>html &lt;span style="color:#f92672">=&lt;/span> file:///C:/README.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>ipv4/http&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crlfsites &lt;span style="color:#f92672">=&lt;/span> scholar.google.com|.appspot.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>withgae &lt;span style="color:#f92672">=&lt;/span> play.google.com|wenda.google.com.hk|clients.google.com|clients1.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>forcehttps &lt;span style="color:#f92672">=&lt;/span> www.youtube.com|www.google.com|www.google.com.hk|code.google.com|plus.google.com|plus.url.google.com|groups.google.com|docs.google.com|s1.googleusercontent.com|s2.googleusercontent.com|images1-focus-opensocial.googleusercontent.com|images2-focus-opensocial.googleusercontent.com|images3-focus-opensocial.googleusercontent.com|lh0.googleusercontent.com|lh1.googleusercontent.com|lh2.googleusercontent.com|lh3.googleusercontent.com|lh4.googleusercontent.com|lh5.googleusercontent.com|lh6.googleusercontent.com|lh7.googleusercontent.com|lh8.googleusercontent.com|lh9.googleusercontent.com|lh10.googleusercontent.com|lh11.googleusercontent.com|lh12.googleusercontent.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fakehttps &lt;span style="color:#f92672">=&lt;/span> plus.google.com|s.ytimg.com|ssl.gstatic.com|fonts.googleapis.com|mail-attachment.googleusercontent.com|webcache.googleusercontent.com|s1.googleusercontent.com|s2.googleusercontent.com|images1-focus-opensocial.googleusercontent.com|images2-focus-opensocial.googleusercontent.com|images3-focus-opensocial.googleusercontent.com|lh0.googleusercontent.com|lh1.googleusercontent.com|lh2.googleusercontent.com|lh3.googleusercontent.com|lh4.googleusercontent.com|lh5.googleusercontent.com|lh6.googleusercontent.com|lh7.googleusercontent.com|lh8.googleusercontent.com|lh9.googleusercontent.com|lh10.googleusercontent.com|lh11.googleusercontent.com|lh12.googleusercontent.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>ipv6/hosts&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>talk.google.com &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>talk.l.google.com &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>talkx.l.google.com &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.google.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googleusercontent.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googleapis.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.google-analytics.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googlecode.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.google.com.hk &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googlegroups.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.googlesource.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.appspot.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.android.com &lt;span style="color:#f92672">=&lt;/span> google_ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.dropbox.com:443 &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.box.com:443 &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.copy.com:443 &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; .youtube.com &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; .googlevideo.com &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>; https?://www&lt;span style="color:#ae81ff">\.&lt;/span>youtube&lt;span style="color:#ae81ff">\.&lt;/span>com/watch &lt;span style="color:#f92672">=&lt;/span> google_hk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>ipv6/http&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dns &lt;span style="color:#f92672">=&lt;/span> 2001:4860:4860::8888|2001:4860:4860::8844|2001:470:20::2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crlfsites &lt;span style="color:#f92672">=&lt;/span> .youtube.com|.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>withgae &lt;span style="color:#f92672">=&lt;/span> play.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>forcehttps &lt;span style="color:#f92672">=&lt;/span> code.google.com|groups.google.com|docs.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fakehttps &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>pac&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ip &lt;span style="color:#f92672">=&lt;/span> 0.0.0.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8086&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>file &lt;span style="color:#f92672">=&lt;/span> proxy.pac
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>admode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adblock &lt;span style="color:#f92672">=&lt;/span> https://easylist-downloads.adblockplus.org/easylistchina.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gfwlist &lt;span style="color:#f92672">=&lt;/span> https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>expired &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">86400&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>php&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crlf &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>validate &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>listen &lt;span style="color:#f92672">=&lt;/span> 127.0.0.1:8088
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fetchserver &lt;span style="color:#f92672">=&lt;/span> http://.com/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>usehosts &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>proxy&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autodetect &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>host &lt;span style="color:#f92672">=&lt;/span> 127.0.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3127&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>autorange&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hosts &lt;span style="color:#f92672">=&lt;/span> *.c.youtube.com|*.atm.youku.com|*.googlevideo.com|*av.vimeo.com|smile-*.nicovideo.jp|video.*.fbcdn.net|s*.last.fm|x*.last.fm|*.x.xvideos.com|*.edgecastcdn.net|*.d.rncdn3.com|cdn*.public.tube8.com|videos.flv*.redtubefiles.com|cdn*.public.extremetube.phncdn.com|cdn*.video.pornhub.phncdn.com|*.mms.vlog.xuite.net|vs*.thisav.com|archive.rthk.hk|video*.modimovie.com|*.c.docs.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endswith &lt;span style="color:#f92672">=&lt;/span> .f4v|.flv|.hlv|.m4v|.mp4|.mp3|.ogg|.avi|.dmg|.iso
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>noendswith &lt;span style="color:#f92672">=&lt;/span> .xml|.json|.html|.php|.py|.js|.css|.jpg|.jpeg|.png|.gif|.ico|.webp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>threads &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>maxsize &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1048576&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>waitsize &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">524288&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bufsize &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8192&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>dns&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>listen &lt;span style="color:#f92672">=&lt;/span> 127.0.0.1:53
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>servers &lt;span style="color:#f92672">=&lt;/span> 8.8.8.8|8.8.4.4|114.114.114.114|114.114.115.115
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>blacklist &lt;span style="color:#f92672">=&lt;/span> 1.1.1.1|255.255.255.255|74.125.127.102|74.125.155.102|74.125.39.102|74.125.39.113|209.85.229.138|4.36.66.178|8.7.198.45|37.61.54.158|46.82.174.68|59.24.3.173|64.33.88.161|64.33.99.47|64.66.163.251|65.104.202.252|65.160.219.113|66.45.252.237|72.14.205.104|72.14.205.99|78.16.49.15|93.46.8.89|128.121.126.139|159.106.121.75|169.132.13.103|192.67.198.6|202.106.1.2|202.181.7.85|203.161.230.171|203.98.7.65|207.12.88.98|208.56.31.43|209.145.54.50|209.220.30.174|209.36.73.33|209.85.229.138|211.94.66.147|213.169.251.35|216.221.188.182|216.234.179.13|243.185.187.3|243.185.187.39
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcpover &lt;span style="color:#f92672">=&lt;/span> .youtube.com|.ytimg.com|.googlevideo.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>useragent&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>string &lt;span style="color:#f92672">=&lt;/span> Mozilla/5.0 &lt;span style="color:#f92672">(&lt;/span>iPhone; U; CPU like Mac OS X; en&lt;span style="color:#f92672">)&lt;/span> AppleWebKit/420+ &lt;span style="color:#f92672">(&lt;/span>KHTML, like Gecko&lt;span style="color:#f92672">)&lt;/span> Version/3.0 Mobile/1A543a Safari/419.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>fetchmax&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>local &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>love&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tip &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">\u&lt;/span>8bf7&lt;span style="color:#ae81ff">\u&lt;/span>5173&lt;span style="color:#ae81ff">\u&lt;/span>6ce8&lt;span style="color:#ae81ff">\u&lt;/span>5317&lt;span style="color:#ae81ff">\u&lt;/span>4eac&lt;span style="color:#ae81ff">\u&lt;/span>5931&lt;span style="color:#ae81ff">\u&lt;/span>5b66&lt;span style="color:#ae81ff">\u&lt;/span>513f&lt;span style="color:#ae81ff">\u&lt;/span>7ae5~~
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>hello-world.md</title><link>/posts/misc/hello-world/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/hello-world/</guid><description>title: Hello World Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.
Quick Start Create a new post $ hexo new &amp;#34;My New Post&amp;#34; More info: Writing
Run server $ hexo server More info: Server
Generate static files $ hexo generate More info: Generating</description><content>&lt;h2 id="title-hello-world">title: Hello World&lt;/h2>
&lt;p>Welcome to &lt;a href="http://hexo.io/">Hexo&lt;/a>! This is your very first post. Check &lt;a href="http://hexo.io/docs/">documentation&lt;/a> for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href="http://hexo.io/docs/troubleshooting.html">troubleshooting&lt;/a> or you can ask me on &lt;a href="https://github.com/hexojs/hexo/issues">GitHub&lt;/a>.&lt;/p>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;h3 id="create-a-new-post">Create a new post&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hexo new &lt;span style="color:#e6db74">&amp;#34;My New Post&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More info: &lt;a href="http://hexo.io/docs/writing.html">Writing&lt;/a>&lt;/p>
&lt;h3 id="run-server">Run server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hexo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More info: &lt;a href="http://hexo.io/docs/server.html">Server&lt;/a>&lt;/p>
&lt;h3 id="generate-static-files">Generate static files&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hexo generate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More info: &lt;a href="http://hexo.io/docs/generating.html">Generating&lt;/a>&lt;/p>
&lt;h3 id="deploy-to-remote-sites">Deploy to remote sites&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hexo deploy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More info: &lt;a href="http://hexo.io/docs/deployment.html">Deployment&lt;/a>&lt;/p></content></item><item><title>hexo.md</title><link>/posts/nodejs/hexo/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/hexo/</guid><description>Hello World Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.
Quick Start Create a new post $ hexo new &amp;#34;My New Post&amp;#34; More info: Writing
Run server $ hexo server More info: Server
Generate static files $ hexo generate More info: Generating</description><content>&lt;h1 id="hello-world">Hello World&lt;/h1>
&lt;p>Welcome to &lt;a href="http://hexo.io/">Hexo&lt;/a>! This is your very first post. Check &lt;a href="http://hexo.io/docs/">documentation&lt;/a> for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href="http://hexo.io/docs/troubleshooting.html">troubleshooting&lt;/a> or you can ask me on &lt;a href="https://github.com/hexojs/hexo/issues">GitHub&lt;/a>.&lt;/p>
&lt;h2 id="quick-start">Quick Start&lt;/h2>
&lt;h3 id="create-a-new-post">Create a new post&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hexo new &lt;span style="color:#e6db74">&amp;#34;My New Post&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More info: &lt;a href="http://hexo.io/docs/writing.html">Writing&lt;/a>&lt;/p>
&lt;h3 id="run-server">Run server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hexo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More info: &lt;a href="http://hexo.io/docs/server.html">Server&lt;/a>&lt;/p>
&lt;h3 id="generate-static-files">Generate static files&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hexo generate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More info: &lt;a href="http://hexo.io/docs/generating.html">Generating&lt;/a>&lt;/p>
&lt;h3 id="deploy-to-remote-sites">Deploy to remote sites&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hexo deploy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More info: &lt;a href="http://hexo.io/docs/deployment.html">Deployment&lt;/a>&lt;/p></content></item><item><title>Home.md</title><link>/posts/misc/home/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/home/</guid><description>title: Home Welcome to the lua101 wiki! In this wiki I note lua development experience Pages 贪吃蛇一 贪吃蛇二 贪吃蛇三 Quick-cocos2d-x开发学习笔记 openresty game2048 added a gitignore /lua101.wiki</description><content>&lt;h2 id="title-home">title: Home&lt;/h2>
&lt;h1 id="welcome-to-the-lua101-wiki">Welcome to the lua101 wiki!&lt;/h1>
&lt;h2 id="in-this-wiki-i-note-lua-development-experience">In this wiki I note lua development experience&lt;/h2>
&lt;h2 id="pages">Pages&lt;/h2>
&lt;h3 id="贪吃蛇一snake-game1">&lt;a href="snake-game1">贪吃蛇一&lt;/a>&lt;/h3>
&lt;h3 id="贪吃蛇二snake-game2">&lt;a href="snake-game2">贪吃蛇二&lt;/a>&lt;/h3>
&lt;h3 id="贪吃蛇三snake-game3">&lt;a href="snake-game3">贪吃蛇三&lt;/a>&lt;/h3>
&lt;h3 id="quick-cocos2d-x开发学习笔记quick-cocos2dx">&lt;a href="Quick-Cocos2dx">Quick-cocos2d-x开发学习笔记&lt;/a>&lt;/h3>
&lt;h3 id="openrestyopenresty">&lt;a href="openresty">openresty&lt;/a>&lt;/h3>
&lt;h3 id="game2048game2048">&lt;a href="game2048">game2048&lt;/a>&lt;/h3>
&lt;h2 id="added-a-gitignore">added a gitignore&lt;/h2>
&lt;pre>&lt;code>/lua101.wiki
&lt;/code>&lt;/pre></content></item><item><title>ide.md</title><link>/posts/vms/ide/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/vms/ide/</guid><description>hello java public class HelloWorld{ public static void main(String[] args) { System.out.println(&amp;#34;Hello World!&amp;#34;); } } c #include&amp;lt;stdio.h&amp;gt; void main(){ int i; for (i=0;i&amp;lt;5;i++){ printf(&amp;#34;Hello World!\n&amp;#34;); } } lua print(&amp;#34;hello world&amp;#34;) python print(&amp;#34;hello world&amp;#34;) clojure ((fn [] &amp;#34;hello world&amp;#34;)) tscript class HelloWorld{ public static main():number { console.log(&amp;#34;Hello World!&amp;#34;); } } HelloWorld.main()</description><content>&lt;h1 id="hello">hello&lt;/h1>
&lt;h2 id="java">java&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">HelloWorld&lt;/span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Hello World!&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="c">c&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span>&lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>;i&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>;i&lt;span style="color:#f92672">++&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;Hello World!&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lua">lua&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="python">python&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="clojure">clojure&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-clojure" data-lang="clojure">&lt;span style="display:flex;">&lt;span>((&lt;span style="color:#66d9ef">fn &lt;/span>[] &lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tscript">tscript&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-tscript" data-lang="tscript">class HelloWorld{
public static main():number {
console.log(&amp;#34;Hello World!&amp;#34;);
}
}
HelloWorld.main()
&lt;/code>&lt;/pre></content></item><item><title>karma.md</title><link>/posts/nodejs/karma/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/karma/</guid><description>Karma A simple tool that allows you to execute JavaScript code in multiple real browsers.
The main purpose of Karma is to make your test-driven development easy, fast, and fun.
Help and Support For questions and support please use the mailing list or Gitter. The issue tracker is for bug reports and feature discussions only.
Obligatory documentation Quick questions: Longer questions: Mailing List Bug reports Issue Tracker Everything less than 140 characters: @JsKarma on Twitter When should I use Karma?</description><content>&lt;h1 id="karma">Karma&lt;/h1>
&lt;p>A simple tool that allows you to execute JavaScript code in multiple
&lt;em>real&lt;/em> browsers.&lt;/p>
&lt;blockquote>
&lt;p>The main purpose of Karma is to make your test-driven development easy,
fast, and fun.&lt;/p>
&lt;/blockquote>
&lt;h2 id="help-and-support">Help and Support&lt;/h2>
&lt;blockquote>
&lt;p>For questions and support please use the mailing list or Gitter.
The issue tracker is for bug reports and feature discussions only.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Obligatory &lt;a href="https://karma-runner.github.io">documentation&lt;/a>&lt;/li>
&lt;li>Quick questions:&lt;/li>
&lt;li>Longer questions: &lt;a href="https://groups.google.com/forum/#!forum/karma-users">Mailing List&lt;/a>&lt;/li>
&lt;li>Bug reports &lt;a href="https://github.com/karma-runner/karma/issues">Issue Tracker&lt;/a>&lt;/li>
&lt;li>Everything less than 140 characters: &lt;a href="https://twitter.com/JsKarma">@JsKarma&lt;/a> on Twitter&lt;/li>
&lt;/ul>
&lt;h2 id="when-should-i-use-karma">When should I use Karma?&lt;/h2>
&lt;ul>
&lt;li>You want to test code in &lt;em>real&lt;/em> browsers.&lt;/li>
&lt;li>You want to test code in multiple browsers (desktop, mobile,
tablets, etc.).&lt;/li>
&lt;li>You want to execute your tests locally during development.&lt;/li>
&lt;li>You want to execute your tests on a continuous integration server.&lt;/li>
&lt;li>You want to execute your tests on every save.&lt;/li>
&lt;li>You love your terminal.&lt;/li>
&lt;li>You don&amp;rsquo;t want your (testing) life to suck.&lt;/li>
&lt;li>You want to use &lt;a href="https://github.com/gotwarlost/istanbul">Istanbul&lt;/a> to automagically generate coverage
reports.&lt;/li>
&lt;li>You want to use &lt;a href="http://requirejs.org/">RequireJS&lt;/a> for your source files.&lt;/li>
&lt;/ul>
&lt;h2 id="but-i-still-want-to-use-_insert-testing-library_">But I still want to use _insert testing library_&lt;/h2>
&lt;p>Karma is not a testing framework, nor an assertion library.
Karma just launches a HTTP server, and generates the test runner HTML file you probably already know from your favourite testing framework.
So for testing purposes you can use pretty much anything you like. There are already plugins for most of the common testing frameworks:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/karma-runner/karma-jasmine">Jasmine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/karma-runner/karma-mocha">Mocha&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/karma-runner/karma-qunit">QUnit&lt;/a>&lt;/li>
&lt;li>and &lt;a href="https://www.npmjs.org/browse/keyword/karma-adapter">many others&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you can&amp;rsquo;t find an adapter for your favourite framework, don&amp;rsquo;t worry and write your own.
It&amp;rsquo;s not that hard and we are here to help.&lt;/p>
&lt;h2 id="which-browsers-can-i-use">Which Browsers can I use?&lt;/h2>
&lt;p>All the major browsers are supported, if you want to know more see the
&lt;a href="https://karma-runner.github.io/latest/config/browsers.html">browsers&lt;/a> page.&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;p>See &lt;a href="https://karma-runner.github.io/latest/intro/faq.html">FAQ&lt;/a>.&lt;/p>
&lt;h2 id="i-want-to-use-it-where-do-i-sign">I want to use it. Where do I sign?&lt;/h2>
&lt;p>You don&amp;rsquo;t need to sign anything but here are some resources to help
you to get started&amp;hellip;&lt;/p>
&lt;h3 id="obligatory-screencast">Obligatory Screencast.&lt;/h3>
&lt;p>Every serious project has a screencast, so here is ours. Just click
&lt;a href="https://www.youtube.com/watch?v=MVw8N3hTfCI">here&lt;/a> and let the show begin.&lt;/p>
&lt;h3 id="installation">Installation.&lt;/h3>
&lt;p>See &lt;a href="https://karma-runner.github.io/latest/intro/installation.html">installation&lt;/a>.&lt;/p>
&lt;h3 id="using-it">Using it.&lt;/h3>
&lt;p>See &lt;a href="https://karma-runner.github.io/latest/intro/configuration.html">configuration&lt;/a>.&lt;/p>
&lt;h2 id="this-is-so-great-i-want-to-help">This is so great. I want to help.&lt;/h2>
&lt;p>Please, see
&lt;a href="https://karma-runner.github.io/latest/dev/contributing.html">contributing&lt;/a>.&lt;/p>
&lt;h2 id="why-did-you-create-this">Why did you create this?&lt;/h2>
&lt;p>Throughout the development of &lt;a href="https://angularjs.org/">AngularJS&lt;/a>, we&amp;rsquo;ve been using &lt;a href="https://code.google.com/p/js-test-driver/">JSTD&lt;/a> for
testing. I really think that JSTD is a great idea. Unfortunately, we
had many problems with JSTD, so we decided to write our own test
runner based on the same idea. We wanted a simple tool just for
executing JavaScript tests that is both stable and fast. That&amp;rsquo;s why we
use the awesome &lt;a href="http://socket.io/">Socket.io&lt;/a> library and &lt;a href="http://nodejs.org/">Node.js&lt;/a>.&lt;/p>
&lt;h2 id="my-boss-wants-a-license-so-where-is-it">My boss wants a license. So where is it?&lt;/h2>
&lt;p>&lt;a href="./LICENSE">MIT License&lt;/a>&lt;/p></content></item><item><title>lapis_console.md</title><link>/posts/misc/lapis_console/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/lapis_console/</guid><description>title: Lapis Console Lapis Console Lapis Console is a separate project that adds an interactive console to your web application. Because Lapis runs inside of the Nginx loop, it&amp;rsquo;s not trivial to make a standard terminal based console that behaves the same way as the web application. So a console that runs inside of your browser was created, letting you reliably execute code in the same way as your web application when debugging.</description><content>&lt;h2 id="title-lapis-console">title: Lapis Console&lt;/h2>
&lt;h1 id="lapis-console">Lapis Console&lt;/h1>
&lt;p>&lt;a href="https://github.com/leafo/lapis-console">Lapis Console&lt;/a> is a separate project that adds an interactive console to
your web application. Because Lapis runs inside of the Nginx loop, it&amp;rsquo;s not
trivial to make a standard terminal based console that behaves the same way as
the web application. So a console that runs inside of your browser was created,
letting you reliably execute code in the same way as your web application when
debugging.&lt;/p>
&lt;p>&lt;img src="http://leafo.net/dump/lapis_console.png" alt="Lapis Console Screenshot" title="Screenshot of the Lapis Console exploring an object.">&lt;/p>
&lt;p>Install through LuaRocks:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ luarocks install --server&lt;span style="color:#f92672">=&lt;/span>http://rocks.moonscript.org lapis-console
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="creating-a-console">Creating A Console&lt;/h2>
&lt;h3 id="consolemakeopts">&lt;code>console.make([opts])&lt;/code>&lt;/h3>
&lt;p>Lapis console provides an action that you can insert into your application to a
route of your choosing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> lapis &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> console &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.console&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> app &lt;span style="color:#f92672">=&lt;/span> lapis.Application()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:match(&lt;span style="color:#e6db74">&amp;#34;/console&amp;#34;&lt;/span>, console.make())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">lapis = require &amp;#34;lapis&amp;#34;
console = require &amp;#34;lapis.console&amp;#34;
class extends lapis.Application
&amp;#34;/console&amp;#34;: console.make!
&lt;/code>&lt;/pre>&lt;p>Now just head to to the &lt;code>/console&lt;/code> location in your browser to use it. By
default the action that is created will only run in the &lt;code>&amp;quot;development&amp;quot;&lt;/code>
environment.&lt;/p>
&lt;p>You can set the &lt;code>env&lt;/code> option in the first argument to &lt;code>&amp;quot;all&amp;quot;&lt;/code> to enable in
every environment, or you can name an environment.&lt;/p>
&lt;blockquote>
&lt;p>Be careful about allowing access to the console, a malicious individual could
destroy your application and compromise your system if given access.&lt;/p>
&lt;/blockquote>
&lt;h2 id="tips">Tips&lt;/h2>
&lt;p>The console lets your write and execute a MoonScript program. Multiple lines
are supported.&lt;/p>
&lt;p>The &lt;code>print&lt;/code> function has been replaced in the console to print to the debug
output. You can print any type of object and the console will pretty print it.
Tables can be opened up and other types are color coded.&lt;/p>
&lt;p>Any queries that execute during the script are logged to a special portion on
the bottom of the output.&lt;/p>
&lt;p>&lt;code>@&lt;/code> is equal to the value of the request that is initiating the console. You
can use this if you are testing a method that needs a request object.&lt;/p></content></item><item><title>lapis.md</title><link>/posts/misc/lapis/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/lapis/</guid><description>title: Database Access Database Access Lapis comes with a set of classes and functions for working with PostgreSQL. In the future other databases will be directly supported. In the meantime you&amp;rsquo;re free to use other OpenResty database drivers, you just won&amp;rsquo;t have access to Lapis&amp;rsquo; query API.
Every query is performed asynchronously through the OpenResty cosocket API. A request will yield and resume automatically so there&amp;rsquo;s no need to code with callbacks, queries can be written sequentially as if they were in a synchronous environment.</description><content>&lt;h2 id="title-database-access">title: Database Access&lt;/h2>
&lt;h1 id="database-access">Database Access&lt;/h1>
&lt;p>Lapis comes with a set of classes and functions for working with
&lt;a href="http://www.postgresql.org/">PostgreSQL&lt;/a>. In the future other databases will be
directly supported. In the meantime you&amp;rsquo;re free to use other OpenResty database
drivers, you just won&amp;rsquo;t have access to Lapis&amp;rsquo; query API.&lt;/p>
&lt;p>Every query is performed asynchronously through the &lt;a href="http://wiki.nginx.org/HttpLuaModule#ngx.socket.tcp">OpenResty cosocket
API&lt;/a>. A request will yield
and resume automatically so there&amp;rsquo;s no need to code with callbacks, queries can
be written sequentially as if they were in a synchronous environment. Additionally
connections to the server are automatically pooled for optimal performance.&lt;/p>
&lt;p>&lt;a href="https://github.com/leafo/pgmoon">&lt;em>pgmoon&lt;/em>&lt;/a> is the driver used in Lapis for
communicating with PostgreSQL. It has the advantage of being able to be used
within OpenResty&amp;rsquo;s cosocket API in addition to on the command line using
LuaSocket&amp;rsquo;s synchronous API.&lt;/p>
&lt;h2 id="establishing-a-connection">Establishing A Connection&lt;/h2>
&lt;p>The first step is to define the configuration for our server in the &lt;code>postgres&lt;/code>
block in our &lt;!-- raw HTML omitted -->&lt;code>config.moon&lt;/code>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;code>config.lua&lt;/code>&lt;!-- raw HTML omitted --> file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- config.lua&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config(&lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> postgres &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;pgmoon&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;127.0.0.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;pg_user&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;the_password&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> database &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;my_database&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">-- config.moon
config &amp;#34;development&amp;#34;, -&amp;gt;
postgres -&amp;gt;
backend &amp;#34;pgmoon&amp;#34;
host &amp;#34;127.0.0.1&amp;#34;
user &amp;#34;pg_user&amp;#34;
password &amp;#34;the_password&amp;#34;
database &amp;#34;my_database&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;code>host&lt;/code> defaults to &lt;code>127.0.0.1&lt;/code> and &lt;code>user&lt;/code> defaults to &lt;code>postgres&lt;/code>, so you can
leave those fields out if they aren&amp;rsquo;t different from the defaults. If a
non-default port is required it can be appended to the &lt;code>host&lt;/code> with colon
syntax: &lt;code>my_host:1234&lt;/code> (Otherwise &lt;code>5432&lt;/code>, the PostgreSQL default, is used).&lt;/p>
&lt;p>You&amp;rsquo;re now ready to start making queries.&lt;/p>
&lt;h2 id="making-a-query">Making a Query&lt;/h2>
&lt;p>There are two ways to make queries:&lt;/p>
&lt;ol>
&lt;li>The raw query interface is a collection of functions to help you write SQL.&lt;/li>
&lt;li>The &lt;a href="#models">&lt;code>Model&lt;/code> class&lt;/a> is a wrapper around a Lua table that helps you synchronize it with a row in a database table.&lt;/li>
&lt;/ol>
&lt;p>The &lt;code>Model&lt;/code> class is the preferred way to interact with the database. The raw
query interface is for achieving things the &lt;code>Model&lt;/code> class in unable to do
easily.&lt;/p>
&lt;p>Here&amp;rsquo;s an example of the raw query interface:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> lapis &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> db &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> app &lt;span style="color:#f92672">=&lt;/span> lapis.Application()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:match(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> res &lt;span style="color:#f92672">=&lt;/span> db.query(&lt;span style="color:#e6db74">&amp;#34;select * from my_table where id = ?&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;ok!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">lapis = require &amp;#34;lapis&amp;#34;
db = require &amp;#34;lapis.db&amp;#34;
class extends lapis.Application
&amp;#34;/&amp;#34;: =&amp;gt;
res = db.query &amp;#34;select * from my_table where id = ?&amp;#34;, 10
&amp;#34;ok!&amp;#34;
&lt;/code>&lt;/pre>&lt;p>And the same query represented with the &lt;code>Model&lt;/code> class:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> lapis &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Model &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.model&amp;#34;&lt;/span>).Model
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> app &lt;span style="color:#f92672">=&lt;/span> lapis.Application()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> MyTable &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;my_table&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:match(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> row &lt;span style="color:#f92672">=&lt;/span> MyTable:find(&lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;ok!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">lapis = require &amp;#34;lapis&amp;#34;
import Model from require &amp;#34;lapis.db.model&amp;#34;
class MyTable extends Model
class extends lapis.Application
&amp;#34;/&amp;#34;: =&amp;gt;
&amp;lt;!r
--row = MyTable\find 10--&amp;gt;
&amp;#34;ok!&amp;#34;
&lt;/code>&lt;/pre>&lt;p>By default all queries will log to the Nginx notice log. You&amp;rsquo;ll be able to see
each query as it happens.&lt;/p>
&lt;h2 id="query-interface">Query Interface&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> db &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db = require &amp;#34;lapis.db&amp;#34;
&lt;/code>&lt;/pre>&lt;p>The &lt;code>db&lt;/code> module provides the following functions:&lt;/p>
&lt;h3 id="queryquery-params">&lt;code>query(query, params...)&lt;/code>&lt;/h3>
&lt;p>Performs a raw query. Returns the result set if successful, returns &lt;code>nil&lt;/code> if
failed.&lt;/p>
&lt;p>The first argument is the query to perform. If the query contains any &lt;code>?&lt;/code>s then
they are replaced in the order they appear with the remaining arguments. The
remaining arguments are escaped with &lt;code>escape_literal&lt;/code> before being
interpolated, making SQL injection impossible.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> res
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res &lt;span style="color:#f92672">=&lt;/span> db.query(&lt;span style="color:#e6db74">&amp;#34;SELECT * FROM hello&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res &lt;span style="color:#f92672">=&lt;/span> db.query(&lt;span style="color:#e6db74">&amp;#34;UPDATE things SET color = ?&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;blue&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res &lt;span style="color:#f92672">=&lt;/span> db.query(&lt;span style="color:#e6db74">&amp;#34;INSERT INTO cats (age, name, alive) VALUES (?, ?, ?)&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">25&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;dogman&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">res = db.query &amp;#34;SELECT * FROM hello&amp;#34;
res = db.query &amp;#34;UPDATE things SET color = ?&amp;#34;, &amp;#34;blue&amp;#34;
res = db.query &amp;#34;INSERT INTO cats (age, name, alive) VALUES (?, ?, ?)&amp;#34;, 25, &amp;#34;dogman&amp;#34;, true
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> hello
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">UPDATE&lt;/span> things &lt;span style="color:#66d9ef">SET&lt;/span> color &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;blue&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> cats (age, name, alive) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#ae81ff">25&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;dogman&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">TRUE&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A query that fails to execute will raise a Lua error. The error will contain
the message from PostgreSQL along with the query.&lt;/p>
&lt;h3 id="selectquery-params">&lt;code>select(query, params...)&lt;/code>&lt;/h3>
&lt;p>The same as &lt;code>query&lt;/code> except it appends &lt;code>&amp;quot;SELECT&amp;quot;&lt;/code> to the front of the query.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> res &lt;span style="color:#f92672">=&lt;/span> db.select(&lt;span style="color:#e6db74">&amp;#34;* from hello where active = ?&amp;#34;&lt;/span>, db.FALSE)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">res = db.select &amp;#34;* from hello where active = ?&amp;#34;, db.FALSE
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> hello &lt;span style="color:#66d9ef">where&lt;/span> active &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">FALSE&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="inserttable-values-returning">&lt;code>insert(table, values, returning...)&lt;/code>&lt;/h3>
&lt;p>Inserts a row into &lt;code>table&lt;/code>. &lt;code>values&lt;/code> is a Lua table of column names and values.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>db.insert(&lt;span style="color:#e6db74">&amp;#34;my_table&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> age &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello World&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db.insert &amp;#34;my_table&amp;#34;, {
age: 10
name: &amp;#34;Hello World&amp;#34;
}
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;my_table&amp;#34;&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#ae81ff">10&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Hello World&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A list of column names to be returned can be given after the value table:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> res &lt;span style="color:#f92672">=&lt;/span> db.insert(&lt;span style="color:#e6db74">&amp;#34;some_other_table&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello World&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}, &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">res = db.insert &amp;#34;some_other_table&amp;#34;, {
name: &amp;#34;Hello World&amp;#34;
}, &amp;#34;id&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;some_other_table&amp;#34;&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Hello World&amp;#39;&lt;/span>) RETURNING &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="updatetable-values-conditions-params">&lt;code>update(table, values, conditions, params...)&lt;/code>&lt;/h3>
&lt;p>Updates &lt;code>table&lt;/code> with &lt;code>values&lt;/code> on all rows that match &lt;code>conditions&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>db.update(&lt;span style="color:#e6db74">&amp;#34;the_table&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Dogbert 2.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> active &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db.update &amp;#34;the_table&amp;#34;, {
name: &amp;#34;Dogbert 2.0&amp;#34;
active: true
}, {
id: 100
}
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">UPDATE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;the_table&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Dogbert 2.0&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;active&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TRUE&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>conditions&lt;/code> can also be a string, and &lt;code>params&lt;/code> will be interpolated into it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>db.update(&lt;span style="color:#e6db74">&amp;#34;the_table&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count &lt;span style="color:#f92672">=&lt;/span> db.raw(&lt;span style="color:#e6db74">&amp;#34;count + 1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}, &lt;span style="color:#e6db74">&amp;#34;count &amp;lt; ?&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db.update &amp;#34;the_table&amp;#34;, {
count: db.raw&amp;#34;count + 1&amp;#34;
}, &amp;#34;count &amp;lt; ?&amp;#34;, 10
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">UPDATE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;the_table&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#e6db74">&amp;#34;count&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">count&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#66d9ef">count&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deletetable-conditions-params">&lt;code>delete(table, conditions, params...)&lt;/code>&lt;/h3>
&lt;p>Deletes rows from &lt;code>table&lt;/code> that match &lt;code>conditions&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>db.delete(&lt;span style="color:#e6db74">&amp;#34;cats&amp;#34;&lt;/span>, { name: &lt;span style="color:#e6db74">&amp;#34;Roo&amp;#34;&lt;/span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db.delete &amp;#34;cats&amp;#34;, name: &amp;#34;Roo&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DELETE&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#34;cats&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Roo&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>conditions&lt;/code> can also be a string&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db.delete(&amp;#34;cats&amp;#34;, &amp;#34;name = ?&amp;#34;, &amp;#34;Gato&amp;#34;)
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db.delete &amp;#34;cats&amp;#34;, &amp;#34;name = ?&amp;#34;, &amp;#34;Gato&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DELETE&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#34;cats&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Gato&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rawstr">&lt;code>raw(str)&lt;/code>&lt;/h3>
&lt;p>Returns a special value that will be inserted verbatim into the query without being
escaped:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>db.update(&lt;span style="color:#e6db74">&amp;#34;the_table&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count &lt;span style="color:#f92672">=&lt;/span> db.raw(&lt;span style="color:#e6db74">&amp;#34;count + 1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>db.select(&lt;span style="color:#e6db74">&amp;#34;* from another_table where x = ?&amp;#34;&lt;/span>, db.raw(&lt;span style="color:#e6db74">&amp;#34;now()&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db.update &amp;#34;the_table&amp;#34;, {
count: db.raw&amp;#34;count + 1&amp;#34;
}
db.select &amp;#34;* from another_table where x = ?&amp;#34;, db.raw&amp;#34;now()&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">UPDATE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;the_table&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#e6db74">&amp;#34;count&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">count&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> another_table &lt;span style="color:#66d9ef">where&lt;/span> x &lt;span style="color:#f92672">=&lt;/span> now()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="escape_literalvalue">&lt;code>escape_literal(value)&lt;/code>&lt;/h3>
&lt;p>Escapes a value for use in a query. A value is any type that can be stored in a
column. Numbers, strings, and booleans will be escaped accordingly.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> escaped &lt;span style="color:#f92672">=&lt;/span> db.escape_literal(value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> res &lt;span style="color:#f92672">=&lt;/span> db.query(&lt;span style="color:#e6db74">&amp;#34;select * from hello where id = &amp;#34;&lt;/span> &lt;span style="color:#f92672">..&lt;/span> escaped&lt;span style="color:#e6db74">&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">escaped = db.escape_literal value
res = db.query &amp;#34;select * from hello where id = #{escaped}&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;code>escape_literal&lt;/code> is not appropriate for escaping column or table names. See
&lt;code>escape_identifier&lt;/code>.&lt;/p>
&lt;h3 id="escape_identifierstr">&lt;code>escape_identifier(str)&lt;/code>&lt;/h3>
&lt;p>Escapes a string for use in a query as an identifier. An identifier is a column
or table name.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> table_name &lt;span style="color:#f92672">=&lt;/span> db.escape_identifier(&lt;span style="color:#e6db74">&amp;#34;table&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> res &lt;span style="color:#f92672">=&lt;/span> db.query(&lt;span style="color:#e6db74">&amp;#34;select * from &amp;#34;&lt;/span> &lt;span style="color:#f92672">..&lt;/span> table_name)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">table_name = db.escape_identifier &amp;#34;table&amp;#34;
res = db.query &amp;#34;select * from #{table_name}&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;code>escape_identifier&lt;/code> is not appropriate for escaping values. See
&lt;code>escape_literal&lt;/code> for escaping values.&lt;/p>
&lt;h3 id="constants">Constants&lt;/h3>
&lt;p>The following constants are also available:&lt;/p>
&lt;ul>
&lt;li>&lt;code>NULL&lt;/code> &amp;ndash; represents &lt;code>NULL&lt;/code> in SQL&lt;/li>
&lt;li>&lt;code>TRUE&lt;/code> &amp;ndash; represents &lt;code>TRUE&lt;/code> in SQL&lt;/li>
&lt;li>&lt;code>FALSE&lt;/code> &amp;ndash; represents &lt;code>FALSE&lt;/code> in SQL&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>db.update(&lt;span style="color:#e6db74">&amp;#34;the_table&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> db.NULL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">db.update &amp;#34;the_table&amp;#34;, {
name: db.NULL
}
&lt;/code>&lt;/pre>&lt;h2 id="models">Models&lt;/h2>
&lt;p>Lapis provides a &lt;code>Model&lt;/code> base class for making Lua tables that can be
synchronized with a database row. The class is used to represent a single
database table, an instance of the class is used to represent a single row of
that table.&lt;/p>
&lt;p>The most primitive model is a blank model:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Model &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.model&amp;#34;&lt;/span>).Model
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import Model from require &amp;#34;lapis.db.model&amp;#34;
class Users extends Model
&lt;/code>&lt;/pre>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Users extends Model
@table_name: =&amp;gt; &amp;#34;active_users&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="primary-keys">Primary Keys&lt;/h3>
&lt;p>By default all models have the primary key &amp;ldquo;id&amp;rdquo;. This can be changed by setting
the &lt;!-- raw HTML omitted -->&lt;code>@primary_key&lt;/code>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;code>self.primary_key&lt;/code>&lt;!-- raw HTML omitted --> class variable.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> primary_key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;login&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Users extends Model
@primary_key: &amp;#34;login&amp;#34;
&lt;/code>&lt;/pre>&lt;p>If there are multiple primary keys then an array table can be used:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Followings &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;followings&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> primary_key &lt;span style="color:#f92672">=&lt;/span> { &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;followed_user_id&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Followings extends Model
@primary_key: { &amp;#34;user_id&amp;#34;, &amp;#34;followed_user_id&amp;#34; }
&lt;/code>&lt;/pre>&lt;h3 id="finding-a-row">Finding a Row&lt;/h3>
&lt;p>For the following examples assume we have the following models:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Model &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.model&amp;#34;&lt;/span>).Model
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Tags &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> primary_key &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;tag&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import Model from require &amp;#34;lapis.db.model&amp;#34;
class Users extends Model
class Tags extends Model
@primary_key: {&amp;#34;user_id&amp;#34;, &amp;#34;tag&amp;#34;}
&lt;/code>&lt;/pre>&lt;p>When you want to find a single row the &lt;code>find&lt;/code> class method is used. In the
first form it takes a variable number of values, one for each primary key in
the order the primary keys are specified:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> user &lt;span style="color:#f92672">=&lt;/span> Users:find(&lt;span style="color:#ae81ff">23232&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> tag &lt;span style="color:#f92672">=&lt;/span> Tags:find(&lt;span style="color:#ae81ff">1234&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;programmer&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">user = Users\find 23232
tag = Tags\find 1234, &amp;#34;programmer&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">23232&lt;/span> &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1234&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#e6db74">&amp;#34;tag&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;programmer&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>find&lt;/code> returns an instance of the model. In the case of the user, if there was a
&lt;code>name&lt;/code> column, then we could access the users name with &lt;code>user.name&lt;/code>.&lt;/p>
&lt;p>We can also pass a table as an argument to &lt;code>find&lt;/code>. The table will be converted
to a &lt;code>WHERE&lt;/code> clause in the query:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> user &lt;span style="color:#f92672">=&lt;/span> Users:find({ email &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;person@example.com&amp;#34;&lt;/span> })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">user = Users\find email: &amp;#34;person@example.com&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;person@example.com&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="finding-many-rows">Finding Many Rows&lt;/h3>
&lt;p>When searching for multiple rows the &lt;code>select&lt;/code> class method is used. It works
similarly to the &lt;code>select&lt;/code> function from the raw query interface except you
specify the part of the query after the list of columns to select.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> tags &lt;span style="color:#f92672">=&lt;/span> Tags:select(&lt;span style="color:#e6db74">&amp;#34;where tag = ?&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;merchant&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">tags = Tags\select &amp;#34;where tag = ?&amp;#34;, &amp;#34;merchant&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> tag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;merchant&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instead of a single instance, an array table of instances is returned.&lt;/p>
&lt;p>If you want to restrict which columns are selected you can pass in a table as
the last argument with the &lt;code>fields&lt;/code> key set:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> tags &lt;span style="color:#f92672">=&lt;/span> Tags:select(&lt;span style="color:#e6db74">&amp;#34;where tag = ?&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;merchant&amp;#34;&lt;/span>, { fields &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;created_at as c&amp;#34;&lt;/span> })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">tags = Tags\select &amp;#34;where tag = ?&amp;#34;, &amp;#34;merchant&amp;#34;, fields: &amp;#34;created_at as c&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> created_at &lt;span style="color:#66d9ef">as&lt;/span> &lt;span style="color:#66d9ef">c&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;tags&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> tag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;merchant&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively if you want to find many rows by their primary key you can use
the &lt;code>find_all&lt;/code> method. It takes an array table of primary keys. This method
only works on tables that have singular primary keys.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> users &lt;span style="color:#f92672">=&lt;/span> Users:find_all({ &lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span> })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">users = Users\find_all { 1,2,3,4,5 }
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you need to find many rows for another column other than the primary key you
can pass in the optional second argument:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> users &lt;span style="color:#f92672">=&lt;/span> UserProfile:find_all({ &lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span> }, &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">users = UserProfile\find_all { 1,2,3,4,5 }, &amp;#34;user_id&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;UserProfile&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The second argument can also be a table of options. The following properties
are supported:&lt;/p>
&lt;ul>
&lt;li>&lt;code>key&lt;/code> &amp;ndash; Specify the column name to find by, same effect as passing in a string as the second argument&lt;/li>
&lt;li>&lt;code>fields&lt;/code> &amp;ndash; Comma separated list of column names to fetch instead of the default &lt;code>*&lt;/code>&lt;/li>
&lt;li>&lt;code>where&lt;/code> &amp;ndash; A table of additional &lt;code>where&lt;/code> clauses for the query&lt;/li>
&lt;/ul>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> users &lt;span style="color:#f92672">=&lt;/span> UserProfile:find_all({&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>}, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fields &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user_id, twitter_account&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> where &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> public &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">users = UserProfile\find_all {1,2,3,4}, {
key: &amp;#34;user_id&amp;#34;
fields: &amp;#34;user_id, twitter_account&amp;#34;
where: {
public: true
}
}
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> user_id, twitter_account &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;things&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TRUE&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="inserting-rows">Inserting Rows&lt;/h3>
&lt;p>The &lt;code>create&lt;/code> class method is used to create new rows. It takes a table of
column values to create the row with. It returns an instance of the model. The
create query fetches the values of the primary keys and sets them on the
instance using the PostgreSQL &lt;code>RETURN&lt;/code> statement. This is useful for getting
the value of an auto-incrementing key from the insert statement.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> user &lt;span style="color:#f92672">=&lt;/span> Users:create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> login &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;superuser&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;1234&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">user = Users\create {
login: &amp;#34;superuser&amp;#34;
password: &amp;#34;1234&amp;#34;
}
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;login&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;1234&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;superuser&amp;#39;&lt;/span>) RETURNING &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="updating-a-row">Updating a Row&lt;/h3>
&lt;p>Instances of models have the &lt;code>update&lt;/code> method for updating the row. The values
of the primary keys are used to uniquely identify the row for updating.&lt;/p>
&lt;p>The first form of update takes variable arguments. A list of strings that
represent column names to be updated. The values of the columns are taken from
the current values in the instance.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> user &lt;span style="color:#f92672">=&lt;/span> Users:find(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user.login &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;uberuser&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user.email &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;admin@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user:update(&lt;span style="color:#e6db74">&amp;#34;login&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">user = Users\find 1
user.login = &amp;#34;uberuser&amp;#34;
user.email = &amp;#34;admin@example.com&amp;#34;
user\update &amp;#34;login&amp;#34;, &amp;#34;email&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">UPDATE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#e6db74">&amp;#34;login&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;uberuser&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;admin@example.com&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively we can pass a table as the first argument of &lt;code>update&lt;/code>. The keys
of the table are the column names, and the values are the values to update the
columns with. The instance is also updated. We can rewrite the above example as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> user &lt;span style="color:#f92672">=&lt;/span> Users:find(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user:update({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> login &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;uberuser&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;admin@example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">user = Users\find 1
user\update {
login: &amp;#34;uberuser&amp;#34;
email: &amp;#34;admin@example.com&amp;#34;
}
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">UPDATE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#e6db74">&amp;#34;login&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;uberuser&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;admin@example.com&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>The table argument can also take positional values, which are treated the
same as the variable argument form.&lt;/p>
&lt;/blockquote>
&lt;h3 id="deleting-a-row">Deleting a Row&lt;/h3>
&lt;p>Just call &lt;code>delete&lt;/code> on the instance:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> user &lt;span style="color:#f92672">=&lt;/span> Users:find(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user:delete()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">user = Users\find 1
user\delete!
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DELETE&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="timestamps">Timestamps&lt;/h3>
&lt;p>Because it&amp;rsquo;s common to store creation and update times, models have
support for managing these columns automatically.&lt;/p>
&lt;p>When creating your table make sure your table has the following columns:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> ... (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;created_at&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">timestamp&lt;/span> &lt;span style="color:#66d9ef">without&lt;/span> time &lt;span style="color:#66d9ef">zone&lt;/span> &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;updated_at&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">timestamp&lt;/span> &lt;span style="color:#66d9ef">without&lt;/span> time &lt;span style="color:#66d9ef">zone&lt;/span> &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then define your model with the &lt;!-- raw HTML omitted -->&lt;code>@timestamp&lt;/code> class
variable&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;code>timestamp&lt;/code> property&lt;!-- raw HTML omitted --> set to
true:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timestamp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Users extends Model
@timestamp: true
&lt;/code>&lt;/pre>&lt;p>Whenever &lt;code>create&lt;/code> and &lt;code>update&lt;/code> are called the appropriate timestamp column will
also be set.&lt;/p>
&lt;p>You can disable the timestamp from being updated on an &lt;code>update&lt;/code> by passing a
final table argument setting &lt;!-- raw HTML omitted -->&lt;code>timestamp: false&lt;/code>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;code>timestamp = false&lt;/code>&lt;!-- raw HTML omitted -->:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timestamp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> user &lt;span style="color:#f92672">=&lt;/span> Users:find(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- first form&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user:update({ name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span> }, { timestamp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- second form&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user.name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user.age &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user:update(&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>, { timestamp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Users extends Model
@timestamp: true
user = Users\find 1
-- first form
user\update { name: &amp;#34;hello world&amp;#34; }, { timestamp: false }
-- second form
user.name = &amp;#34;hello world&amp;#34;
user.age = 123
user\update &amp;#34;name&amp;#34;, &amp;#34;age&amp;#34;, timestamp: false
&lt;/code>&lt;/pre>&lt;h3 id="preloading-associations">Preloading Associations&lt;/h3>
&lt;p>A common pitfall when using active record type systems is triggering many
queries inside of a loop. In order to avoid situations like this you should
load data for as many objects as possible in a single query before looping over
the data.&lt;/p>
&lt;p>We&amp;rsquo;ll need some models to demonstrate: (The columns are annotated in a comment
above the model).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Model &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.model&amp;#34;&lt;/span>).Model
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- table with columns: id, name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Posts &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import Model from require &amp;#34;lapis.db.model&amp;#34;
-- table with columns: id, name
class Users extends Model
-- table with columns: id, user_id, text_content
class Posts extends Model
&lt;/code>&lt;/pre>&lt;p>Given all the posts, we want to find the user for each post. We use the
&lt;code>include_in&lt;/code> class method to include instances of that model in the array of
model instances passed to it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> posts &lt;span style="color:#f92672">=&lt;/span> Posts:select() &lt;span style="color:#75715e">-- this gets all the posts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Users:include_in(posts, &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(posts[&lt;span style="color:#ae81ff">1&lt;/span>].user.name) &lt;span style="color:#75715e">-- print the fetched data&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">posts = Posts\select! -- this gets all the posts
Users\include_in posts, &amp;#34;user_id&amp;#34;
print posts[1].user.name -- print the fetched data
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">6&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each post instance is mutated to have a &lt;code>user&lt;/code> property assigned to it with an
instance of the &lt;code>Users&lt;/code> model. The first argument of &lt;code>include_in&lt;/code> is the array
table of model instances. The second argument is the column name of the foreign
key found in the array of model instances that maps to the primary key of the
class calling the &lt;code>include_in&lt;/code>.&lt;/p>
&lt;p>The name of the inserted property is derived from the name of the foreign key.
In this case, &lt;code>user&lt;/code> was derived from the foreign key &lt;code>user_id&lt;/code>. If we want to
manually specify the name we can do something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>Users:include_in(posts, &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>, { as: &lt;span style="color:#e6db74">&amp;#34;author&amp;#34;&lt;/span> })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">Users\include_in posts, &amp;#34;user_id&amp;#34;, as: &amp;#34;author&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Now all the posts will contain a property named &lt;code>author&lt;/code> with an instance of
the &lt;code>Users&lt;/code> model.&lt;/p>
&lt;p>Sometimes the relationship is flipped. Instead of the list of model instances
having the foreign key column, the model we want to include might have it. This
is common in one-to-one relationships.&lt;/p>
&lt;p>Here&amp;rsquo;s another set of example models:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Model &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.model&amp;#34;&lt;/span>).Model
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- table with columns: id, name&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- table with columns: user_id, twitter_account, facebook_username&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> UserData &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;user_data&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import Model from require &amp;#34;lapis.db.model&amp;#34;
-- columns: id, name
class Users extends Model
-- columns: user_id, twitter_account, facebook_username
class UserData extends Model
&lt;/code>&lt;/pre>&lt;p>Now let&amp;rsquo;s say we have a collection of users and we want to fetch the associated
user data:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> users &lt;span style="color:#f92672">=&lt;/span> Users:select()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>UserData:include_in(users, &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>, { flip: &lt;span style="color:#66d9ef">true&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(users[&lt;span style="color:#ae81ff">1&lt;/span>].user_data.twitter_account)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">users = Users\select!
UserData\include_in users, &amp;#34;user_id&amp;#34;, flip: true
print users[1].user_data.twitter_account
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user_data&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">6&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this example we set the &lt;code>flip&lt;/code> option to true in the &lt;code>include_in&lt;/code> method.
This causes the search to happen against our foreign key, and the ids to be
pulled from the &lt;code>id&lt;/code> of the array of model instances.&lt;/p>
&lt;p>Additionally, the derived property name that is injected into the model
instances is created from the name of the included table. In the example above
the &lt;code>user_data&lt;/code> property contains the included model instances. (Had it been
plural the table name would have been made singular)&lt;/p>
&lt;h3 id="constraints">Constraints&lt;/h3>
&lt;p>Often before we insert or update a row we want to check that some conditions
are met. In Lapis these are called constraints. For example let&amp;rsquo;s say we have a
user model and users are not allowed to have the name &amp;ldquo;admin&amp;rdquo;.&lt;/p>
&lt;p>We might define it like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Model &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.model&amp;#34;&lt;/span>).Model
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> constraints &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(self, value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> value:lower() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;admin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;User can not be named admin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>assert(Users:create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Admin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import Model from require &amp;#34;lapis.db.models&amp;#34;
class Users extends Model
@constraints: {
name: (value) =&amp;gt;
if value\lower! == &amp;#34;admin&amp;#34;
&amp;#34;User can not be named admin&amp;#34;
}
assert Users\create {
name: &amp;#34;Admin&amp;#34;
}
&lt;/code>&lt;/pre>&lt;p>The &lt;!-- raw HTML omitted -->&lt;code>@constraints&lt;/code> class variable&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;code>constraints&lt;/code> property&lt;!-- raw HTML omitted --> is a table that maps column name to a
function that should check if the constraint is broken. If anything truthy is
returned from the function then the update/insert fails, and that is returned
as the error message.&lt;/p>
&lt;p>In the example above, the call to &lt;code>assert&lt;/code> will fail with the error &lt;code>&amp;quot;User can not be named admin&amp;quot;&lt;/code>.&lt;/p>
&lt;p>The constraint check function is passed 4 arguments. The model class, the value
of the column being checked, the name of the column being checked, and lastly
the object being checked. On insertion the object is the table passed to the
create method. On update the object is the instance of the model.&lt;/p>
&lt;h3 id="pagination">Pagination&lt;/h3>
&lt;p>Using the &lt;code>paginated&lt;/code> method on models we can easily paginate through a query
that might otherwise return many results. The arguments are the same as the
&lt;code>select&lt;/code> method but instead of the result it returns a special &lt;code>Paginator&lt;/code>
object.&lt;/p>
&lt;p>For example, say we have the following table and model: (For documentation on
creating tables see the &lt;a href="#database-schemas-creating-and-dropping-tables">next section&lt;/a>)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>create_table(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>, types.serial },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>, types.varchar },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e6db74">&amp;#34;group_id&amp;#34;&lt;/span>, types.foreign_key },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;PRIMARY KEY(id)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Users &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">create_table &amp;#34;users&amp;#34;, {
{ &amp;#34;id&amp;#34;, types.serial }
{ &amp;#34;name&amp;#34;, types.varchar }
{ &amp;#34;group_id&amp;#34;, types.foreign_key }
&amp;#34;PRIMARY KEY(id)&amp;#34;
}
class Users extends Model
&lt;/code>&lt;/pre>&lt;p>We can create a paginator like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> paginated &lt;span style="color:#f92672">=&lt;/span> Users:paginated(&lt;span style="color:#e6db74">&amp;#34;where group_id = ? order by name asc&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">123&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">paginated = Users\paginated [[where group_id = ? order by name asc]], 123
&lt;/code>&lt;/pre>&lt;p>A paginator can be configured by passing a table as the last argument.
The following options are supported:&lt;/p>
&lt;p>&lt;code>per_page&lt;/code>: sets the number of items per page&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">local paginated_alt = Users:paginated(&amp;#34;where group_id = ?&amp;#34;, 4, { per_page = 100 })
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">paginated_alt = Users\paginated [[where group_id = ?]], 4, per_page: 100
&lt;/code>&lt;/pre>&lt;p>&lt;code>prepare_results&lt;/code>: a function that is passed the results of &lt;code>get_page&lt;/code> and
&lt;code>get_all&lt;/code> for processing before they are returned. This is useful for bundling
preloading information into the paginator. The prepare function takes 1
argument, the results, and it must return the results after they have been
processed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> preloaded &lt;span style="color:#f92672">=&lt;/span> Posts:paginated(&lt;span style="color:#e6db74">&amp;#34;where category = ?&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;cats&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> per_page &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prepare_results &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(posts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Users:include_in(posts, &lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> posts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">preloaded = Posts\paginated [[where category = ?]], &amp;#34;cats&amp;#34;, {
per_page: 10
prepare_results: (posts) -&amp;gt;
Users\include_in posts, &amp;#34;user_id&amp;#34;
posts
}
&lt;/code>&lt;/pre>&lt;p>Any additional options sent to &lt;code>paginated&lt;/code> are passed directly to the
underlying &lt;code>select&lt;/code> method call when a page is loaded. For example you can
provide a &lt;code>fields&lt;/code> option in order to limit the fields returned by a page.&lt;/p>
&lt;p>The paginator has the following methods:&lt;/p>
&lt;h4 id="get_all">&lt;code>get_all()&lt;/code>&lt;/h4>
&lt;p>Gets all the items that the query can return, is the same as calling the
&lt;code>select&lt;/code> method directly. Returns an array table of model instances.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> users &lt;span style="color:#f92672">=&lt;/span> paginated:get_all()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">users = paginated\get_all!
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> group_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span> &lt;span style="color:#66d9ef">order&lt;/span> &lt;span style="color:#66d9ef">by&lt;/span> name &lt;span style="color:#66d9ef">asc&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="get_pagepage_num">&lt;code>get_page(page_num)&lt;/code>&lt;/h4>
&lt;p>Gets &lt;code>page_num&lt;/code>th page, where pages are 1 indexed. The number of items per page
is controlled by the &lt;code>per_page&lt;/code> option, and defaults to 10. Returns an array
table of model instances.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> page1 &lt;span style="color:#f92672">=&lt;/span> paginated:get_page(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> page6 &lt;span style="color:#f92672">=&lt;/span> paginated:get_page(&lt;span style="color:#ae81ff">6&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">page1 = paginated\get_page 1
page6 = paginated\get_page 6
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> group_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span> &lt;span style="color:#66d9ef">order&lt;/span> &lt;span style="color:#66d9ef">by&lt;/span> name &lt;span style="color:#66d9ef">asc&lt;/span> &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#66d9ef">offset&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> group_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span> &lt;span style="color:#66d9ef">order&lt;/span> &lt;span style="color:#66d9ef">by&lt;/span> name &lt;span style="color:#66d9ef">asc&lt;/span> &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#66d9ef">offset&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="num_pages">&lt;code>num_pages()&lt;/code>&lt;/h4>
&lt;p>Returns the total number of pages.&lt;/p>
&lt;h4 id="total_items">&lt;code>total_items()&lt;/code>&lt;/h4>
&lt;p>Gets the total number of items that can be returned. The paginator will parse
the query and remove all clauses except for the &lt;code>WHERE&lt;/code> when issuing a &lt;code>COUNT&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> users &lt;span style="color:#f92672">=&lt;/span> paginated:total_items()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">users = paginated\total_items!
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#66d9ef">COUNT&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> &lt;span style="color:#66d9ef">c&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> group_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="each_pagestarting_page1">&lt;code>each_page(starting_page=1)&lt;/code>&lt;/h4>
&lt;p>Returns an iterator function that can be used to iterate through each page of
the results. Useful for processing a large query without having the entire
result set loaded in memory at once.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> page_results, page_num &lt;span style="color:#66d9ef">in&lt;/span> paginated:each_page() &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(page_results, page_num)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">for page_results, page_num in paginated\each_page!
print(page_results, page_num)
&lt;/code>&lt;/pre>&lt;h3 id="finding-columns">Finding Columns&lt;/h3>
&lt;p>You can get the column names and column types of a table using the &lt;code>columns&lt;/code>
method on the model class:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Posts &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> _, col &lt;span style="color:#66d9ef">in&lt;/span> ipairs(Posts:columns) &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(col.column_name, col.data_type)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Posts extends Model
for {column_name, data_type} in Posts\columns!
print column_name, data_type
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#66d9ef">column_name&lt;/span>, data_type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">FROM&lt;/span> information_schema.columns &lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#66d9ef">table_name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;posts&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="refreshing-a-model-instance">Refreshing a Model Instance&lt;/h3>
&lt;p>If your model instance becomes out of date from an external change, it can tell
it to re-fetch and re-populate it&amp;rsquo;s data using the &lt;code>refresh&lt;/code> method.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Posts extends Model
post = Posts\find 1
post\refresh!
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Posts &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> post &lt;span style="color:#f92672">=&lt;/span> Posts:find(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>post:refresh()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default all fields are refreshed. If you only want to refresh specific fields
then pass them in as arguments:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Posts extends Model
post = Posts\find 1
post\refresh &amp;#34;color&amp;#34;, &amp;#34;height&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> Posts &lt;span style="color:#f92672">=&lt;/span> Model:extend(&lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> post &lt;span style="color:#f92672">=&lt;/span> Posts:find(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>post:refresh(&lt;span style="color:#e6db74">&amp;#34;color&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;height&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#e6db74">&amp;#34;color&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;height&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="database-schemas">Database Schemas&lt;/h2>
&lt;p>Lapis comes with a collection of tools for creating your database schema inside
of the &lt;code>lapis.db.schema&lt;/code> module.&lt;/p>
&lt;h3 id="creating-and-dropping-tables">Creating and Dropping Tables&lt;/h3>
&lt;h4 id="create_tabletable_name--table_declarations-">&lt;code>create_table(table_name, { table_declarations... })&lt;/code>&lt;/h4>
&lt;p>The first argument to &lt;code>create_table&lt;/code> is the name of the table and the second
argument is an array table that describes the table.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> schema &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.schema&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> types &lt;span style="color:#f92672">=&lt;/span> schema.types
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>schema.create_table(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>, types.serial},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>, types.varchar},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;PRIMARY KEY (id)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">schema = require &amp;#34;lapis.db.schema&amp;#34;
import create_table, types from schema
create_table &amp;#34;users&amp;#34;, {
{&amp;#34;id&amp;#34;, types.serial}
{&amp;#34;username&amp;#34;, types.varchar}
&amp;#34;PRIMARY KEY (id)&amp;#34;
}
&lt;/code>&lt;/pre>&lt;p>This will generate the following SQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span> serial &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> character varying(&lt;span style="color:#ae81ff">255&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span> (id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The items in the second argument to &lt;code>create_table&lt;/code> can either be a table, or a
string. When the value is a table it is treated as a column/type tuple:&lt;/p>
&lt;pre>&lt;code>{ column_name, column_type }
&lt;/code>&lt;/pre>
&lt;p>They are both plain strings. The column name will be escaped automatically.
The column type will be inserted verbatim after it is passed through
&lt;code>tostring&lt;/code>. &lt;code>schema.types&lt;/code> has a collection of common types that can be used.
For example, &lt;code>schema.types.varchar&lt;/code> evaluates to &lt;code>character varying(255) NOT NULL&lt;/code>. See more about types below.&lt;/p>
&lt;p>If the value to the second argument is a string then it is inserted directly
into the &lt;code>CREATE TABLE&lt;/code> statement, that&amp;rsquo;s how we create the primary key above.&lt;/p>
&lt;h4 id="drop_tabletable_name">&lt;code>drop_table(table_name)&lt;/code>&lt;/h4>
&lt;p>Drops a table.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>schema.drop_table(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import drop_table from schema
drop_table &amp;#34;users&amp;#34;
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="indexes">Indexes&lt;/h3>
&lt;h4 id="create_indextable_name-col1-col2-options">&lt;code>create_index(table_name, col1, col2..., [options])&lt;/code>&lt;/h4>
&lt;p>&lt;code>create_index&lt;/code> is used to add new indexes to a table. The first argument is a
table, the rest of the arguments are the ordered columns that make up the
index. Optionally the last argument can be a Lua table of options.&lt;/p>
&lt;p>There are two options &lt;code>unique: BOOL&lt;/code>, &lt;code>where: clause_string&lt;/code>.&lt;/p>
&lt;p>&lt;code>create_index&lt;/code> will also check if the index exists before attempting to create
it. If the index exists then nothing will happen.&lt;/p>
&lt;p>Here are some example indexes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> create_index &lt;span style="color:#f92672">=&lt;/span> schema.create_index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_index(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;created_at&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_index(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>, { unique &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_index(&lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;category&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;title&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create_index(&lt;span style="color:#e6db74">&amp;#34;uploads&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>, { where &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;not deleted&amp;#34;&lt;/span> })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import create_index from schema
create_index &amp;#34;users&amp;#34;, &amp;#34;created_at&amp;#34;
create_index &amp;#34;users&amp;#34;, &amp;#34;username&amp;#34;, unique: true
create_index &amp;#34;posts&amp;#34;, &amp;#34;category&amp;#34;, &amp;#34;title&amp;#34;
create_index &amp;#34;uploads&amp;#34;, &amp;#34;name&amp;#34;, where: &amp;#34;not deleted&amp;#34;
&lt;/code>&lt;/pre>&lt;p>This will generate the following SQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">INDEX&lt;/span> &lt;span style="color:#66d9ef">ON&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> (created_at);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">UNIQUE&lt;/span> &lt;span style="color:#66d9ef">INDEX&lt;/span> &lt;span style="color:#66d9ef">ON&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> (username);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">INDEX&lt;/span> &lt;span style="color:#66d9ef">ON&lt;/span> &lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span> (category, title);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">INDEX&lt;/span> &lt;span style="color:#66d9ef">ON&lt;/span> &lt;span style="color:#e6db74">&amp;#34;uploads&amp;#34;&lt;/span> (name) &lt;span style="color:#66d9ef">WHERE&lt;/span> &lt;span style="color:#66d9ef">not&lt;/span> deleted;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="drop_indextable_name-col1-col2">&lt;code>drop_index(table_name, col1, col2...)&lt;/code>&lt;/h4>
&lt;p>Drops an index from a table. It calculates the name of the index from the table
name and columns. This is the same as the default index name generated by PostgreSQL.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> drop_index &lt;span style="color:#f92672">=&lt;/span> schema.drop_index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drop_index(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;created_at&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drop_index(&lt;span style="color:#e6db74">&amp;#34;posts&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;title&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;published&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import drop_index from schema
drop_index &amp;#34;users&amp;#34;, &amp;#34;created_at&amp;#34;
drop_index &amp;#34;posts&amp;#34;, &amp;#34;title&amp;#34;, &amp;#34;published&amp;#34;
&lt;/code>&lt;/pre>&lt;p>This will generate the following SQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">INDEX&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users_created_at_idx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">INDEX&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> &lt;span style="color:#e6db74">&amp;#34;posts_title_published_idx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="altering-tables">Altering Tables&lt;/h3>
&lt;h4 id="add_columntable_name-column_name-column_type">&lt;code>add_column(table_name, column_name, column_type)&lt;/code>&lt;/h4>
&lt;p>Adds a column to a table.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>schema.add_column(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>, types.integer)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import add_column, types from schema
add_column &amp;#34;users&amp;#34;, &amp;#34;age&amp;#34;, types.integer
&lt;/code>&lt;/pre>&lt;p>Generates the SQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ALTER&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">ADD&lt;/span> &lt;span style="color:#66d9ef">COLUMN&lt;/span> &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span> integer &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="drop_columntable_name-column_name">&lt;code>drop_column(table_name, column_name)&lt;/code>&lt;/h4>
&lt;p>Removes a column from a table.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>schema.drop_column(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import drop_column from schema
drop_column &amp;#34;users&amp;#34;, &amp;#34;age&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Generates the SQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ALTER&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">COLUMN&lt;/span> &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="rename_columntable_name-old_name-new_name">&lt;code>rename_column(table_name, old_name, new_name)&lt;/code>&lt;/h4>
&lt;p>Changes the name of a column.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>schema.rename_column(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;lifespan&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import rename_column from schema
rename_column &amp;#34;users&amp;#34;, &amp;#34;age&amp;#34;, &amp;#34;lifespan&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Generates the SQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ALTER&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">RENAME&lt;/span> &lt;span style="color:#66d9ef">COLUMN&lt;/span> &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">TO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;lifespan&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="rename_tableold_name-new_name">&lt;code>rename_table(old_name, new_name)&lt;/code>&lt;/h4>
&lt;p>Changes the name of a table.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>schema.rename_table(&lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;members&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import rename_table from schema
rename_table &amp;#34;users&amp;#34;, &amp;#34;members&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Generates the SQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ALTER&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">RENAME&lt;/span> &lt;span style="color:#66d9ef">TO&lt;/span> &lt;span style="color:#e6db74">&amp;#34;members&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="column-types">Column Types&lt;/h3>
&lt;p>All of the column type generators are stored in &lt;code>schema.types&lt;/code>. All the types
are special objects that can either be turned into a type declaration string
with &lt;code>tostring&lt;/code>, or called like a function to be customized.&lt;/p>
&lt;p>Here are all the default values:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> types &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.schema&amp;#34;&lt;/span>).types
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.boolean &lt;span style="color:#75715e">--&amp;gt; boolean NOT NULL DEFAULT FALSE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.date &lt;span style="color:#75715e">--&amp;gt; date NOT NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.double &lt;span style="color:#75715e">--&amp;gt; double precision NOT NULL DEFAULT 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.foreign_key &lt;span style="color:#75715e">--&amp;gt; integer NOT NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.integer &lt;span style="color:#75715e">--&amp;gt; integer NOT NULL DEFAULT 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.numeric &lt;span style="color:#75715e">--&amp;gt; numeric NOT NULL DEFAULT 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.real &lt;span style="color:#75715e">--&amp;gt; real NOT NULL DEFAULT 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.serial &lt;span style="color:#75715e">--&amp;gt; serial NOT NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.text &lt;span style="color:#75715e">--&amp;gt; text NOT NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.time &lt;span style="color:#75715e">--&amp;gt; timestamp without time zone NOT NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.varchar &lt;span style="color:#75715e">--&amp;gt; character varying(255) NOT NULL&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import types from require &amp;#34;lapis.db.schema&amp;#34;
types.boolean --&amp;gt; boolean NOT NULL DEFAULT FALSE
types.date --&amp;gt; date NOT NULL
types.double --&amp;gt; double precision NOT NULL DEFAULT 0
types.foreign_key --&amp;gt; integer NOT NULL
types.integer --&amp;gt; integer NOT NULL DEFAULT 0
types.numeric --&amp;gt; numeric NOT NULL DEFAULT 0
types.real --&amp;gt; real NOT NULL DEFAULT 0
types.serial --&amp;gt; serial NOT NULL
types.text --&amp;gt; text NOT NULL
types.time --&amp;gt; timestamp without time zone NOT NULL
types.varchar --&amp;gt; character varying(255) NOT NULL
&lt;/code>&lt;/pre>&lt;p>You&amp;rsquo;ll notice everything is &lt;code>NOT NULL&lt;/code> by default, and the numeric types have
defaults of 0 and boolean false.&lt;/p>
&lt;p>When a type is called like a function it takes one argument, a table of
options. The options include:&lt;/p>
&lt;ul>
&lt;li>&lt;code>default: value&lt;/code> &amp;ndash; sets default value&lt;/li>
&lt;li>&lt;code>null: boolean&lt;/code> &amp;ndash; determines if the column is &lt;code>NOT NULL&lt;/code>&lt;/li>
&lt;li>&lt;code>unique: boolean&lt;/code> &amp;ndash; determines if the column has a unique index&lt;/li>
&lt;li>&lt;code>primary_key: boolean&lt;/code> &amp;ndash; determines if the column is the primary key&lt;/li>
&lt;/ul>
&lt;p>Here are some examples:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>types.integer({ default &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>, null &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> }) &lt;span style="color:#75715e">--&amp;gt; integer DEFAULT 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.integer({ primary_key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> }) &lt;span style="color:#75715e">--&amp;gt; integer NOT NULL DEFAULT 0 PRIMARY KEY&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.text({ null &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> }) &lt;span style="color:#75715e">--&amp;gt; text&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>types.varchar({ primary_key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> }) &lt;span style="color:#75715e">--&amp;gt; character varying(255) NOT NULL PRIMARY KEY&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">types.integer default: 1, null: true --&amp;gt; integer DEFAULT 1
types.integer primary_key: true --&amp;gt; integer NOT NULL DEFAULT 0 PRIMARY KEY
types.text null: true --&amp;gt; text
types.varchar primary_key: true --&amp;gt; character varying(255) NOT NULL PRIMARY KEY
&lt;/code>&lt;/pre>&lt;h2 id="database-migrations">Database Migrations&lt;/h2>
&lt;p>Because requirements typically change over the lifespan of a web application
it&amp;rsquo;s useful to have a system to make incremental schema changes to the
database.&lt;/p>
&lt;p>We define migrations in our code as a table of functions where the key of each
function in the table is the name of the migration. You are free to name the
migrations anything but it&amp;rsquo;s suggested to give them Unix timestamps as names:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> schema &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.schema&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">1368686109&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> schema.add_column(&lt;span style="color:#e6db74">&amp;#34;my_table&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>, schema.types.integer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">1368686843&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> schema.create_index(&lt;span style="color:#e6db74">&amp;#34;my_table&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import add_column, create_index, types from require &amp;#34;lapis.db.schema&amp;#34;
{
[1368686109]: =&amp;gt;
add_column &amp;#34;my_table&amp;#34;, &amp;#34;hello&amp;#34;, types.integer
[1368686843]: =&amp;gt;
create_index &amp;#34;my_table&amp;#34;, &amp;#34;hello&amp;#34;
}
&lt;/code>&lt;/pre>&lt;p>A migration function is a plain function. Generally they will call the
schema functions described above, but they don&amp;rsquo;t have to.&lt;/p>
&lt;p>Only the functions that haven&amp;rsquo;t already been executed will be called when we
tell our migrations to run. The migrations that have already been run are
stored in the migrations table, a database table that holds the names of the
migrations that have already been run. Migrations are run in the order of their
keys sorted ascending.&lt;/p>
&lt;h3 id="running-migrations">Running Migrations&lt;/h3>
&lt;p>The Lapis command line tool has a special command for running migrations. It&amp;rsquo;s
called &lt;code>lapis migrate&lt;/code>.&lt;/p>
&lt;p>This command expects a module called &lt;code>migrations&lt;/code> that returns a table of
migrations in the format described above.&lt;/p>
&lt;p>Let&amp;rsquo;s create this file with a single migration as an example.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- migrations.lua&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> schema &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.schema&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> types &lt;span style="color:#f92672">=&lt;/span> schema.types
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> schema.create_table(&lt;span style="color:#e6db74">&amp;#34;articles&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>, types.serial },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e6db74">&amp;#34;title&amp;#34;&lt;/span>, types.text },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e6db74">&amp;#34;content&amp;#34;&lt;/span>, types.text },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;PRIMARY KEY (id)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">-- migrations.moon
import create_table, types from require &amp;#34;lapis.db.schema&amp;#34;
{
[1]: =&amp;gt;
create_table &amp;#34;articles&amp;#34;, {
{ &amp;#34;id&amp;#34;, types.serial }
{ &amp;#34;title&amp;#34;, types.text }
{ &amp;#34;content&amp;#34;, types.text }
&amp;#34;PRIMARY KEY (id)&amp;#34;
}
}
&lt;/code>&lt;/pre>&lt;p>After creating the file, ensure that it is compiled to Lua and run &lt;code>lapis migrate&lt;/code>. The command will first create the migrations table if it doesn&amp;rsquo;t
exist yet then it will run every migration that hasn&amp;rsquo;t been executed yet.&lt;/p>
&lt;p>Read more about &lt;a href="#command-line-interface-lapis-migrate">the migrate command&lt;/a>.&lt;/p>
&lt;h3 id="manually-running-migrations">Manually Running Migrations&lt;/h3>
&lt;p>We can manually create the migrations table using the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> migrations &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.migrations&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>migrations.create_migrations_table()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">migrations = require &amp;#34;lapis.db.migrations&amp;#34;
migrations.create_migrations_table!
&lt;/code>&lt;/pre>&lt;p>It will execute the following SQL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> &lt;span style="color:#e6db74">&amp;#34;lapis_migrations&amp;#34;&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span> character varying(&lt;span style="color:#ae81ff">255&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span>(name)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then we can manually run migrations with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> migrations &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.db.migrations&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>migrations.run_migrations(require(&lt;span style="color:#e6db74">&amp;#34;migrations&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import run_migrations from require &amp;#34;lapis.db.migrations&amp;#34;
run_migrations require &amp;#34;migrations&amp;#34;
&lt;/code>&lt;/pre>&lt;h1 id="html-generation">HTML Generation&lt;/h1>
&lt;p>This guide is focused on using builder syntax in Lua/MoonScript to generate
HTML. If you&amp;rsquo;re interested in a more traditional templating system see the
&lt;a href="$root/reference/etlua_templates.html">etlua Templates guide&lt;/a>.&lt;/p>
&lt;h2 id="html-in-actions">HTML In Actions&lt;/h2>
&lt;p>If we want to generate HTML directly in our action we can use the &lt;code>@html&lt;/code>
method:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">&amp;#34;/&amp;#34;: =&amp;gt;
@html -&amp;gt;
h1 class: &amp;#34;header&amp;#34;, &amp;#34;Hello&amp;#34;
div class: &amp;#34;body&amp;#34;, -&amp;gt;
text &amp;#34;Welcome to my site!&amp;#34;
&lt;/code>&lt;/pre>&lt;p>HTML templates can be written directly as MoonScript (or Lua) code. This is a
very powerful feature (inspired by &lt;a href="http://erector.rubyforge.org/">Erector&lt;/a>)
that gives us the ability to write templates with high composability and also
all the features of MoonScript. No need to learn any goofy templating syntax
with arbitrary restrictions.&lt;/p>
&lt;p>The &lt;code>@html&lt;/code> method overrides the environment of the function passed to it.
Functions that create HTML tags are generated on the fly as you call them. The
output of these functions is written into a buffer that is compiled in the end
and returned as the result of the action.&lt;/p>
&lt;p>Here are some examples of the HTML generation:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">div! -- &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
b &amp;#34;Hello World&amp;#34; -- &amp;lt;b&amp;gt;Hello World&amp;lt;/b&amp;gt;
div &amp;#34;hi&amp;lt;br/&amp;gt;&amp;#34; -- &amp;lt;div&amp;gt;hi&amp;amp;lt;br/&amp;amp;gt;&amp;lt;/div&amp;gt;
text &amp;#34;Hi!&amp;#34; -- Hi!
raw &amp;#34;&amp;lt;br/&amp;gt;&amp;#34; -- &amp;lt;br/&amp;gt;
element &amp;#34;table&amp;#34;, width: &amp;#34;100%&amp;#34;, -&amp;gt; -- &amp;lt;table width=&amp;#34;100%&amp;#34;&amp;gt;&amp;lt;/table&amp;gt;
div class: &amp;#34;footer&amp;#34;, &amp;#34;The Foot&amp;#34; -- &amp;lt;div class=&amp;#34;footer&amp;#34;&amp;gt;The Foot&amp;lt;/div&amp;gt;
div -&amp;gt; -- &amp;lt;div&amp;gt;Hey&amp;lt;/div&amp;gt;
text &amp;#34;Hey&amp;#34;
div class: &amp;#34;header&amp;#34;, -&amp;gt; -- &amp;lt;div class=&amp;#34;header&amp;#34;&amp;gt;&amp;lt;h2&amp;gt;My Site&amp;lt;/h2&amp;gt;
h2 &amp;#34;My Site&amp;#34; -- &amp;lt;p&amp;gt;Welcome!&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;
p &amp;#34;Welcome!&amp;#34;
&lt;/code>&lt;/pre>&lt;p>The &lt;code>element&lt;/code> function is a special builder that takes the name of tag to
generate as the first argument followed by any attributes and content.&lt;/p>
&lt;p>The HTML builder methods have lower precedence than any existing variables, so
if you have a variable named &lt;code>div&lt;/code> and you want to make a &lt;code>&amp;lt;div&amp;gt;&lt;/code> tag you&amp;rsquo;ll need
to call &lt;code>element &amp;quot;div&amp;quot;&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>If you want to create a &lt;code>&amp;lt;table&amp;gt;&lt;/code> or &lt;code>&amp;lt;select&amp;gt;&lt;/code> tag you&amp;rsquo;ll need to use &lt;code>element&lt;/code> because Lua
uses those names in the built-in modules.&lt;/p>
&lt;/blockquote>
&lt;h2 id="html-widgets">HTML Widgets&lt;/h2>
&lt;p>The preferred way to write HTML is through widgets. Widgets are classes who are
only concerned with outputting HTML. They use the same syntax as the &lt;code>@html&lt;/code>
helper shown above for writing HTML.&lt;/p>
&lt;p>When Lapis loads a widget automatically it does it by package name. For
example, if it was loading the widget for the name &lt;code>&amp;quot;index&amp;quot;&lt;/code> it would try to
load the module &lt;code>views.index&lt;/code>, and the result of that module should be the
widget.&lt;/p>
&lt;p>This is what a widget looks like:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">-- views/index.moon
import Widget from require &amp;#34;lapis.html&amp;#34;
class Index extends Widget
content: =&amp;gt;
h1 class: &amp;#34;header&amp;#34;, &amp;#34;Hello&amp;#34;
div class: &amp;#34;body&amp;#34;, -&amp;gt;
text &amp;#34;Welcome to my site!&amp;#34;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>The name of the widget class is insignificant, but it&amp;rsquo;s worth making one
because some systems can auto-generate encapsulating HTML named after the
class.&lt;/p>
&lt;/blockquote>
&lt;h3 id="rendering-a-widget-from-an-action">Rendering A Widget From An Action&lt;/h3>
&lt;p>The &lt;code>render&lt;/code> option key is used to render a widget. For example you can render
the &lt;code>&amp;quot;index&amp;quot;&lt;/code> widget from our action by returning a table with render set to
the name of the widget:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">&amp;#34;/&amp;#34;: =&amp;gt;
render: &amp;#34;index&amp;#34;
&lt;/code>&lt;/pre>&lt;p>If the action has a name, then we can set render to &lt;code>true&lt;/code> to load the widget
with the same name as the action:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">[index: &amp;#34;/&amp;#34;]: =&amp;gt;
render: true
&lt;/code>&lt;/pre>&lt;p>By default &lt;code>views.&lt;/code> is appended to the front of the widget name and then loaded
using Lua&amp;rsquo;s &lt;code>require&lt;/code> function. The &lt;code>views&lt;/code> prefix can be customized by
overwriting the &lt;code>views_prefix&lt;/code> member of your application subclass:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class Application extends lapis.Application
views_prefix: &amp;#34;app_views&amp;#34;
-- will use &amp;#34;app_views.home&amp;#34; as the view
[home: &amp;#34;/home&amp;#34;]: =&amp;gt; render: true
&lt;/code>&lt;/pre>&lt;h3 id="passing-data-to-a-widget">Passing Data To A Widget&lt;/h3>
&lt;p>Any &lt;code>@&lt;/code> variables set in the action can be accessed in the widget. Additionally
any of the helper functions like &lt;code>@url_for&lt;/code> are also accessible.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">-- web.moon
[index: &amp;#34;/&amp;#34;]: =&amp;gt;
@page_title = &amp;#34;Welcome To My Page&amp;#34;
render: true
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">-- views/index.moon
import Widget from require &amp;#34;lapis.html&amp;#34;
class Index extends Widget
content: =&amp;gt;
h1 class: &amp;#34;header&amp;#34;, @page_title
div class: &amp;#34;body&amp;#34;, -&amp;gt;
text &amp;#34;Welcome to my site!&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="rendering-widgets-manually">Rendering Widgets Manually&lt;/h3>
&lt;p>Widgets can also be rendered manually by instantiating them and calling the
&lt;code>render&lt;/code> method.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">Index = require &amp;#34;views.index&amp;#34;
widget = Index page_title: &amp;#34;Hello World&amp;#34;
print widget\render_to_string!
&lt;/code>&lt;/pre>&lt;p>If you want to use helpers like &lt;code>@url_for&lt;/code> you also need to include them in the
widget instance. Any object can be included as a helper, and it&amp;rsquo;s methods will
be made available inside of the widget.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">html = require &amp;#34;lapis.html&amp;#34;
class SomeWidget extends html.Widget
content: =&amp;gt;
a href: @url_for(&amp;#34;test&amp;#34;), &amp;#34;Test Page&amp;#34;
class extends lapis.Application
[test: &amp;#34;/test_render&amp;#34;]: =&amp;gt;
widget = SomeWidget!
widget\include_helper @
widget\render_to_string!
&lt;/code>&lt;/pre>&lt;p>You should avoid rendering widgets manually when possible. When in an action
use the &lt;code>render&lt;/code> &lt;a href="#request-object-request-options">request option&lt;/a>. When in
another widget use the &lt;code>widget&lt;/code> helper function.&lt;/p>
&lt;h2 id="layouts">Layouts&lt;/h2>
&lt;p>Whenever an action is rendered normally the result is inserted into the
current layout. The layout is just another widget, but it is used across many
pages. Typically this is where you would put your &lt;code>&amp;lt;html&amp;gt;&lt;/code> and &lt;code>&amp;lt;head&amp;gt;&lt;/code> tags.&lt;/p>
&lt;p>Lapis comes with a default layout that looks like this:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">html = require &amp;#34;lapis.html&amp;#34;
class DefaultLayout extends html.Widget
content: =&amp;gt;
html_5 -&amp;gt;
head -&amp;gt; title @title or &amp;#34;Lapis Page&amp;#34;
body -&amp;gt; @content_for &amp;#34;inner&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Use this as a starting point for creating your own layout. The content of your
page will be injected in the location of the call to &lt;code>@content_for &amp;quot;inner&amp;quot;&lt;/code>.&lt;/p>
&lt;p>We can specify the layout for an entire application or specify it for a
specific action. For example, if we have our new layout in &lt;code>views/my_layout.moon&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class extends lapis.Application
layout: require &amp;#34;views.my_layout&amp;#34;
&lt;/code>&lt;/pre>&lt;p>If we want to set the layout for a specific action we can provide it as part of
the action&amp;rsquo;s return value.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class extends lapis.Application
-- the following two have the same effect
&amp;#34;/home1&amp;#34;: =&amp;gt;
layout: &amp;#34;my_layout&amp;#34;
&amp;#34;/home2&amp;#34;: =&amp;gt;
layout: require &amp;#34;views.my_layout&amp;#34;
-- this doesn&amp;#39;t use a layout at all
&amp;#34;/no_layout&amp;#34;: =&amp;gt;
layout: false, &amp;#34;No layout rendered!&amp;#34;
&lt;/code>&lt;/pre>&lt;p>As demonstrated in the example, passing false will prevent any layout from
being rendered.&lt;/p>
&lt;h2 id="widget-methods">Widget Methods&lt;/h2>
&lt;h3 id="includeother_class">&lt;code>@@include(other_class)&lt;/code>&lt;/h3>
&lt;p>Class method that copies the methods from another class into this widget.
Useful for mixin in shared functionality across multiple widgets.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class MyHelpers
item_list: (items) =&amp;gt;
ul -&amp;gt;
for item in *items
li item
class SomeWidget extends html.Widget
@include MyHelpers
content: =&amp;gt;
@item_list {&amp;#34;hello&amp;#34;, &amp;#34;world&amp;#34;}
&lt;/code>&lt;/pre>&lt;h3 id="content_forname-content">&lt;code>@content_for(name, [content])&lt;/code>&lt;/h3>
&lt;p>&lt;code>content_for&lt;/code> is used for sending HTML or strings from the view to the layout.
You&amp;rsquo;ve probably already seen &lt;code>@content_for &amp;quot;inner&amp;quot;&lt;/code> if you&amp;rsquo;ve looked at
layouts. By default the content of the view is placed in the content block
called &lt;code>&amp;quot;inner&amp;quot;&lt;/code>.&lt;/p>
&lt;p>You can create arbitrary content blocks from the view by calling &lt;code>@content_for&lt;/code>
with a name and some content:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class MyView extends Widget
content: =&amp;gt;
@content_for &amp;#34;title&amp;#34;, &amp;#34;This is the title of my page!&amp;#34;
@content_for &amp;#34;footer&amp;#34;, -&amp;gt;
div class: &amp;#34;custom_footer&amp;#34;, &amp;#34;The Footer&amp;#34;
&lt;/code>&lt;/pre>&lt;p>You can use either strings or builder functions as the content.&lt;/p>
&lt;p>To access the content from the layout call &lt;code>@content_for&lt;/code> without the content
argument:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class MyLayout extends Widget
content: =&amp;gt;
html -&amp;gt;
body -&amp;gt;
div class: &amp;#34;title&amp;#34;, -&amp;gt;
@content_for &amp;#34;title&amp;#34;
@content_for &amp;#34;inner&amp;#34;
@content_for &amp;#34;footer&amp;#34;
&lt;/code>&lt;/pre>&lt;p>If a string is used as the value of a content block then it will be escaped
before written to the buffer. If you want to insert a raw string then you can
use a builder function in conjunction with the &lt;code>raw&lt;/code> function:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">@content_for &amp;#34;footer&amp;#34;, -&amp;gt;
raw &amp;#34;&amp;lt;pre&amp;gt;this wont&amp;#39; be escaped&amp;lt;/pre&amp;gt;&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="has_content_forname">&lt;code>@has_content_for(name)&lt;/code>&lt;/h3>
&lt;p>Checks to see if content for &lt;code>name&lt;/code> is set.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class MyView extends Widget
content: =&amp;gt;
if @has_content_for &amp;#34;things&amp;#34;
@content_for &amp;#34;things&amp;#34;
else
div -&amp;gt;
text &amp;#34;default content&amp;#34;
&lt;/code>&lt;/pre>&lt;h2 id="html-module">HTML Module&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">html = require &amp;#34;lapis.html&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="render_htmlfn">&lt;code>render_html(fn)&lt;/code>&lt;/h3>
&lt;p>Runs the function, &lt;code>fn&lt;/code> in the HTML rendering context as described above.
Returns the resulting HTML. The HTML context will automatically convert any
reference to an undefined global variable into a function that will render the
appropriate tag.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">import render_html from require &amp;#34;lapis.html&amp;#34;
print render_html -&amp;gt;
div class: &amp;#34;item&amp;#34;, -&amp;gt;
strong &amp;#34;Hello!&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="escapestr">&lt;code>escape(str)&lt;/code>&lt;/h3>
&lt;p>Escapes any HTML special characters in the string. The following are escaped:&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;amp;&lt;/code> &amp;ndash; &lt;code>&amp;amp;amp;&lt;/code>&lt;/li>
&lt;li>&lt;code>&amp;lt;&lt;/code> &amp;ndash; &lt;code>&amp;amp;lt;&lt;/code>&lt;/li>
&lt;li>&lt;code>&amp;gt;&lt;/code> &amp;ndash; &lt;code>&amp;amp;gt;&lt;/code>&lt;/li>
&lt;li>&lt;code>&amp;quot;&lt;/code> &amp;ndash; &lt;code>&amp;amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>'&lt;/code> &amp;ndash; &lt;code>&amp;amp;#039;&lt;/code>&lt;/li>
&lt;/ul></content></item><item><title>loving-ssh.md</title><link>/posts/misc/loving-ssh/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/loving-ssh/</guid><description>ssh ssh 绝对不不仅仅是类似 telnet 这样远程登录管理主机那么简单。下面的些 技巧，或许可以激发起你对这个「老朋友」重新认识的兴趣。
有部分内容来自： ssh setting 。
直接指定运行远程主机的命令 ssh 其实可以直接指定运行远程主机的命令。例如，每次登录并查看线上的日志是件非常繁琐的累活。其实你可以使用下面的命令
ssh user@remotehost &amp;quot;taif -f /var/log/apache/access.log&amp;quot; 它会 ssh 登录以后直接执行指定的命令。这样我们可以构建本地脚本让其接受远程服务器的输出，做更多的事情。
不想开启 SFTP 工具传送文件 有时候不想开启 SFTP 工具传送文件，那么下面的命令会帮到你
tar cvfz - localFileOrDir | ssh user@remotehost 'cd /remote/path/to/unpack/ ; tar xvfz -' 这个命令可以自动将本地的文件或者目录打包压缩以后，通过 ssh 传输到 remotehost 主机，然后 remotehost 会自动将其解压缩。
不用每次都要输入密码 最后个 ssh 技巧，上面的技巧的确是很实用，但是我们也受不了每次都要输入次密码。如果你的确厌烦了这些，那么尝试执行下面的命令：
ssh user@remotehost 'cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys' &amp;lt; ~/.ssh/id_rsa.pub 这样远程的主机就会保存你本地的公钥，你就可以自动 ssh 登录远程主机（ 详细 ）。
ssh-copyid user@remotehost 顺便提醒：强烈提醒您保护好您主目录下的 ssh 私钥，否则您的帐户可能会面临风险。
进行端口的转发 将远程3128转到本地的8086</description><content>&lt;h1 id="ssh">ssh&lt;/h1>
&lt;p>ssh 绝对不不仅仅是类似 telnet 这样远程登录管理主机那么简单。下面的些 技巧，或许可以激发起你对这个「老朋友」重新认识的兴趣。&lt;/p>
&lt;p>有部分内容来自： &lt;a href="http://derwiki.tumblr.com/post/841579929/how-i-learned-to-stop-worrying-and-love-ssh">ssh setting&lt;/a> 。&lt;/p>
&lt;h2 id="直接指定运行远程主机的命令">直接指定运行远程主机的命令&lt;/h2>
&lt;p>ssh 其实可以直接指定运行远程主机的命令。例如，每次登录并查看线上的日志是件非常繁琐的累活。其实你可以使用下面的命令&lt;/p>
&lt;pre>&lt;code>ssh user@remotehost &amp;quot;taif -f /var/log/apache/access.log&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>它会 ssh 登录以后直接执行指定的命令。这样我们可以构建本地脚本让其接受远程服务器的输出，做更多的事情。&lt;/p>
&lt;h2 id="不想开启-sftp-工具传送文件">不想开启 SFTP 工具传送文件&lt;/h2>
&lt;p>有时候不想开启 SFTP 工具传送文件，那么下面的命令会帮到你&lt;/p>
&lt;pre>&lt;code>tar cvfz - localFileOrDir | ssh user@remotehost 'cd /remote/path/to/unpack/ ; tar xvfz -'
&lt;/code>&lt;/pre>
&lt;p>这个命令可以自动将本地的文件或者目录打包压缩以后，通过 ssh 传输到 remotehost 主机，然后 remotehost 会自动将其解压缩。&lt;/p>
&lt;h2 id="不用每次都要输入密码">不用每次都要输入密码&lt;/h2>
&lt;p>最后个 ssh 技巧，上面的技巧的确是很实用，但是我们也受不了每次都要输入次密码。如果你的确厌烦了这些，那么尝试执行下面的命令：&lt;/p>
&lt;pre>&lt;code>ssh user@remotehost 'cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys' &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code>&lt;/pre>
&lt;p>这样远程的主机就会保存你本地的公钥，你就可以自动 ssh 登录远程主机（ 详细 ）。&lt;/p>
&lt;pre>&lt;code>ssh-copyid user@remotehost
&lt;/code>&lt;/pre>
&lt;p>顺便提醒：强烈提醒您保护好您主目录下的 ssh 私钥，否则您的帐户可能会面临风险。&lt;/p>
&lt;h2 id="进行端口的转发">进行端口的转发&lt;/h2>
&lt;p>将远程3128转到本地的8086&lt;/p>
&lt;pre>&lt;code>ssh username@remotehost -p 8090 -R 3128:localhost:8086
&lt;/code>&lt;/pre>
&lt;p>将本地3128转到远程的8086,可以是第三个主机&lt;/p>
&lt;pre>&lt;code>ssh username@remotehost -p 8090 -L 3128:remote:8086
&lt;/code>&lt;/pre>
&lt;h2 id="还有些有用的参数">还有些有用的参数&lt;/h2>
&lt;p>-C 这个参数可以将文本数据压缩传送
-X 如果远程服务器支持 X11 forwarding ，那么远程的 X 应用直接可以在本地显示运行（当然你本地要有 X Server）&lt;/p></content></item><item><title>lua_creating_configurations.md</title><link>/posts/misc/lua_creating_configurations/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/lua_creating_configurations/</guid><description>title: Lua Configuration Syntax Lua Configuration Syntax Configuration Example Lapis&amp;rsquo; configuration module gives you support for merging tables recursively.
For example we might define a base configuration, then override some values in the more specific configuration declarations:
-- config.moon local config = require(&amp;#34;lapis.config&amp;#34;) config({&amp;#34;development&amp;#34;, &amp;#34;production&amp;#34;}, { host = &amp;#34;example.com&amp;#34;, email_enabled = false, postgres = { host = &amp;#34;localhost&amp;#34;, port = &amp;#34;5432&amp;#34;, database = &amp;#34;my_app&amp;#34; } }) config(&amp;#34;production&amp;#34;, { email_enabled = false, postgres = { database = &amp;#34;my_app_prod&amp;#34; } }) This results in the following two configurations (default values omitted):</description><content>&lt;h2 id="title-lua-configuration-syntax">title: Lua Configuration Syntax&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;h1 id="lua-configuration-syntax">Lua Configuration Syntax&lt;/h1>
&lt;h2 id="configuration-example">Configuration Example&lt;/h2>
&lt;p>Lapis&amp;rsquo; configuration module gives you support for merging tables recursively.&lt;/p>
&lt;p>For example we might define a base configuration, then override some values in
the more specific configuration declarations:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- config.moon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> config &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.config&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config({&lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;production&amp;#34;&lt;/span>}, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email_enabled &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> postgres &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;5432&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> database &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;my_app&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config(&lt;span style="color:#e6db74">&amp;#34;production&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email_enabled &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> postgres &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> database &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;my_app_prod&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This results in the following two configurations (default values omitted):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- &amp;#34;development&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email_enabled &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> postgres &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;5432&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> database &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;my_app&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- &amp;#34;production&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email_enabled &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> postgres &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;5432&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> database &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;my_app_prod&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;production&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can call the &lt;code>config&lt;/code> function as many time you like on the same
configuration names, each time the passed in table is merged into the
configuration.&lt;/p></content></item><item><title>lua_getting_started.md</title><link>/posts/misc/lua_getting_started/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/lua_getting_started/</guid><description>title: Creating a Lapis Application with Lua Creating a Lapis Application with Lua Generating a New Project If you haven&amp;rsquo;t already, read through the generic getting started guide for information on creating a new project skeleton along with details on OpenResty, Nginx configurations, and the lapis command.
You can start a new Lua project in the current directory by running the following command:
$ lapis new --lua The default nginx.conf reads a file called app.</description><content>&lt;h2 id="title-creating-a-lapis-application-with-lua">title: Creating a Lapis Application with Lua&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;h1 id="creating-a-lapis-application-with-lua">Creating a Lapis Application with Lua&lt;/h1>
&lt;h2 id="generating-a-new-project">Generating a New Project&lt;/h2>
&lt;p>If you haven&amp;rsquo;t already, read through the &lt;a href="getting_started.html">generic getting started guide&lt;/a> for
information on creating a new project skeleton along with details on OpenResty,
Nginx configurations, and the &lt;code>lapis&lt;/code> command.&lt;/p>
&lt;p>You can start a new Lua project in the current directory by running the
following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ lapis new --lua
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The default &lt;code>nginx.conf&lt;/code> reads a file called &lt;code>app.lua&lt;/code> for your application. A
basic one is provided with the &lt;code>lapis new&lt;/code> command.&lt;/p>
&lt;p>&lt;code>app.lua&lt;/code> is a regular Lua module that contains the application. You can even
require the module like any other in the regular Lua interpreter. It looks like
this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- app.lua&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> lapis &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> app &lt;span style="color:#f92672">=&lt;/span> lapis.Application()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:get(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Welcome to Lapis &amp;#34;&lt;/span> &lt;span style="color:#f92672">..&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.version&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Try it out by starting the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>lapis server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Visit &lt;a href="http://localhost:8080">http://localhost:8080&lt;/a> to see the page.&lt;/p>
&lt;p>To change the port we can create a configuration. Create &lt;code>config.lua&lt;/code>.&lt;/p>
&lt;p>In this example we change the port in the &lt;code>development&lt;/code> environment to 9090:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- config.lua&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> config &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.config&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config(&lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">9090&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>You can read more about configurations on the &lt;a href="configuration.html">Configurations and
Environments guide&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>The &lt;code>development&lt;/code> environment is used and loaded automatically when &lt;code>lapis server&lt;/code> is run with no additional arguments. (And the file
&lt;code>lapis_environment.lua&lt;/code> doesn&amp;rsquo;t exist)&lt;/p>
&lt;p>Lapis uses a handful of fields in the configuration (such as &lt;code>port&lt;/code>), other
fields can be used to store anything you want. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- config.lua&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> config &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.config&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config(&lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> greeting &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello world&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can get the current configuration by calling &lt;code>get&lt;/code>. It returns a plain Lua
table:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- app.lua&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> lapis &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> config &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis.config&amp;#34;&lt;/span>).get()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> app &lt;span style="color:#f92672">=&lt;/span> lapis.Application()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:get(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>(self)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> config.greeting &lt;span style="color:#f92672">..&lt;/span> &lt;span style="color:#e6db74">&amp;#34; from port &amp;#34;&lt;/span> &lt;span style="color:#f92672">..&lt;/span> config.port
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="creating-a-view">Creating a View&lt;/h2>
&lt;p>Now that we can create basic pages we&amp;rsquo;ll likely want to render something a bit
more complex. Lapis comes with support for &lt;a href="https://github.com/leafo/etlua">etlua&lt;/a>, an Lua templating
language that lets you insert Lua mixed in with text and HTML.&lt;/p>
&lt;p>A view is a file that is responsible for generating the HTML. Typically your
action will prepare all the data for your view and then tell it to render.&lt;/p>
&lt;p>By default Lapis searches for views in &lt;code>views/&lt;/code> directory. Lets create a new
view there, &lt;code>index.etlua&lt;/code>. We won&amp;rsquo;t use any of etlua&amp;rsquo;s special markup just yet,
so it will look like a normal HTML file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- views/index.etlua --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;Hello world&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;Welcome to my page&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You&amp;rsquo;ll notice that &lt;code>&amp;lt;html&amp;gt;&lt;/code>, &lt;code>&amp;lt;head&amp;gt;&lt;/code>, and &lt;code>&amp;lt;body&amp;gt;&lt;/code> tags aren&amp;rsquo;t there. The view
typically renders the inside of the page, and the layout is responsible for
what goes around it. We&amp;rsquo;ll look at layouts further down.&lt;/p>
&lt;p>Now lets create the application which renders our view:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- app.lua&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> lapis &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> app &lt;span style="color:#f92672">=&lt;/span> lapis.Application()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:enable(&lt;span style="color:#e6db74">&amp;#34;etlua&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:get(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>(self)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> { render &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;index&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>etlua&lt;/code> is not enabled by default, you must enable it by calling the &lt;code>enable&lt;/code>
method on your application instance.&lt;/p>
&lt;p>We use the &lt;code>render&lt;/code> parameter of our action&amp;rsquo;s return value to instruct what
template to use when rendering the page. In this case &lt;code>&amp;quot;index&amp;quot;&lt;/code> refers to the
module with the name &lt;code>views.index&lt;/code>. &lt;code>etalua&lt;/code> injects itself into Lua&amp;rsquo;s
&lt;code>require&lt;/code> method and so when the module &lt;code>views.index&lt;/code> is loaded, an attempt to
read and parse the file &lt;code>views/index.etlua&lt;/code> is made.&lt;/p>
&lt;p>Running the server and navigating to it in the browser should show our rendered
template.&lt;/p>
&lt;h3 id="working-with-etlua">Working with &lt;code>etlua&lt;/code>&lt;/h3>
&lt;p>&lt;code>etlua&lt;/code> comes with the following tags for injecting Lua into your templates:&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;lt;% lua_code %&amp;gt;&lt;/code> runs Lua code verbatim&lt;/li>
&lt;li>&lt;code>&amp;lt;%= lua_expression %&amp;gt;&lt;/code> writes result of expression to output, HTML escaped&lt;/li>
&lt;li>&lt;code>&amp;lt;%- lua_expression %&amp;gt;&lt;/code> same as above but with no HTML escaping&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Learn more about the etlua integration in the &lt;a href="etlua_templates.html">etlua guide&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>In the following example we assign some data in the action, then print it out
in our view:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- app.lua&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> lapis &lt;span style="color:#f92672">=&lt;/span> require(&lt;span style="color:#e6db74">&amp;#34;lapis&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> app &lt;span style="color:#f92672">=&lt;/span> lapis.Application()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:enable(&lt;span style="color:#e6db74">&amp;#34;etlua&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:get(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>(self)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self.my_favorite_things &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Cats&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Horses&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Skateboards&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> { render &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;list&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> app
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- views/list.etlua --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;Here are my favorite things&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">ol&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">&amp;lt;&lt;/span>% for i, thing in pairs(my_favorite_things) do %&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">li&lt;/span>&amp;gt;&lt;span style="color:#960050;background-color:#1e0010">&amp;lt;&lt;/span>%= thing %&amp;gt;&amp;lt;/&lt;span style="color:#f92672">li&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">&amp;lt;&lt;/span>% end %&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">ol&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="creating-a-layout">Creating a Layout&lt;/h3>
&lt;p>A layout is a separate shared template that wraps the content of every page.
Lapis comes with a basic layout to get you started but you&amp;rsquo;ll most likely want
to replace it with something custom.&lt;/p>
&lt;p>We&amp;rsquo;ll write the layout in etlua just like our views. Create &lt;code>views/layout.etlua&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- views/layout.etlua --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span> &lt;span style="color:#a6e22e">lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">charset&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;&lt;span style="color:#960050;background-color:#1e0010">&amp;lt;&lt;/span>%= page_title or &amp;#34;My Page&amp;#34; %&amp;gt;&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;Greetings&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">&amp;lt;&lt;/span>% content_for(&amp;#34;inner&amp;#34;) %&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>content_for&lt;/code> function is a special function built into templates that
allows you to send data from a view to a layout. Lapis puts the rendered result
of the view into the content variable named &lt;code>inner&lt;/code>. You&amp;rsquo;ll note that we don&amp;rsquo;t
need to use any of the etlua tags that write into the page. This is because
&lt;code>content_for&lt;/code> efficiently puts its result directly into the output buffer.&lt;/p>
&lt;p>Any other variables and helper functions that would normally be available in a
view are also available in the layout.&lt;/p>
&lt;p>Now that the layout is written it can be assigned to the application:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> app &lt;span style="color:#f92672">=&lt;/span> lapis.Application()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app:enable(&lt;span style="color:#e6db74">&amp;#34;etlua&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.layout &lt;span style="color:#f92672">=&lt;/span> require &lt;span style="color:#e6db74">&amp;#34;views.layout&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- the rest of the application...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The syntax is slightly different than rendering a view. Instead of assigning a
template name to the &lt;code>layout&lt;/code> field, we assign the actual template object. This
can be obtained by just requiring it by the module name: &lt;code>&amp;quot;views.layout&amp;quot;&lt;/code>. As
described above, etlua takes care of converting the &lt;code>.etlua&lt;/code> file into something
usable by Lua.&lt;/p></content></item><item><title>misc.md</title><link>/posts/misc/misc/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/misc/</guid><description>[misc] 这里存放一些难以归类的姿势。</description><content>&lt;h1 id="misc">[misc]&lt;/h1>
&lt;p>这里存放一些难以归类的姿势。&lt;/p></content></item><item><title>moon_creating_configurations.md</title><link>/posts/misc/moon_creating_configurations/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/moon_creating_configurations/</guid><description>title: MoonScript Configuration Syntax MoonScript Configuration Syntax Configuration Example The MoonScript configuration builder syntax uses function calls to define variables. The advantage to this approach over using a Lua table literal is that you can have logic surrounding your assignments. You can also freely mix regular table objects.
Here&amp;rsquo;s an example of the configuration DSL (domain specific language) and the table it generates:
some_function = -&amp;gt; steak &amp;#34;medium_well&amp;#34; config &amp;#34;development&amp;#34;, -&amp;gt; hello &amp;#34;world&amp;#34; if 20 &amp;gt; 4 color &amp;#34;blue&amp;#34; else color &amp;#34;green&amp;#34; custom_settings -&amp;gt; age 10 enabled true -- tables are merged extra -&amp;gt; name &amp;#34;leaf&amp;#34; mood &amp;#34;happy&amp;#34; extra -&amp;gt; name &amp;#34;beef&amp;#34; shoe_size 12 include some_function include some_function -- a normal table can be passed instead of a function some_list { 1,2,3,4 } -- use set to assign names that are unavailable set &amp;#34;include&amp;#34;, &amp;#34;hello&amp;#34; { hello: &amp;#34;world&amp;#34; color: &amp;#34;blue&amp;#34; custom_settings: { age: 10 enabled: true } extra: { name: &amp;#34;beef&amp;#34; mood: &amp;#34;happy&amp;#34; shoe_size: 12 steak: &amp;#34;medium_well&amp;#34; } steak: &amp;#34;medium_well&amp;#34; some_list: { 1,2,3,4 } include: &amp;#34;hello&amp;#34; }</description><content>&lt;h2 id="title-moonscript-configuration-syntax">title: MoonScript Configuration Syntax&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;h1 id="moonscript-configuration-syntax">MoonScript Configuration Syntax&lt;/h1>
&lt;h2 id="configuration-example">Configuration Example&lt;/h2>
&lt;p>The MoonScript configuration builder syntax uses function calls to define
variables. The advantage to this approach over using a Lua table literal is
that you can have logic surrounding your assignments. You can also freely mix
regular table objects.&lt;/p>
&lt;p>Here&amp;rsquo;s an example of the configuration DSL (domain specific language) and the
table it generates:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">some_function = -&amp;gt; steak &amp;#34;medium_well&amp;#34;
config &amp;#34;development&amp;#34;, -&amp;gt;
hello &amp;#34;world&amp;#34;
if 20 &amp;gt; 4
color &amp;#34;blue&amp;#34;
else
color &amp;#34;green&amp;#34;
custom_settings -&amp;gt;
age 10
enabled true
-- tables are merged
extra -&amp;gt;
name &amp;#34;leaf&amp;#34;
mood &amp;#34;happy&amp;#34;
extra -&amp;gt;
name &amp;#34;beef&amp;#34;
shoe_size 12
include some_function
include some_function
-- a normal table can be passed instead of a function
some_list {
1,2,3,4
}
-- use set to assign names that are unavailable
set &amp;#34;include&amp;#34;, &amp;#34;hello&amp;#34;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">{
hello: &amp;#34;world&amp;#34;
color: &amp;#34;blue&amp;#34;
custom_settings: {
age: 10
enabled: true
}
extra: {
name: &amp;#34;beef&amp;#34;
mood: &amp;#34;happy&amp;#34;
shoe_size: 12
steak: &amp;#34;medium_well&amp;#34;
}
steak: &amp;#34;medium_well&amp;#34;
some_list: { 1,2,3,4 }
include: &amp;#34;hello&amp;#34;
}
&lt;/code>&lt;/pre></content></item><item><title>moon_getting_started.md</title><link>/posts/misc/moon_getting_started/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/moon_getting_started/</guid><description>title: Creating a Lapis Application with MoonScript Creating a Lapis Application with MoonScript Creating a Basic Application You can start a new MoonScript project in the current directory by running the following command:
$ lapis new This provides us with a default Nginx configuration, nginx.conf, and a skeleton application, app.moon. The skeleton application looks like this:
-- app.moon lapis = require &amp;#34;lapis&amp;#34; class extends lapis.Application &amp;#34;/&amp;#34;: =&amp;gt; &amp;#34;Welcome to Lapis #{require &amp;#34;lapis.</description><content>&lt;h2 id="title-creating-a-lapis-application-with-moonscript">title: Creating a Lapis Application with MoonScript&lt;/h2>
&lt;!-- raw HTML omitted -->
&lt;h1 id="creating-a-lapis-application-with-moonscript">Creating a Lapis Application with MoonScript&lt;/h1>
&lt;h2 id="creating-a-basic-application">Creating a Basic Application&lt;/h2>
&lt;p>You can start a new MoonScript project in the current directory by running the
following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ lapis new
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This provides us with a default Nginx configuration, &lt;code>nginx.conf&lt;/code>, and a
skeleton application, &lt;code>app.moon&lt;/code>. The skeleton application looks like this:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">-- app.moon
lapis = require &amp;#34;lapis&amp;#34;
class extends lapis.Application
&amp;#34;/&amp;#34;: =&amp;gt;
&amp;#34;Welcome to Lapis #{require &amp;#34;lapis.version&amp;#34;}!&amp;#34;
]]
&lt;/code>&lt;/pre>&lt;p>This defines a regular Lua module that returns out application class. (Implicit
return in MoonScript states that the last statement in a block of code is the
return value.)&lt;/p>
&lt;blockquote>
&lt;p>Don&amp;rsquo;t forget to compile the &lt;code>.moon&lt;/code> files when changing and creating them.
You can watch the current directory and compile automatically with &lt;code>moonc -w&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>Try it out by starting the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>lapis server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you&amp;rsquo;ve compiled the &lt;code>.moon&lt;/code> file then &lt;a href="http://localhost:8080">http://localhost:8080&lt;/a> will display
the page.&lt;/p>
&lt;p>The members of the application class make up the patterns that can be matched
by incoming requests. This is referred to as the route and the action, where
the route is the pattern and the action is the function that handles the
matching route. In this example, the route &lt;code>&amp;quot;/&amp;quot;&lt;/code> is matched to a function that
returns &lt;code>&amp;quot;Hello World!&amp;quot;&lt;/code>&lt;/p>
&lt;p>The return value of an action determines what is written as the response. In
the simplest form we can return a string in order to write a string.&lt;/p>
&lt;blockquote>
&lt;p>Learn more about routes and actions and the return value in the &lt;a href="$root/reference/actions.html">Routes and
Actions&lt;/a> guide.&lt;/p>
&lt;/blockquote>
&lt;h2 id="lapis-applications">Lapis Applications&lt;/h2>
&lt;p>When we refer to a Lapis application we are talking about a class that extends
from &lt;code>lapis.Application&lt;/code>. The properties of the application make up the routes
the application can serve and the actions it will perform.&lt;/p>
&lt;p>If a property name is a string and begins with a &lt;code>&amp;quot;/&amp;quot;&lt;/code> or the property is a
table then it defines a route. All other properties are methods of the
application.&lt;/p>
&lt;h3 id="request-parameters">Request Parameters&lt;/h3>
&lt;p>Routes can contain special patterns that match parts of the URL and put them
into a request parameter.&lt;/p>
&lt;p>Named parameters are a &lt;code>:&lt;/code> followed by a name. They match all characters
excluding &lt;code>/&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class extends lapis.Application
&amp;#34;/user/:name&amp;#34;: =&amp;gt; &amp;#34;Hello #{@params.name}&amp;#34;
&lt;/code>&lt;/pre>&lt;p>If we were to go to the path &lt;code>&amp;quot;/user/leaf&amp;quot;&lt;/code>, &lt;code>@params.name&lt;/code> would be set to
&lt;code>&amp;quot;leaf&amp;quot;&lt;/code>.&lt;/p>
&lt;p>&lt;code>@params&lt;/code> holds all the parameters to the action. This is a concatenation of
the URL parameters, the GET parameters and the POST parameters.&lt;/p>
&lt;p>A splat will match all characters and is represented with a &lt;code>*&lt;/code>. Splats are not
named. The value of the splat is placed into &lt;code>@params.splat&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">&amp;#34;/things/*&amp;#34;: =&amp;gt; &amp;#34;Rest of the url: #{@params.splat}&amp;#34;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>Learn more about where parameters come from in the &lt;a href="$root/reference/actions.html#request-object">Request Object guide&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h3 id="the-action">The Action&lt;/h3>
&lt;p>The action is the function called in response to a route matching the path of a
request. Actions are written with the fat arrow, &lt;code>=&amp;gt;&lt;/code>, so you might think that
&lt;code>self&lt;/code> is an instance of application. It&amp;rsquo;s actually an instance of &lt;code>Request&lt;/code>, a
class that&amp;rsquo;s used to represent the current request.&lt;/p>
&lt;p>As we&amp;rsquo;ve already seen, the request holds all the parameters in &lt;code>@params&lt;/code>.&lt;/p>
&lt;p>We can the get the distinct parameters types using &lt;code>@GET&lt;/code>, &lt;code>@POST&lt;/code>, and
&lt;code>@url_params&lt;/code>.&lt;/p>
&lt;p>We can also access the instance of the application with &lt;code>@app&lt;/code>, and the raw
request and response with &lt;code>@req&lt;/code> and &lt;code>@res&lt;/code>.&lt;/p>
&lt;p>You should treat &lt;code>@app&lt;/code> as read only because the instance is shared among many
requests.&lt;/p>
&lt;blockquote>
&lt;p>Learn more about the request object in the &lt;a href="$root/reference/actions.html#request-object">Request Object guide&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h3 id="named-routes">Named Routes&lt;/h3>
&lt;p>It&amp;rsquo;s useful to give names to your routes so links to other pages can be
generated just by knowing the name of the page instead of hard-coding the
structure of the URL&lt;/p>
&lt;p>If the route of the action is a table with a single pair, then the key of that
table is the name and the value is the pattern. MoonScript gives us convenient
syntax for representing this:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class extends lapis.Application
[index: &amp;#34;/&amp;#34;]: =&amp;gt;
@url_for &amp;#34;user_profile&amp;#34;, name: &amp;#34;leaf&amp;#34;
[user_profile: &amp;#34;/user/:name&amp;#34;]: =&amp;gt;
&amp;#34;Hello #{@params.name}, go home: #{@url_for &amp;#34;index&amp;#34;}&amp;#34;
&lt;/code>&lt;/pre>&lt;p>We can generate the paths to various actions using &lt;code>@url_for&lt;/code>. The first
argument is the name of the route, and the second optional argument is a table
of values to fill a parameterized route with.&lt;/p>
&lt;h3 id="before-filters">Before Filters&lt;/h3>
&lt;p>Sometimes you want a piece of code to run before every action. A good example
of this is setting up the user session. We can declare a before filter, or a
function that runs before every action, like so:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">lapis = require &amp;#34;lapis&amp;#34;
class App extends lapis.Application
@before_filter =&amp;gt;
if @session.user
@current_user = load_user @session.user
&amp;#34;/&amp;#34;: =&amp;gt;
&amp;#34;current user is: #{@current_user}&amp;#34;
&lt;/code>&lt;/pre>&lt;p>You are free to add as many as you like by calling &lt;code>@before_filter&lt;/code> multiple
times. They will be run in the order they are registered.&lt;/p>
&lt;p>If a before filter calls the &lt;code>@write&lt;/code> method then the action will be canceled.
For example we can cancel the action and redirect to another page if some
condition is not met:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">lapis = require &amp;#34;lapis&amp;#34;
class App extends lapis.Application
@before_filter =&amp;gt;
unless user_meets_requirements!
@write redirect_to: @url_for &amp;#34;login&amp;#34;
&amp;#34;/&amp;#34;: =&amp;gt;
&amp;#34;Welcome to the page&amp;#34;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>&lt;code>@write&lt;/code> is what handles the return value of an action, so the same things
you can return in an action can be passed to &lt;code>@write&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h3 id="handling-http-verbs">Handling HTTP verbs&lt;/h3>
&lt;p>It&amp;rsquo;s common to have a single action do different things depending on the HTTP
verb. Lapis comes with some helpers to make writing these actions simple.
&lt;code>respond_to&lt;/code> takes a table indexed by HTTP verb with a value of the function to
perform when the action receives that verb.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">lapis = require &amp;#34;lapis&amp;#34;
import respond_to from require &amp;#34;lapis.application&amp;#34;
class App extends lapis.Application
[create_account: &amp;#34;/create_account&amp;#34;]: respond_to {
GET: =&amp;gt; render: true
POST: =&amp;gt;
create_user @params
redirect_to: @url_for &amp;#34;index&amp;#34;
}
&lt;/code>&lt;/pre>&lt;p>&lt;code>respond_to&lt;/code> can also take a before filter of its own that will run before the
corresponding HTTP verb action. We do this by specifying a &lt;code>before&lt;/code> function.
The same semantics of &lt;a href="#lapis-applications-before-filters">before filters&lt;/a>
apply, so if you call &lt;code>@write&lt;/code> then the rest of the action will not get run.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">lapis = require &amp;#34;lapis&amp;#34;
class App extends lapis.Application
&amp;#34;/edit_user/:id&amp;#34;: respond_to {
before: =&amp;gt;
@user = Users\find @params.id
@write status: 404, &amp;#34;Not Found&amp;#34; unless @user
GET: =&amp;gt;
&amp;#34;Welcome &amp;#34; .. @user.name
POST: =&amp;gt;
@user\update @params.user
redirect_to: @url_for &amp;#34;index&amp;#34;
}
&lt;/code>&lt;/pre>&lt;h3 id="sub-applications">Sub-Applications&lt;/h3>
&lt;p>As your web application becomes more complex it helps to break it apart into
multiple sub-applications. Lapis doesn&amp;rsquo;t place any rules on how you divide your
application, instead it facilities the combination of applications.&lt;/p>
&lt;h4 id="includeother_application-opts">&lt;code>@include(other_application, [opts])&lt;/code>&lt;/h4>
&lt;p>Let&amp;rsquo;s say we&amp;rsquo;ve got a separate application for handling users:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">-- applications/users.moon
lapis = require &amp;#34;lapis&amp;#34;
class UsersApplication extends lapis.Application
[login: &amp;#34;/login&amp;#34;]: do_login!
[logout: &amp;#34;/logout&amp;#34;]: do_logout!
&lt;/code>&lt;/pre>&lt;p>We can include this application into our main one:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">-- app.moon
lapis = require &amp;#34;lapis&amp;#34;
class extends lapis.Application
@include &amp;#34;applications.users&amp;#34;
[index: &amp;#34;/&amp;#34;]: =&amp;gt;
@html -&amp;gt;
a href: @url_for(&amp;#34;login&amp;#34;), &amp;#34;Log in&amp;#34;
&lt;/code>&lt;/pre>&lt;p>In this example &lt;code>applications/user.moon&lt;/code> is a module that returns the
sub-application. The &lt;code>include&lt;/code> class method is used to load this application
into our root one. &lt;code>include&lt;/code> copies all the routes of the other application,
leaving the original untouched.&lt;/p>
&lt;p>Sub-applications are allowed to have before filters, and the before filters
will only apply to all actions enclosed by the application.&lt;/p>
&lt;p>A sub-application supports special &lt;code>path&lt;/code> and &lt;code>name&lt;/code> class values:&lt;/p>
&lt;ul>
&lt;li>&lt;code>path&lt;/code> &amp;ndash; The patterns of the routes copied are prefixed with &lt;code>path&lt;/code>&lt;/li>
&lt;li>&lt;code>name&lt;/code> &amp;ndash; The names of all the routes copied are prefixed with &lt;code>name&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class UsersApplication extends lapis.Application
@path: &amp;#34;/users&amp;#34;
@name: &amp;#34;user_&amp;#34;
-- etc...
&lt;/code>&lt;/pre>&lt;p>&lt;code>include&lt;/code> takes an optional second argument, a table of options. The options
can be used to provide or override the &lt;code>path&lt;/code> and &lt;code>name&lt;/code> values that might have
been set in the application.&lt;/p>
&lt;p>For example, we might prefix &lt;code>UsersApplication&lt;/code> like so:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">class extends lapis.Application
@include &amp;#34;applications.users&amp;#34;, path: &amp;#34;/users&amp;#34;, name: &amp;#34;user_&amp;#34;
&amp;#34;/&amp;#34;: =&amp;gt;
@url_for(&amp;#34;user_login&amp;#34;) -- returns &amp;#34;/users/login&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="class-methods">Class Methods&lt;/h3>
&lt;h4 id="find_actionaction_name">&lt;code>@find_action(action_name)&lt;/code>&lt;/h4>
&lt;p>Returns the function of the action that has the name specified by
&lt;code>action_name&lt;/code>.&lt;/p></content></item><item><title>moonscript.md</title><link>/posts/misc/moonscript/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/moonscript/</guid><description>title: Moonscript Moonscript 语法特点类似python和coffescript
类的使用 定义一个类，作为模块输入也可以 module &amp;#34;WS&amp;#34;,package.seeall require &amp;#34;lfs&amp;#34; class WS -- Constructor -- class variables: -- @dirs table holds array of files name to handle new: =&amp;gt; @dirs = {} @source = &amp;#34;&amp;#34; @target = &amp;#34;&amp;#34; -- pwd -- print current working directory pwd:()=&amp;gt; pwd = lfs.currentdir! print(pwd) -- link -- making symbolic link,s as source file,t as target file link:(s,t)=&amp;gt; lfs.link s,t,1 mkdp:(path)=&amp;gt; lfs.mkdir path -- walk -- walk through a directory -- if is directory, continue searching the subdirectories and files -- getting attributes and show them walk:(path)=&amp;gt; for file in lfs.</description><content>&lt;h2 id="title-moonscript">title: Moonscript&lt;/h2>
&lt;h1 id="moonscript">Moonscript&lt;/h1>
&lt;p>语法特点类似python和coffescript&lt;/p>
&lt;h2 id="类的使用">类的使用&lt;/h2>
&lt;h3 id="定义一个类作为模块输入也可以">定义一个类，作为模块输入也可以&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">module &amp;#34;WS&amp;#34;,package.seeall
require &amp;#34;lfs&amp;#34;
class WS
-- Constructor
-- class variables:
-- @dirs table holds array of files name to handle
new: =&amp;gt;
@dirs = {}
@source = &amp;#34;&amp;#34;
@target = &amp;#34;&amp;#34;
-- pwd
-- print current working directory
pwd:()=&amp;gt;
pwd = lfs.currentdir!
print(pwd)
-- link
-- making symbolic link,s as source file,t as target file
link:(s,t)=&amp;gt;
lfs.link s,t,1
mkdp:(path)=&amp;gt;
lfs.mkdir path
-- walk
-- walk through a directory
-- if is directory, continue searching the subdirectories and files
-- getting attributes and show them
walk:(path)=&amp;gt;
for file in lfs.dir path
if file != &amp;#34;.&amp;#34; and file != &amp;#34;..&amp;#34;
filepath = path..&amp;#34;/&amp;#34;..file
attr = lfs.attributes filepath
if attr.mode == &amp;#34;directory&amp;#34;
@walk filepath
else
for i,v in pairs attr
print i,v
--checking os
--uname
--ostypes are Darwin,Linux,Windows
checkos:(v)=&amp;gt;
switch v
when &amp;#34;Linux&amp;#34; then return &amp;#34;Linux&amp;#34;
when &amp;#34;Darwin&amp;#34; then return &amp;#34;Darwin&amp;#34;
when &amp;#34;Windows&amp;#34; then retrun &amp;#34;Windows&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="使用这个类非常简单">使用这个类非常简单&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-moon" data-lang="moon">WS = require &amp;#34;WS&amp;#34;
dirs = {
&amp;#34;java101&amp;#34;,
&amp;#34;lua101&amp;#34;,
&amp;#34;python101&amp;#34;,
&amp;#34;R101&amp;#34;,
&amp;#34;tex101&amp;#34;,
&amp;#34;java101&amp;#34;,
&amp;#34;wiki101&amp;#34;,
}
base_linux = &amp;#34;/home/linuxing3/workspace&amp;#34;
newbase_linux = &amp;#34;/workspace&amp;#34;
base_mac = &amp;#34;/Volumes/mac/Tdownload/workspace&amp;#34;
newbase_mac = &amp;#34;/Users/linuxing3/workspace&amp;#34;
-- class WS
-- A object of workspace
ws = WS!
ws\pwd!
-- initialize ws object with dirs,source,target
ws.dirs = dirs
ws.source = base_linux
ws.target = newbase_linux
print &amp;#34;Your source directory is &amp;#34;..ws.source
print &amp;#34;Your source directory is &amp;#34;..ws.target
print file for i,file in pairs ws.dirs
switch ws\checkos &amp;#34;Linux&amp;#34;
when &amp;#34;Linux&amp;#34; then ws.source = base_linux
&lt;/code>&lt;/pre></content></item><item><title>notion.md</title><link>/posts/linux/notion/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/linux/notion/</guid><description>Notion Tiling Mostly used Win+P up/down Win+Tab left/right Win+s split up-down Win+k s split left-right Win+, swith workspace Win+Enter Maximize
&amp;quot; ============================================================================ &amp;quot; Netrw Directory Listing (netrw v152) &amp;quot; /root &amp;quot; Sorted by name &amp;quot; Sort sequence: [/]$,&amp;lt;core%(.\d+)=&amp;gt;,.h$,.c$,.cpp$,~=*$,,.o$,.obj$,.info$,.swp$,.bak$,~$ &amp;quot; Copy/Move Tgt: /root/Desktop/ (local) &amp;quot; Quick Help: :help -:go up dir D:delete R:rename s:sort-by x:special &amp;quot; ============================================================================== ../ ./ .adobe/ .android/ .atom/ .cache/ .config/ .cscope.vim/ .dbus/ .dock-formulas/ .emacs.d/ .fltk/ .gem/ .getmail/ .</description><content>&lt;h1 id="notion-tiling">Notion Tiling&lt;/h1>
&lt;h2 id="mostly-used">Mostly used&lt;/h2>
&lt;p>Win+P up/down
Win+Tab left/right
Win+s split up-down
Win+k s split left-right
Win+, swith workspace
Win+Enter Maximize&lt;/p>
&lt;p>&amp;quot; ============================================================================
&amp;quot; Netrw Directory Listing (netrw v152)
&amp;quot; /root
&amp;quot; Sorted by name
&amp;quot; Sort sequence: [/]$,&amp;lt;core%(.\d+)=&amp;gt;,.h$,.c$,.cpp$,~=*$,&lt;em>,.o$,.obj$,.info$,.swp$,.bak$,~$
&amp;quot; Copy/Move Tgt: /root/Desktop/ (local)
&amp;quot; Quick Help: &lt;!-- raw HTML omitted -->:help -:go up dir D:delete R:rename s:sort-by x:special
&amp;quot; ==============================================================================
../
./
.adobe/
.android/
.atom/
.cache/
.config/
.cscope.vim/
.dbus/
.dock-formulas/
.emacs.d/
.fltk/
.gem/
.getmail/
.links/
.local/
.luarocks/
.luarocks_/
.macromedia/
.meteor/
.mozilla/
.node-gyp/
.notion/
.npm/
.pip/
.pki/
.putty/
.ssh/
.vim-fuf-data/
.vim/
.vnc/
.w3m/
Desktop/
Downloads/
VirtualBox VMs/
bin/
dev/
dotfiles/
init/
me/
.osx&lt;/em>
Aptfile*
Brewfile*
Caskfile*
Pacmanfile*
.Xauthority
.Xdefaults
.Xdefaults.light
.aliases
.bash_history
.bash_profile
.bash_prompt
.bashrc
.curlrc
.editorconfig
.emacs
.esmtprc
.exports
.extras
.fbtermrc
.fbtermrc.light
.functions
.gemrc
.git-credentials
.gitattributes
.gitconfig
.gitignore
.gvimrc
.hgignore
.hushlogin
.inputrc
.java_history
.lesshst
.msmtprc
.mutt.alias
.muttrc
.npmrc
.path
.procmail
.python_history
.rediscli_history
.screenrc
.taskrc
.tmux.conf
.todo
.viminfo
.viminfo.tmp
.vimrc
.wgetrc
.xinitrc
dump.rdb
linuxing3@&lt;/p>
&lt;h2 id="globally-available-bindings">Globally available bindings&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span> Mod1+C Close current frames or screens
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+1, Mod1+2, Mod1+3, Mod1+4, Mod1+5, Mod1+6, Mod1+7, Mod1+8, Mod1+9, Mod1+0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Switch to n:th object &lt;span style="color:#f92672">(&lt;/span>workspace, full screen client window&lt;span style="color:#f92672">)&lt;/span> within current
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> screen.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+comma, Mod1+period
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Switch to next/previous object within current screen.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K K
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Go to first region demanding attention or previously active one.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K T
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Clear all tags.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+Shift+1, Mod1+Q, Mod1+Shift+2, Mod1+W, Mod1+Shift+3, Mod1+E
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Go to n:th screen on multihead setup.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+Shift+comma, Mod1+I, Mod1+O, Mod1+grave
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Go to next/previous screen on multihead setup.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+F9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Create a new workspace of chosen default type.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> F12, Button3 press
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Display the main menu.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Button2 press
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Display the window list menu.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+Tab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Forward-circulate focus.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K Tab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Backward-circulate focus.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K R
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Raise focused object, &lt;span style="color:#66d9ef">if&lt;/span> possible.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bindings operating on all frames
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K H, Mod1+K V
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Maximize the frame horizontally/vertically.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Button3 press
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Display context menu.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+R Begin move/resize mode.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Button1 click at tab, Button2 click at tab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Switch the frame to display the object indicated by the tab.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Button1 drag at border, Mod1+Button3 drag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Resize the frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+Button1 drag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Move the frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Button1 drag at tab, Button2 drag at tab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Move objects between frames by dragging and dropping the tab.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+Button4 click, Mod1+Button5 click
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Switch to next/previous object within the frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bindings operating on top-level &lt;span style="color:#f92672">(&lt;/span>non-transient&lt;span style="color:#f92672">)&lt;/span> frames and screens
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+T Toggle tag of current object.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+L Lock screen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> F1 Query &lt;span style="color:#66d9ef">for&lt;/span> manual page to be displayed.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+F1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Show the Notion manual page.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> F2 Run a terminal emulator.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> F3 Query &lt;span style="color:#66d9ef">for&lt;/span> command line to execute.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+F3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Query &lt;span style="color:#66d9ef">for&lt;/span> Lua code to execute.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> F4 Query &lt;span style="color:#66d9ef">for&lt;/span> host to connect to with SSH.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> F5 Query &lt;span style="color:#66d9ef">for&lt;/span> file to edit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> F6 Query &lt;span style="color:#66d9ef">for&lt;/span> file to view.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> F9 Query &lt;span style="color:#66d9ef">for&lt;/span> workspace to go to or create a new one.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+G Query &lt;span style="color:#66d9ef">for&lt;/span> a client window to go to.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+M Display context menu.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K D
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Detach &lt;span style="color:#f92672">(&lt;/span>float&lt;span style="color:#f92672">)&lt;/span> or reattach an object to its previous location.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bindings operating on top-level &lt;span style="color:#f92672">(&lt;/span>non-transient&lt;span style="color:#f92672">)&lt;/span> frames
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+A Query &lt;span style="color:#66d9ef">for&lt;/span> a client window to attach.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K 1, Mod1+K 2, Mod1+K 3, Mod1+K 4, Mod1+K 5, Mod1+K 6, Mod1+K 7, Mod1+K 8, Mod1+K
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 9, Mod1+K &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Switch to n:th object within the frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K N, Mod1+K P
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Switch to next/previous object within the frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K comma, Mod1+K period
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Move current object within the frame left/right.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K H, Mod1+K V
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Maximize the frame horizontally/vertically.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attach tagged objects to this frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bindings &lt;span style="color:#66d9ef">for&lt;/span> floating/detached frames
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Button1 double click at tab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Toggle shade mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Button1 press at tab, Button1 press at border, Mod1+Button1 click
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Raise the frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+Button3 click
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Lower the frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Button1 drag at tab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Move the frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K B
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tile frame, &lt;span style="color:#66d9ef">if&lt;/span> no tiling exists on the workspace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bindings &lt;span style="color:#66d9ef">for&lt;/span> tilings and tiled frames &lt;span style="color:#f92672">[&lt;/span>mod_tiling&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+S Split current frame vertically.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+P, Mod1+N, Mod1+Shift+Button4 click, Mod1+Shift+Button5 click
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Go to frame above/below current frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+Tab, Mod1+K Tab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Go to frame right/left of current frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K S
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Split current frame horizontally.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K X
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Destroy current frame.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bindings &lt;span style="color:#66d9ef">for&lt;/span> client windows
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mod1+K Mod1+L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Nudge the client window. This might help with some programs&lt;span style="color:#e6db74">&amp;#39; resizing problems.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Mod1+K C
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Kill client owning the client window.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Mod1+K Q
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Send next key press to the client window. Some programs may not allow this by
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> default.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Mod1+Return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Toggle client window group full-screen mode
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Move/resize mode bindings
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Escape Cancel the resize mode.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Return End the resize mode.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Left, Right, Up, Down, F, B, P, N
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Grow in specified direction.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Shift+Left, Shift+Right, Shift+Up, Shift+Down, Shift+F, Shift+B, Shift+P, Shift+N
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Shrink in specified direction.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Mod1+Left, Mod1+Right, Mod1+Up, Mod1+Down, Mod1+F, Mod1+B, Mod1+P, Mod1+N
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Move in specified direction.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Bindings for message boxes and queries [mod_query]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Escape, Control+G, Control+C
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Close the query/message box, not executing bound actions.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+U, Control+V, Page_Up, Page_Down
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Scroll the message or completions up/down.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Bindings for editing in queries [mod_query]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> These bindings are similar to those of the joe(1) text editor. Cut, copy and paste
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> works in a more conventional manner, though, but the keys are equivalent.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+F, Control+B, Right, Left
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Move one character forward/backward.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+E, Control+A, End, Home
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Go to end/beginning.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+X, Control+Z
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Skip one word forward/backward.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+D, Delete
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Delete next character.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> BackSpace, Control+H
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Delete previous character.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+W, Control+O
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Delete one word forward/backward.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+J
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Delete to end of line.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+Y
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Delete the whole line.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+T
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Transpose characters.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+P, Control+N, Up, Down, Control+Up, Control+Down
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Select next/previous (matching) history entry.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Button2 click, Control+K C
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Paste from the clipboard.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+K B
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Set mark/begin selection.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+K Y
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Cut selection.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+K K
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Copy selection.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+K G
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Clear mark/cancel selection.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Tab, Shift+Tab, Control+Tab
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Try to complete the entered text or cycle through completions.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+R, Control+S
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Complete from history
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+M, Return, KP_Enter
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Close the query and execute bound action.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Bindings for menus [mod_menu]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Escape, Control+G, Control+C, Left
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Close the menu.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Return, KP_Enter, Control+M, Right
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Activate current menu entry.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Control+N, Control+P, Up, Down
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Select next/previous menu entry.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> BackSpace
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Clear the menu&amp;#39;&lt;/span>s typeahead find buffer.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>openresty.md</title><link>/posts/misc/openresty/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/openresty/</guid><description>openresty luajit install pacman -S luajit this will install luajit into usr/bin and lib files into usr/lib/luajit-2.0/
lib and include cp /usr/lib/luajit-2.0/* /usr/lib/ nginx/conf/nginx.conf http { include mime.types; default_type application/octet-stream; sendfile on; lua_shared_dict config 1m; lua_package_path &amp;#34;conf/?.lua;;&amp;#34;; init_by_lua_file &amp;#34;conf/init.lua&amp;#34;; server { listen 80; server_name localhost; location /luaredis { content_by_lua_file &amp;#34;conf/content.lua&amp;#34;; } } } nginx/conf/init.lua local cjson = require &amp;#34;cjson&amp;#34; local config = ngx.shared.config local file = io.open(&amp;#34;conf/config.json&amp;#34;,&amp;#34;r&amp;#34;) local content = cjson.</description><content>&lt;h1 id="openresty">openresty&lt;/h1>
&lt;h2 id="luajit-install">luajit install&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pacman -S luajit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>this will install luajit into &lt;code>usr/bin&lt;/code> and &lt;code>lib&lt;/code> files into &lt;code>usr/lib/luajit-2.0/&lt;/code>&lt;/p>
&lt;h2 id="lib-and-include">lib and include&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>cp /usr/lib/luajit-2.0/* /usr/lib/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginxconfnginxconf">nginx/conf/nginx.conf&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>http {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> include mime.types;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_type application/octet-stream;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sendfile on;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lua_shared_dict config 1m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lua_package_path &amp;#34;conf/?.lua;;&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> init_by_lua_file &amp;#34;conf/init.lua&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen 80;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_name localhost;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location /luaredis {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content_by_lua_file &amp;#34;conf/content.lua&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginxconfinitlua">nginx/conf/init.lua&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> cjson &lt;span style="color:#f92672">=&lt;/span> require &lt;span style="color:#e6db74">&amp;#34;cjson&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> config &lt;span style="color:#f92672">=&lt;/span> ngx.shared.config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> file &lt;span style="color:#f92672">=&lt;/span> io.open(&lt;span style="color:#e6db74">&amp;#34;conf/config.json&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> content &lt;span style="color:#f92672">=&lt;/span> cjson.decode(file:read(&lt;span style="color:#e6db74">&amp;#34;*all&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>file:close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> name, value &lt;span style="color:#66d9ef">in&lt;/span> pairs(content) &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config:set(name,value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginxconfconfigjson">nginx/conf/config.json&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f92672">&amp;#34;host&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;127.0.0.1&amp;#34;&lt;/span>,&lt;span style="color:#f92672">&amp;#34;port&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;6379&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginxconfcontentlua">nginx/conf/content.lua&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>ngx.header.content_type &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;text/plain&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> redis &lt;span style="color:#f92672">=&lt;/span> require &lt;span style="color:#e6db74">&amp;#34;resty.redis&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> config &lt;span style="color:#f92672">=&lt;/span> ngx.shared.config;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> instance &lt;span style="color:#f92672">=&lt;/span> redis:new();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> host &lt;span style="color:#f92672">=&lt;/span> config:get(&lt;span style="color:#e6db74">&amp;#34;host&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> port &lt;span style="color:#f92672">=&lt;/span> config:get(&lt;span style="color:#e6db74">&amp;#34;port&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ngx.say(&lt;span style="color:#e6db74">&amp;#34;Redis server conneted on &amp;#34;&lt;/span>,host, &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>, port);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> ok,err &lt;span style="color:#f92672">=&lt;/span> instance:connect(host, port);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ngx.say(err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> ok &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>instance:set(&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Grand Xing Wenju &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>instance:set(&lt;span style="color:#e6db74">&amp;#34;work&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Diplomat&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> name &lt;span style="color:#f92672">=&lt;/span> instance:get(&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">local&lt;/span> work &lt;span style="color:#f92672">=&lt;/span> instance:get(&lt;span style="color:#e6db74">&amp;#34;work&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ngx.say(&lt;span style="color:#e6db74">&amp;#34;name: &amp;#34;&lt;/span>, name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ngx.say(&lt;span style="color:#e6db74">&amp;#34;work: &amp;#34;&lt;/span>, work);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="test-it">Test it!&lt;/h2>
&lt;p>Then open your browser &lt;code>http://127.0.0.1/luaredis&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Redis server conneted on 127.0.0.1:6379
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nil
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name: Grand Xing Wenju
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>work: Diplomat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="complete-nginxconf-file">Complete &lt;code>nginx.conf&lt;/code> file&lt;/h1>
&lt;p>#user nobody;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>worker_processes 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#error_log logs/error.log;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#error_log logs/error.log notice;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#error_log logs/error.log info;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#pid logs/nginx.pid;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>events {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> worker_connections 1024;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>http {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> include mime.types;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_type application/octet-stream;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #log_format main &amp;#39;$remote_addr - $remote_user [$time_local] &amp;#34;$request&amp;#34; &amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # &amp;#39;$status $body_bytes_sent &amp;#34;$http_referer&amp;#34; &amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # &amp;#39;&amp;#34;$http_user_agent&amp;#34; &amp;#34;$http_x_forwarded_for&amp;#34;&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #access_log logs/access.log main;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #tcp_nopush on;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #keepalive_timeout 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keepalive_timeout 65;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #gzip on;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#sendfile on;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lua_shared_dict config 1m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lua_package_path &amp;#34;conf/?.lua;;&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> init_by_lua_file &amp;#34;conf/init.lua&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen 80;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_name localhost;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #charset koi8-r;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #access_log logs/host.access.log main;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location / {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> root html;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index index.html index.htm index.lsp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location = /lua{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_type &amp;#39;text/plain&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content_by_lua &amp;#39;ngx.say(&amp;#34;Hello Lua!&amp;#34;)&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location /luaredis {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_type &amp;#39;text/plain&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content_by_lua_file &amp;#34;conf/content.lua&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location = /addr {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_type &amp;#39;text/plain&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set $a &amp;#34;hello&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set $b &amp;#34;world&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set_by_lua_file $res &amp;#34;conf/addr.lua&amp;#34; $a $b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo $res;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #error_page 404 /404.html;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location = /test {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default_type &amp;#39;text/plain&amp;#39;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content_by_lua_file &amp;#34;conf/test.lua&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # redirect server error pages to the static page /50x.html
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> error_page 500 502 503 504 /50x.html;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> location = /50x.html {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> root html;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # proxy the PHP scripts to Apache listening on 127.0.0.1:80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #location ~ \.php$ {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # proxy_pass http://127.0.0.1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #location ~ \.php$ {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # root html;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # fastcgi_pass 127.0.0.1:9000;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # fastcgi_index index.php;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # include fastcgi_params;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # deny access to .htaccess files, if Apache&amp;#39;s document root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # concurs with nginx&amp;#39;s one
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #location ~ /\.ht {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # deny all;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # another virtual host using mix of IP-, name-, and port-based configuration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # listen 8000;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # listen somename:8080;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # server_name somename alias another.alias;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # location / {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # root html;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # index index.html index.htm;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # HTTPS server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # listen 443 ssl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # server_name localhost;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ssl_certificate cert.pem;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ssl_certificate_key cert.key;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ssl_session_cache shared:SSL:1m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ssl_session_timeout 5m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ssl_ciphers HIGH:!aNULL:!MD5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ssl_prefer_server_ciphers on;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # location / {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # root html;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # index index.html index.htm;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>pointer.md</title><link>/posts/misc/pointer/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/pointer/</guid><description>Using C++ standard input and output printf with format function call pointer and reference template of pan-class compile as follows g++ -o hello hello.cpp source code hello.cpp #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;iostream&amp;gt; #define Say(str) puts(#str) class myClass { public: int n; int array[3]; private: }; template&amp;lt;class T&amp;gt; void display(T *p,int v){ printf(&amp;#34;| 0x%x| &amp;lt;-------|%d|\n&amp;#34;,p,v); } void displayClass(myClass *p,int v){ printf(&amp;#34;| 0x%x| &amp;lt;-------|%d|\n&amp;#34;,p,v); } void displayInt(int *p,int v){ printf(&amp;#34;| 0x%x| &amp;lt;-------|%d|\n&amp;#34;,p,v); } void addFive(int* n){ *n = *n + 5; } int main( int argc, char **argv ) { int a = 10; int *p,*p2; p = &amp;amp; a; addFive(p); printf(&amp;#34;---------\n&amp;#34;); printf(&amp;#34;addr: | 0x%x|\n&amp;#34;,p); printf(&amp;#34;---------\n&amp;#34;); printf(&amp;#34;value of variable a |%d|\n&amp;#34;,a); printf(&amp;#34;---------\n&amp;#34;); printf(&amp;#34;value of pointer: |%d|\n&amp;#34;,*p); printf(&amp;#34;---------\n&amp;#34;); p2 = p++; printf(&amp;#34;---------\n&amp;#34;); printf(&amp;#34;addr: | 0x%x|\n&amp;#34;,p2); printf(&amp;#34;---------\n&amp;#34;); printf(&amp;#34;value of variable a |%d|\n&amp;#34;,a); printf(&amp;#34;---------\n&amp;#34;); printf(&amp;#34;value of pointer: |%d|\n&amp;#34;,*p2); printf(&amp;#34;---------\n&amp;#34;); // class called myClass *mc = new myClass; int input; std::cout&amp;lt;&amp;lt; &amp;#34;Input a number:\n&amp;#34; &amp;lt;&amp;lt; std::endl; std::cin &amp;gt;&amp;gt; input; mc-&amp;gt;n = input; int *pArray; mc-&amp;gt;array[0]= 30; pArray = &amp;amp; mc-&amp;gt;array[0]; std::cout&amp;lt;&amp;lt; &amp;#34;Display with no template :\n&amp;#34; &amp;lt;&amp;lt; std::endl; displayClass(mc,mc-&amp;gt;n); displayInt(pArray,mc-&amp;gt;array[0]); std::cout&amp;lt;&amp;lt; &amp;#34;Display with template :\n&amp;#34; &amp;lt;&amp;lt; std::endl; display(mc,mc-&amp;gt;n); display(pArray,mc-&amp;gt;array[0]); return 0; }</description><content>&lt;h1 id="using-c">Using C++&lt;/h1>
&lt;h2 id="standard-input-and-output">standard input and output&lt;/h2>
&lt;h2 id="printf-with-format">printf with format&lt;/h2>
&lt;h2 id="function-call">function call&lt;/h2>
&lt;h2 id="pointer-and-reference">pointer and reference&lt;/h2>
&lt;h2 id="template-of-pan-class">template of pan-class&lt;/h2>
&lt;h2 id="compile-as-follows">compile as follows&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>g++ -o hello hello.cpp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="source-code-hellocpp">source code &lt;code>hello.cpp&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define Say(str) puts(#str)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">myClass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> n;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> array[&lt;span style="color:#ae81ff">3&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">template&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">T&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> display(T &lt;span style="color:#f92672">*&lt;/span>p,&lt;span style="color:#66d9ef">int&lt;/span> v){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;| 0x%x| &amp;lt;-------|%d|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,p,v);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">displayClass&lt;/span>(myClass &lt;span style="color:#f92672">*&lt;/span>p,&lt;span style="color:#66d9ef">int&lt;/span> v){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;| 0x%x| &amp;lt;-------|%d|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,p,v);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">displayInt&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>p,&lt;span style="color:#66d9ef">int&lt;/span> v){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;| 0x%x| &amp;lt;-------|%d|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,p,v);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">addFive&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">*&lt;/span> n){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>n &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>( &lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>p,&lt;span style="color:#f92672">*&lt;/span>p2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> a;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addFive(p);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;---------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;addr: | 0x%x|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,p);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;---------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;value of variable a |%d|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;---------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;value of pointer: |%d|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,&lt;span style="color:#f92672">*&lt;/span>p);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;---------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p2 &lt;span style="color:#f92672">=&lt;/span> p&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;---------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;addr: | 0x%x|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,p2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;---------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;value of variable a |%d|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;---------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;value of pointer: |%d|&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,&lt;span style="color:#f92672">*&lt;/span>p2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;---------&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// class called
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> myClass &lt;span style="color:#f92672">*&lt;/span>mc &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> myClass;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> input;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout&lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Input a number:&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cin &lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> input;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mc&lt;span style="color:#f92672">-&amp;gt;&lt;/span>n &lt;span style="color:#f92672">=&lt;/span> input;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>pArray;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mc&lt;span style="color:#f92672">-&amp;gt;&lt;/span>array[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pArray &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> mc&lt;span style="color:#f92672">-&amp;gt;&lt;/span>array[&lt;span style="color:#ae81ff">0&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout&lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Display with no template :&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> displayClass(mc,mc&lt;span style="color:#f92672">-&amp;gt;&lt;/span>n);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> displayInt(pArray,mc&lt;span style="color:#f92672">-&amp;gt;&lt;/span>array[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout&lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Display with template :&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display(mc,mc&lt;span style="color:#f92672">-&amp;gt;&lt;/span>n);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> display(pArray,mc&lt;span style="color:#f92672">-&amp;gt;&lt;/span>array[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>proxys.md</title><link>/posts/misc/proxys/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/proxys/</guid><description>title: &amp;ldquo;Proxy matters&amp;rdquo; 设置成功基本开发环境 nodejs express redis
npm proxy npm config set registry http://registry.npmjs.vitecho.com npm config set proxy=http://127.0.0.1:3127 wgetrc http_proxy = http://10.0.2.2:3128/ ftp_proxy = http://10.0.2.2:3128/ use_proxy = on wait = 15 ##ubuntu下apt-get设置代理成功，原来只能用-o参数 apt-get install -o Acquire::http::proxy= ip地址端口 wget
git代理，使用gitconfig文件，通过命令可以设置 git config --global http.proxy=10.0.2.2:3128 git config –global http.sslverify false 在gitconfig文件中 proxy = http://127.0.0.1:3127 ##gem代理，使用&amp;ndash;http-proxy ip地址端口 gem install &amp;ndash;http-proxy http://10.0.2.2:3128 $gem_name #
###在.gemrc中
--- :backtrace: false :bulk_threshold: 1000 :sources: - http://ruby.taobao.org :update_sources: true :verbose: true :http_proxy: - http://proxy.</description><content>&lt;h2 id="title-proxy-matters">title: &amp;ldquo;Proxy matters&amp;rdquo;&lt;/h2>
&lt;h2 id="设置成功基本开发环境">设置成功基本开发环境&lt;/h2>
&lt;p>nodejs
express
redis&lt;/p>
&lt;h3 id="npm-proxy">npm proxy&lt;/h3>
&lt;pre>&lt;code>npm config set registry http://registry.npmjs.vitecho.com
npm config set proxy=http://127.0.0.1:3127
&lt;/code>&lt;/pre>
&lt;h3 id="wgetrc">wgetrc&lt;/h3>
&lt;pre>&lt;code>http_proxy = http://10.0.2.2:3128/
ftp_proxy = http://10.0.2.2:3128/
use_proxy = on
wait = 15
&lt;/code>&lt;/pre>
&lt;p>##ubuntu下apt-get设置代理成功，原来只能用-o参数
apt-get install -o Acquire::http::proxy= ip地址端口 wget&lt;/p>
&lt;h2 id="git代理使用gitconfig文件通过命令可以设置">git代理，使用gitconfig文件，通过命令可以设置&lt;/h2>
&lt;pre>&lt;code>git config --global http.proxy=10.0.2.2:3128
git config –global http.sslverify false
&lt;/code>&lt;/pre>
&lt;h3 id="在gitconfig文件中">在gitconfig文件中&lt;/h3>
&lt;pre>&lt;code>proxy = http://127.0.0.1:3127
&lt;/code>&lt;/pre>
&lt;p>##gem代理，使用&amp;ndash;http-proxy ip地址端口
gem install &amp;ndash;http-proxy http://10.0.2.2:3128 $gem_name #&lt;/p>
&lt;p>###在.gemrc中&lt;/p>
&lt;pre>&lt;code>---
:backtrace: false
:bulk_threshold: 1000
:sources:
- http://ruby.taobao.org
:update_sources: true
:verbose: true
:http_proxy:
- http://proxy.mfa.gov.cn:90
&lt;/code>&lt;/pre>
&lt;h2 id="w3m代理">w3m代理&lt;/h2>
&lt;p>~/.w3m/w3mrc&lt;/p>
&lt;h2 id="elinks">elinks&lt;/h2>
&lt;p>~/.elinks/elinks.conf&lt;/p>
&lt;p>##　在iphone下设置开发环境&lt;/p>
&lt;ol>
&lt;li>安装node&lt;/li>
&lt;li>用npm安装expess、redis、coffee-script等模块&lt;/li>
&lt;li>安装ruby和gem，并尝试安装rails、&lt;/li>
&lt;li>安装git&lt;/li>
&lt;/ol>
&lt;h2 id="iphone-usb连接上网">iphone usb连接上网&lt;/h2>
&lt;h3 id="用itools开启iphone的ssh隧道">用itools开启iphone的ssh隧道&lt;/h3>
&lt;h3 id="用putty成功连接iphone并设置了端口转发">用putty成功连接iphone并设置了端口转发&lt;/h3>
&lt;p>1.将iphone上3128端口，转到电脑本机的3128端口，作为代理&lt;/p>
&lt;p>2.将iphone上3127端口，转到proxy.mfa.gov.cn的80端口，作为直接的代理&lt;/p>
&lt;p>3.将iphone上6379端口，转到电脑本机的6379端口，作为redis服务器&lt;/p>
&lt;p>4.将本机1337端口，转到iphone的1337端口，通过电脑访问iphone上的nodejs服务器&lt;/p>
&lt;h3 id="iphone设置">iphone设置&lt;/h3>
&lt;ul>
&lt;li>用wifi&lt;/li>
&lt;/ul>
&lt;p>在mac笔记本上创建一个电脑对电脑的网络lenovo&lt;/p>
&lt;p>固定ip地址 192.168.1.3&lt;/p>
&lt;p>在iphone上连接lenovo热点&lt;/p>
&lt;p>固定ip地址 192.168.1.2&lt;/p>
&lt;p>代理设为127.0.0.1：3127&lt;/p>
&lt;ul>
&lt;li>用3G&lt;/li>
&lt;/ul>
&lt;p>打开3G网络&lt;/p>
&lt;p>通过属性表管理器编辑preferences.list文件，设置ip1的代理为127.0.0.1:3127，并将使用代理设为1&lt;/p>
&lt;p>重启手机后生效&lt;/p>
&lt;p>完成上述步骤，手机已经可以上网了&lt;/p>
&lt;h3 id="将iphone连接分享给电脑">将iphone连接分享给电脑&lt;/h3>
&lt;p>在电脑上将代理设置为192.168.1.3:3127即可&lt;/p>
&lt;p>实际上就是将电脑对网络的访问都转发到手机的3127，在转发到proxy.mfa.gov.cn&lt;/p>
&lt;h1 id="在mac电脑上访问工作电脑内的虚拟机">在Mac电脑上访问工作电脑内的虚拟机&lt;/h1>
&lt;p>实现思路：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Mac上访问iphone上的某个端口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>putty中将该端口的访问转到工作电脑的2222端口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Virtualbox中将工作电脑的2222端口转到虚拟机的22端口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在mac电脑上输入&lt;/p>
&lt;pre>&lt;code> ssh root@192.168.1.3 -p 2222
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ol>
&lt;h1 id="在工作电脑内的虚拟机访问mac电脑">在工作电脑内的虚拟机访问Mac电脑&lt;/h1>
&lt;p>实现思路：&lt;/p>
&lt;p>在以上条件完成后，在Mac上输入plink命令，实际上就是建立反向的通道，开发本地的端口&lt;/p>
&lt;pre>&lt;code>plink -v -ssh -2 -P 2222 root@192.168.1.3 -pw tswc0916 -R 22222:127.0.0.1:22 -a -N
&lt;/code>&lt;/pre>
&lt;p>上述命令的意思是连接到centos电脑上，将centos电脑上对22222的端口转发到我mac电脑上的22端口&lt;/p></content></item><item><title>proxytunnel.md</title><link>/posts/misc/proxytunnel/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/proxytunnel/</guid><description>title: proxytunnel date: 2014-09-28 18:16:18 tags: proxy vps Using proxytunnel to connect Digital Ocean Host Enable 443 port on your Digitalocean droplet In /etc/ssh/sshd_config, adding the 443 port support
Port 22 Port 443 Determing if your company proxy support https connect proxytunnel -v -p proxy.company.com:80 -d yourdigitalocean.com:443 Make a script to run echo For this to work, you must activate your digital ocean droplet echo ------------------------------------------ echo Making changes to ~/.</description><content>&lt;h2 id="tags-proxy-vps">title: proxytunnel
date: 2014-09-28 18:16:18
tags: proxy vps&lt;/h2>
&lt;h2 id="using-proxytunnel-to-connect-digital-ocean-host">Using proxytunnel to connect Digital Ocean Host&lt;/h2>
&lt;h3 id="enable-443-port-on-your-digitalocean-droplet">Enable &lt;code>443&lt;/code> port on your Digitalocean droplet&lt;/h3>
&lt;p>In &lt;code>/etc/ssh/sshd_config&lt;/code>, adding the &lt;code>443&lt;/code> port support&lt;/p>
&lt;pre tabindex="0">&lt;code>Port 22
Port 443
&lt;/code>&lt;/pre>&lt;h3 id="determing-if-your-company-proxy-support-https-connect">Determing if your company proxy support https &lt;code>connect&lt;/code>&lt;/h3>
&lt;pre tabindex="0">&lt;code>proxytunnel -v -p proxy.company.com:80 -d yourdigitalocean.com:443
&lt;/code>&lt;/pre>&lt;h3 id="make-a-script-to-run">Make a script to run&lt;/h3>
&lt;pre tabindex="0">&lt;code>echo For this to work, you must activate your digital ocean droplet
echo ------------------------------------------
echo Making changes to ~/.ssh/config
rm ~/.ssh/config
echo DynamicForward 1080 &amp;gt;&amp;gt; ~/.ssh/config
echo &amp;#39;ProxyCommand proxytunnel -v -p proxy.company.com:80 -d %h:%p -H &amp;#34;User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)\n&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.ssh/config
echo ServerAliveInterval 30 &amp;gt;&amp;gt; ~/.ssh/config
echo Done editing proxytunnel config file
echo Start a tunnel through local net proxy to digital ocean 443 port
echo ------------------------------------------
echo Connecting to digital ocean 443 port
echo ------------------------------------------
ssh -p 443 root@yourdigitalocean.com
echo Deleting ~/.ssh/config
rm ~/.ssh/config
&lt;/code>&lt;/pre></content></item><item><title>Quick-Cocos2dx.md</title><link>/posts/game/quick-cocos2dx/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/game/quick-cocos2dx/</guid><description>Quick-cocos2d-x开发经验 安装java 安装android_sdk和android_ndk 设置环境变量 %ANDROID_SKD % %ANDROID_NDK% %QUICK_COCOS2DX_ROOT% %COCOS2DX_ROOT% %JAVA_HOME% 设置路径 D:\usr\lib\android\sdk\tools D:\usr\lib\android\sdk\platform-tools D:\usr\lib\coco\quick-cocos2d-x\bin %QUICK_COCOS2DX_ROOT%\bin\win32 D:\usr\lib\jdk\bin 编译x-plyaer，好像只需要一次就行 导入libcocos2dx，编译成lib（非常关键） 用create_project生成工程模板 执行build_native.bat，生成libgame.so mkdir &amp;quot;%APP_ANDROID_ROOT%assets\scripts&amp;quot; xcopy /s /q &amp;quot;%APP_ROOT%scripts\*.*&amp;quot; &amp;quot;%APP_ANDROID_ROOT%assets\scripts\&amp;quot; mkdir &amp;quot;%APP_ANDROID_ROOT%assets\res&amp;quot; xcopy /s /q &amp;quot;%APP_ROOT%res\*.*&amp;quot; &amp;quot;%APP_ANDROID_ROOT%assets\res\&amp;quot; &amp;quot;%ANDROID_NDK_ROOT%\ndk-build&amp;quot; %ANDROID_NDK_BUILD_FLAGS% -C %APP_ANDROID_ROOT% NDK_MODULE_PATH=%QUICK_COCOS2DX_ROOT%;%COCOS2DX_ROOT%;%COCOS2DX_ROOT%\cocos2dx\platform\third_party\android\prebuilt 确认project.android目录下文件 编辑过程中主要改变两个文件夹 script文件夹，存放脚本文件
res文件夹，存放资源文件
将两个文件夹复制到project.android中，就可以改变android程序
将工程导入Eclipse作为Android工程 确认libcocos2dx加载正确 编译运行</description><content>&lt;h2 id="quick-cocos2d-x开发经验">Quick-cocos2d-x开发经验&lt;/h2>
&lt;h3 id="安装java">安装&lt;code>java&lt;/code>&lt;/h3>
&lt;h3 id="安装android_sdk和android_ndk">安装&lt;code>android_sdk&lt;/code>和&lt;code>android_ndk&lt;/code>&lt;/h3>
&lt;h3 id="设置环境变量">设置环境变量&lt;/h3>
&lt;pre>&lt;code>%ANDROID_SKD %
%ANDROID_NDK%
%QUICK_COCOS2DX_ROOT%
%COCOS2DX_ROOT%
%JAVA_HOME%
&lt;/code>&lt;/pre>
&lt;h3 id="设置路径">设置路径&lt;/h3>
&lt;pre>&lt;code>D:\usr\lib\android\sdk\tools
D:\usr\lib\android\sdk\platform-tools
D:\usr\lib\coco\quick-cocos2d-x\bin
%QUICK_COCOS2DX_ROOT%\bin\win32
D:\usr\lib\jdk\bin
&lt;/code>&lt;/pre>
&lt;h3 id="编译x-plyaer好像只需要一次就行">编译&lt;code>x-plyaer&lt;/code>，好像只需要一次就行&lt;/h3>
&lt;h3 id="导入libcocos2dx编译成lib非常关键">导入&lt;code>libcocos2dx&lt;/code>，编译成lib（非常关键）&lt;/h3>
&lt;h3 id="用create_project生成工程模板">用&lt;code>create_project&lt;/code>生成工程模板&lt;/h3>
&lt;h4 id="执行build_nativebat生成libgameso">执行&lt;code>build_native.bat&lt;/code>，生成&lt;code>libgame.so&lt;/code>&lt;/h4>
&lt;pre>&lt;code>mkdir &amp;quot;%APP_ANDROID_ROOT%assets\scripts&amp;quot;
xcopy /s /q &amp;quot;%APP_ROOT%scripts\*.*&amp;quot; &amp;quot;%APP_ANDROID_ROOT%assets\scripts\&amp;quot;
mkdir &amp;quot;%APP_ANDROID_ROOT%assets\res&amp;quot;
xcopy /s /q &amp;quot;%APP_ROOT%res\*.*&amp;quot; &amp;quot;%APP_ANDROID_ROOT%assets\res\&amp;quot;
&amp;quot;%ANDROID_NDK_ROOT%\ndk-build&amp;quot; %ANDROID_NDK_BUILD_FLAGS% -C %APP_ANDROID_ROOT% NDK_MODULE_PATH=%QUICK_COCOS2DX_ROOT%;%COCOS2DX_ROOT%;%COCOS2DX_ROOT%\cocos2dx\platform\third_party\android\prebuilt
&lt;/code>&lt;/pre>
&lt;h4 id="确认projectandroid目录下文件">确认&lt;code>project.android&lt;/code>目录下文件&lt;/h4>
&lt;h4 id="编辑过程中主要改变两个文件夹">编辑过程中主要改变两个文件夹&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>&lt;code>script&lt;/code>文件夹，存放脚本文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>res&lt;/code>文件夹，存放资源文件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>将两个文件夹复制到&lt;code>project.android&lt;/code>中，就可以改变&lt;code>android&lt;/code>程序&lt;/p>
&lt;h3 id="将工程导入eclipse作为android工程">将工程导入&lt;code>Eclipse&lt;/code>作为&lt;code>Android工程&lt;/code>&lt;/h3>
&lt;h3 id="确认libcocos2dx加载正确">确认&lt;code>libcocos2dx&lt;/code>加载正确&lt;/h3>
&lt;h3 id="编译运行">编译运行&lt;/h3></content></item><item><title>r.md</title><link>/posts/academy/r/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/academy/r/</guid><description>R language Install pacakges in R environment
install.pacakges(&amp;#34;ggplot2&amp;#34;) In case of can&amp;rsquo;t install directly, install it from local path cd /path/packages R CMD INSTALL ggplot2 Missing packages pacman -S gcc-fortran read data table.read(&amp;#34;file&amp;#34;,rw) new data df = data.frame(x,y) data.edit(df) logging sink(&amp;#34;output.txt&amp;#34;) pdf(&amp;#34;output.pdf&amp;#34;)</description><content>&lt;h1 id="r-language">R language&lt;/h1>
&lt;h2 id="install-pacakges">Install pacakges&lt;/h2>
&lt;p>in R environment&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-R" data-lang="R">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">install.pacakges&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ggplot2&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>In case of can&amp;rsquo;t install directly, install it from local path&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>cd /path/packages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>R CMD INSTALL ggplot2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="missing-packages">Missing packages&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>pacman -S gcc-fortran
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="read-data">read data&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>table.read&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;file&amp;#34;&lt;/span>,rw&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="new-data">new data&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>df &lt;span style="color:#f92672">=&lt;/span> data.frame&lt;span style="color:#f92672">(&lt;/span>x,y&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data.edit&lt;span style="color:#f92672">(&lt;/span>df&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="logging">logging&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sink&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;output.txt&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pdf&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;output.pdf&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>reactjs.md</title><link>/posts/nodejs/reactjs/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/reactjs/</guid><description>react An npm package to get you immediate access to React, without also requiring the JSX transformer. This is especially useful for cases where you want to browserify your module using React.
Note: by default, React will be in development mode. The development version includes extra warnings about common mistakes, whereas the production version includes extra performance optimizations and strips all error messages.
To use React in production mode, set the environment variable NODE_ENV to production.</description><content>&lt;h1 id="react">react&lt;/h1>
&lt;p>An npm package to get you immediate access to &lt;a href="https://facebook.github.io/react/">React&lt;/a>,
without also requiring the JSX transformer. This is especially useful for cases where you
want to &lt;a href="https://github.com/substack/node-browserify">&lt;code>browserify&lt;/code>&lt;/a> your module using
&lt;code>React&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> by default, React will be in development mode. The development version includes extra warnings about common mistakes, whereas the production version includes extra performance optimizations and strips all error messages.&lt;/p>
&lt;p>To use React in production mode, set the environment variable &lt;code>NODE_ENV&lt;/code> to &lt;code>production&lt;/code>. A minifier that performs dead-code elimination such as &lt;a href="https://github.com/mishoo/UglifyJS2">UglifyJS&lt;/a> is recommended to completely remove the extra code present in development mode.&lt;/p>
&lt;h2 id="example-usage">Example Usage&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">React&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Addons are in separate packages:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">createFragment&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;react-addons-create-fragment&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">immutabilityHelpers&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;react-addons-update&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">CSSTransitionGroup&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;react-addons-css-transition-group&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For a complete list of addons visit the &lt;a href="https://facebook.github.io/react/docs/addons.html">addons documentation page&lt;/a>.&lt;/p></content></item><item><title>README.md</title><link>/posts/misc/readme/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/misc/readme/</guid><description>+++ title=&amp;ldquo;README.md&amp;rdquo; date=&amp;ldquo;2018-02-16T14:05:34-04:00&amp;rdquo; +++ +++ title=&amp;ldquo;README.md&amp;rdquo; date=&amp;ldquo;2018-02-16T14:05:34-04:00&amp;rdquo; +++ +++ title=&amp;ldquo;README.md&amp;rdquo; date=&amp;ldquo;2018-02-16T14:05:34-04:00&amp;rdquo; +++ +++ title = &amp;ldquo;Quick start&amp;rdquo; author = [&amp;ldquo;linuxing3&amp;rdquo;] draft = false +++
Configuration layers Spacemacs divides its configuration into self-contained units called configuration layers. These layers are stacked on top of each other to achieve a custom configuration.
By default Spacemacs uses a dotfile called ~/.spacemacs to control which layers to load. Within this file you can also configure certain features.</description><content>&lt;p>+++
title=&amp;ldquo;README.md&amp;rdquo;
date=&amp;ldquo;2018-02-16T14:05:34-04:00&amp;rdquo;
+++
+++
title=&amp;ldquo;README.md&amp;rdquo;
date=&amp;ldquo;2018-02-16T14:05:34-04:00&amp;rdquo;
+++
+++
title=&amp;ldquo;README.md&amp;rdquo;
date=&amp;ldquo;2018-02-16T14:05:34-04:00&amp;rdquo;
+++
+++
title = &amp;ldquo;Quick start&amp;rdquo;
author = [&amp;ldquo;linuxing3&amp;rdquo;]
draft = false
+++&lt;/p>
&lt;h2 id="configuration-layers">Configuration layers&lt;/h2>
&lt;p>Spacemacs divides its configuration into self-contained units called
&lt;code>configuration layers&lt;/code>. These layers are stacked on top of each other
to achieve a custom configuration.&lt;/p>
&lt;p>By default Spacemacs uses a dotfile called &lt;code>~/.spacemacs&lt;/code> to control which
layers to load. Within this file you can also configure certain features.&lt;/p>
&lt;p>A configuration layer is a directory containing at least a &lt;code>packages.el&lt;/code>
file which defines and configures packages to be downloaded from Emacs
package repositories using the &lt;code>package.el&lt;/code> built-in feature of Emacs.&lt;/p>
&lt;p>If you already have your own &lt;code>Emacs&lt;/code> configuration you can move it to your
own layer.&lt;/p>
&lt;p>The following command creates a layer in the &lt;code>private&lt;/code> directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>SPC SPC configuration-layer/create-layer RET
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Any configuration layers you create must be explicitly loaded in &lt;code>~/.spacemacs&lt;/code>.&lt;/p>
&lt;p>Note: For your privacy, the contents of the &lt;code>private&lt;/code> directory are not
under source control. See the section on private configuration management in
the &lt;a href="DOCUMENTATION.org">documentation&lt;/a>.&lt;/p>
&lt;h2 id="dotfile--dot-spacemacs">Dotfile (.spacemacs)&lt;/h2>
&lt;p>As mentioned &lt;code>.spacemacs&lt;/code> controls which configuration layers to load and
is also a means to customizing Spacemacs.&lt;/p>
&lt;p>The following command will create a &lt;code>.spacemacs&lt;/code> file in your home directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>SPC SPC dotspacemacs/install RET
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To open the installed dotfile:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>SPC f e d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To load some configuration layers using the variable
&lt;code>dotspacemacs-configuration-layers&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; List of configuration layers to load.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>(auto-completion smex)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some configuration layers support configuration variables to expose granular
control over layer-specific features, &lt;a href="../layers/+source-control/git/README.org">git layer&lt;/a> being one such example.
Variables can be directly set within &lt;code>dotspacemacs-configuration-layers&lt;/code> like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">;; List of configuration layers to load.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotspacemacs-configuration-layers &lt;span style="color:#f92672">&amp;#39;&lt;/span>(auto-completion
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (git :variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git-magit-status-fullscreen &lt;span style="color:#66d9ef">t&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smex)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At anytime you can apply the changes made to the dotfile or layers
&lt;!-- raw HTML omitted -->without restarting&lt;!-- raw HTML omitted --> Spacemacs by pressing &lt;code>SPC f e R&lt;/code>.&lt;/p>
&lt;p>The &lt;a href="https://github.com/syl20bnr/spacemacs/blob/master/core/templates/.spacemacs.template">dotfile template&lt;/a> contains further information about how to customize
Spacemacs. See the dotfile configuration section of the &lt;a href="DOCUMENTATION.org">documentation&lt;/a> for
more details.&lt;/p>
&lt;h2 id="dotdirectory--dot-spacemacs-dot-d">Dotdirectory (~/.spacemacs.d)&lt;/h2>
&lt;p>Like &lt;code>Emacs&lt;/code>, Spacemacs initialization can also be contained in an &lt;code>init.el&lt;/code> file
in a special directory &lt;code>~/.spacemacs.d&lt;/code>. The contents of the dotfile should be
then copied in the &lt;code>init.el&lt;/code> file.&lt;/p>
&lt;p>The Emacs dotfile or dotdirectory is not replaced but rather
complemented by the Spacemacs dotfile or dotdirectory. During startup,
Emacs still uses &lt;code>~/.emacs.d/init.el&lt;/code> (or &lt;code>~/.emacs&lt;/code>) for its
initialization, and variable &lt;code>user-emacs-directory&lt;/code> will still point
to &lt;code>~/.emacs.d/&lt;/code>, even if &lt;code>~/.spacemacs.d&lt;/code> or &lt;code>~/.spacemacs&lt;/code> are
present. Only now &lt;code>~/.emacs.d/init.el&lt;/code> is provided by Spacemacs
(e.g. after cloning the Spacemacs git repo into an empty
&lt;code>~/.emacs.d/&lt;/code>), and your own personnal configurations go into
&lt;code>~/.spacemacs.d/init.el&lt;/code> (or &lt;code>~/.spacemacs&lt;/code>).&lt;/p>
&lt;p>Have a look into the FAQ for an easy workaround to maintain (your
former) vanilla Emacs and (your new) Spacemacs configurations
side-by-side without the need to rename and backup &lt;code>~/.emacs.d/&lt;/code>.&lt;/p>
&lt;h2 id="learning-spacemacs">Learning Spacemacs&lt;/h2>
&lt;h3 id="editing-styles">Editing Styles&lt;/h3>
&lt;p>Spacemacs can be used by Vim users or Emacs users by setting the
&lt;code>dotspacemacs-editing-style&lt;/code> variable to &lt;code>vim&lt;/code>, &lt;code>emacs&lt;/code> or even &lt;code>hybrid&lt;/code>
in the dotfile &lt;code>~/.spacemacs&lt;/code>.&lt;/p>
&lt;h3 id="the-leader-keys">The leader keys&lt;/h3>
&lt;p>Spacemacs key bindings use a leader key which is by default bound to
&lt;code>SPC&lt;/code> (space bar) in &lt;code>vim&lt;/code> or &lt;code>hybrid&lt;/code> editing styles and &lt;code>M-m&lt;/code> in &lt;code>emacs&lt;/code>
style.&lt;/p>
&lt;p>You can change it by setting the variable &lt;code>dotspacemacs-leader-key&lt;/code> if
you use the &lt;code>vim&lt;/code> style or &lt;code>dotspacemacs-emacs-leader-key&lt;/code> if you use
the &lt;code>emacs&lt;/code> style (these variables must be set in the file &lt;code>~/.spacemacs&lt;/code>).&lt;/p>
&lt;p>For simplicity the documentation always refers to the leader key as
&lt;code>SPC&lt;/code>.&lt;/p>
&lt;p>There is secondary leader key called the major-mode leader key which is
set to &lt;code>​,​&lt;/code> by default. This key is a shortcut for &lt;code>SPC m&lt;/code>
where all the major-mode specific commands are bound.&lt;/p>
&lt;h3 id="evil-tutor">Evil-tutor&lt;/h3>
&lt;p>If you are willing to learn the Vim key bindings (highly recommended since
you can benefit from them even in &lt;code>emacs&lt;/code> style), press &lt;code>SPC h T&lt;/code>
to begin an Evil-adapted Vimtutor.&lt;/p>
&lt;h3 id="universal-argument">Universal argument&lt;/h3>
&lt;p>In &lt;code>vim&lt;/code> editing style the universal argument defaults to &lt;code>SPC u&lt;/code>
instead of &lt;code>C-u&lt;/code> because the latter is used to scroll up as in Vim.&lt;/p>
&lt;h3 id="configuration-layers-and-package-discovery">Configuration layers and Package discovery&lt;/h3>
&lt;p>By using &lt;code>helm-spacemacs-help&lt;/code> with &lt;code>SPC h SPC&lt;/code> you can quickly search
for a package and get the name of the layers using it.&lt;/p>
&lt;p>You can also easily go to the &lt;code>README.org&lt;/code> of a layer or go to the initialization
function of a package.&lt;/p>
&lt;h3 id="key-bindings-discovery">Key bindings discovery&lt;/h3>
&lt;p>Thanks to &lt;a href="https://github.com/justbur/emacs-which-key">which-key&lt;/a>, whenever a prefix command is pressed (like &lt;code>SPC&lt;/code>)
a buffer appears after one second listing the possible keys for this prefix.&lt;/p>
&lt;p>It is also possible to search for specific key bindings by pressing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>SPC ?
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To narrow the bindings list to those prefixed with &lt;code>SPC&lt;/code>,
type a pattern like this regular expression:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>SPC\ b
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>which would list all &lt;code>buffer&lt;/code> related bindings. &lt;strong>Note:&lt;/strong> You are at the
&lt;em>HELM-Descbind&lt;/em> prompt, the pattern consists of 6 letters: uppercase &lt;code>SPC&lt;/code>, a
backslash, an actual space and a lowercase &lt;code>b&lt;/code>.&lt;/p>
&lt;h3 id="describe-functions">Describe functions&lt;/h3>
&lt;p>&lt;code>Describe functions&lt;/code> are powerful Emacs introspection commands to get information
about functions, variables, modes etc. These commands are bound thusly:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Binding&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>SPC h d f&lt;/code>&lt;/td>
&lt;td>describe-function&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC h d k&lt;/code>&lt;/td>
&lt;td>describe-key&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC h d m&lt;/code>&lt;/td>
&lt;td>describe-mode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>SPC h d v&lt;/code>&lt;/td>
&lt;td>describe-variable&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="how-to-s">How-To&amp;rsquo;s&lt;/h2>
&lt;p>Some quick &lt;code>how-to's&lt;/code> are compiled in the &lt;a href="FAQ.org">FAQ.&lt;/a>&lt;/p></content></item><item><title>redux-devtools.md</title><link>/posts/nodejs/redux-devtools/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/redux-devtools/</guid><description>Redux DevTools Features Lets you inspect every state and action payload Lets you go back in time by “cancelling” actions If you change the reducer code, each “staged” action will be re-evaluated If the reducers throw, you will see during which action this happened, and what the error was With persistState() store enhancer, you can persist debug sessions across page reloads Overview Redux DevTools is a development time package that provides power-ups for your Redux development workflow.</description><content>&lt;h1 id="redux-devtools">Redux DevTools&lt;/h1>
&lt;h3 id="features">Features&lt;/h3>
&lt;ul>
&lt;li>Lets you inspect every state and action payload&lt;/li>
&lt;li>Lets you go back in time by “cancelling” actions&lt;/li>
&lt;li>If you change the reducer code, each “staged” action will be re-evaluated&lt;/li>
&lt;li>If the reducers throw, you will see during which action this happened, and what the error was&lt;/li>
&lt;li>With &lt;code>persistState()&lt;/code> store enhancer, you can persist debug sessions across page reloads&lt;/li>
&lt;/ul>
&lt;h3 id="overview">Overview&lt;/h3>
&lt;p>Redux DevTools is a development time package that provides power-ups for your Redux development workflow. Be careful to strip its code in production! To use Redux DevTools, you need to choose a “monitor”—a React component that will serve as a UI for the DevTools. Different tasks and workflows require different UIs, so Redux DevTools is built to be flexible in this regard. We recommend using &lt;a href="https://github.com/gaearon/redux-devtools-log-monitor">&lt;code>LogMonitor&lt;/code>&lt;/a> for inspecting the state and time travel, and wrap it in a &lt;a href="https://github.com/gaearon/redux-devtools-dock-monitor">&lt;code>DockMonitor&lt;/code>&lt;/a> to quickly move it across the screen. That said, when you’re comfortable rolling up your own setup, feel free to do this, and share it with us.&lt;/p>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;pre tabindex="0">&lt;code>npm install --save-dev redux-devtools
&lt;/code>&lt;/pre>&lt;p>You’ll also likely want to install some monitors:&lt;/p>
&lt;pre tabindex="0">&lt;code>npm install --save-dev redux-devtools-log-monitor
npm install --save-dev redux-devtools-dock-monitor
&lt;/code>&lt;/pre>&lt;h3 id="usage">Usage&lt;/h3>
&lt;h4 id="create-a-devtools-component">Create a &lt;code>DevTools&lt;/code> Component&lt;/h4>
&lt;p>Somewhere in your project, create a &lt;code>DevTools&lt;/code> component by passing a &lt;code>monitor&lt;/code> element to &lt;code>createDevTools&lt;/code>. In the following example our &lt;code>monitor&lt;/code> consists of &lt;a href="https://github.com/gaearon/redux-devtools-log-monitor">&lt;code>LogMonitor&lt;/code>&lt;/a> docked within &lt;a href="https://github.com/gaearon/redux-devtools-dock-monitor">&lt;code>DockMonitor&lt;/code>&lt;/a>:&lt;/p>
&lt;h5 id="containersdevtoolsjs">&lt;code>containers/DevTools.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">React&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Exported from redux-devtools
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">createDevTools&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux-devtools&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Monitors are separate packages, and you can make a custom one
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">LogMonitor&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux-devtools-log-monitor&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">DockMonitor&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux-devtools-dock-monitor&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// createDevTools takes a monitor and produces a DevTools component
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">createDevTools&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Monitors are individually adjustable with props.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Consult their repositories to learn about those props.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Here, we put LogMonitor inside a DockMonitor.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">DockMonitor&lt;/span> &lt;span style="color:#a6e22e">toggleVisibilityKey&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;ctrl-h&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">changePositionKey&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;ctrl-q&amp;#39;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">LogMonitor&lt;/span> &lt;span style="color:#a6e22e">theme&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;tomorrow&amp;#39;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">/DockMonitor&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that you can use &lt;code>LogMonitor&lt;/code> directly without wrapping it in &lt;code>DockMonitor&lt;/code> if you’d like to display the DevTools UI somewhere right inside your application:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// If you&amp;#39;d rather not use docking UI, use &amp;lt;LogMonitor&amp;gt; directly
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">createDevTools&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">LogMonitor&lt;/span> &lt;span style="color:#a6e22e">theme&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;solarized&amp;#39;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="use-devtoolsinstrument-store-enhancer">Use &lt;code>DevTools.instrument()&lt;/code> Store Enhancer&lt;/h4>
&lt;p>The &lt;code>DevTools&lt;/code> component you created with &lt;code>createDevTools()&lt;/code> has a special static method called &lt;code>instrument()&lt;/code>. It returns a &lt;a href="http://rackt.github.io/redux/docs/Glossary.html#store-enhancer">store enhancer&lt;/a> that you need to use in development.&lt;/p>
&lt;p>A store enhancer is a function that takes &lt;code>createStore&lt;/code> and returns an enhanced version of it that you will use instead. You probably already used another store enhancer—&lt;a href="http://redux.js.org/docs/api/applyMiddleware.html">&lt;code>applyMiddleware()&lt;/code>&lt;/a>. Unlike &lt;code>applyMiddleware()&lt;/code>, you will need to be careful to only use &lt;code>DevTools.instrument()&lt;/code> in development environment, and never in production.&lt;/p>
&lt;p>The easiest way to apply several store enhancers in a row is to use the &lt;a href="http://redux.js.org/docs/api/compose.html">&lt;code>compose()&lt;/code>&lt;/a> utility function that ships with Redux. It is the same &lt;code>compose()&lt;/code> that you can find in Underscore and Lodash. In our case, we would use it to compose several store enhancers into one: &lt;code>compose(applyMiddleware(m1, m2, m3), DevTools.instrument())&lt;/code>.&lt;/p>
&lt;p>It’s important that you should add &lt;code>DevTools.instrument()&lt;/code> &lt;em>after&lt;/em> &lt;code>applyMiddleware&lt;/code> in your &lt;code>compose()&lt;/code> function arguments. This is because &lt;code>applyMiddleware&lt;/code> is potentially asynchronous, but &lt;code>DevTools.instrument()&lt;/code> expects all actions to be plain objects rather than actions interpreted by asynchronous middleware such as &lt;a href="https://github.com/acdlite/redux-promise">redux-promise&lt;/a> or &lt;a href="https://github.com/gaearon/redux-thunk">redux-thunk&lt;/a>. So make sure &lt;code>applyMiddleware()&lt;/code> goes first in the &lt;code>compose()&lt;/code> call, and &lt;code>DevTools.instrument()&lt;/code> goes after it.&lt;/p>
&lt;h5 id="storeconfigurestorejs">&lt;code>store/configureStore.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">createStore&lt;/span>, &lt;span style="color:#a6e22e">applyMiddleware&lt;/span>, &lt;span style="color:#a6e22e">compose&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">rootReducer&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;../reducers&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;../containers/DevTools&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">finalCreateStore&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">compose&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Middleware you want to use in development:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">applyMiddleware&lt;/span>(&lt;span style="color:#a6e22e">d1&lt;/span>, &lt;span style="color:#a6e22e">d2&lt;/span>, &lt;span style="color:#a6e22e">d3&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Required! Enable Redux DevTools with the monitors you chose
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span>.&lt;span style="color:#a6e22e">instrument&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)(&lt;span style="color:#a6e22e">createStore&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">configureStore&lt;/span>(&lt;span style="color:#a6e22e">initialState&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">finalCreateStore&lt;/span>(&lt;span style="color:#a6e22e">rootReducer&lt;/span>, &lt;span style="color:#a6e22e">initialState&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Hot reload reducers (requires Webpack or Browserify HMR to be enabled)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">hot&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">hot&lt;/span>.&lt;span style="color:#a6e22e">accept&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;../reducers&amp;#39;&lt;/span>, () =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">store&lt;/span>.&lt;span style="color:#a6e22e">replaceReducer&lt;/span>(&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;../reducers&amp;#39;&lt;/span>)&lt;span style="color:#75715e">/*.default if you use Babel 6+ */&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you’d like, you may add another store enhancer called &lt;code>persistState()&lt;/code>. It ships with this package, and it lets you serialize whole sessions (including all dispatched actions and the state of the monitors) by a URL key. So if you visit &lt;code>http://localhost:3000/?debug_session=reproducing_weird_bug&lt;/code>, do something in the app, then open &lt;code>http://localhost:3000/?debug_session=some_other_feature&lt;/code>, and then go back to &lt;code>http://localhost:3000/?debug_session=reproducing_weird_bug&lt;/code>, the state will be restored. The implementation of &lt;code>persistState()&lt;/code> is fairly naïve but you can take it as an inspiration and build a proper UI for it if you feel like it!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">persistState&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux-devtools&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">finalCreateStore&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">compose&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Middleware you want to use in development:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">applyMiddleware&lt;/span>(&lt;span style="color:#a6e22e">d1&lt;/span>, &lt;span style="color:#a6e22e">d2&lt;/span>, &lt;span style="color:#a6e22e">d3&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Required! Enable Redux DevTools with the monitors you chose
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span>.&lt;span style="color:#a6e22e">instrument&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Optional. Lets you write ?debug_session=&amp;lt;key&amp;gt; in address bar to persist debug sessions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">persistState&lt;/span>(&lt;span style="color:#a6e22e">getDebugSessionKey&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)(&lt;span style="color:#a6e22e">createStore&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">getDebugSessionKey&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// You can write custom logic here!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// By default we try to read the key from ?debug_session=&amp;lt;key&amp;gt; in the address bar
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span> &lt;span style="color:#f92672">=&lt;/span> window.&lt;span style="color:#a6e22e">location&lt;/span>.&lt;span style="color:#a6e22e">href&lt;/span>.&lt;span style="color:#a6e22e">match&lt;/span>(&lt;span style="color:#e6db74">/[?&amp;amp;]debug_session=([^&amp;amp;]+)\b/&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#a6e22e">matches&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)&lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span>[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">configureStore&lt;/span>(&lt;span style="color:#a6e22e">initialState&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="exclude-devtools-from-production-builds">Exclude DevTools from Production Builds&lt;/h4>
&lt;p>Finally, to make sure we’re not pulling any DevTools-related code in the production builds, we will envify our code. With Webpack, you can use &lt;code>DefinePlugin&lt;/code> (Browserify equivalent is called &lt;a href="https://github.com/zertosh/loose-envify">&lt;code>envify&lt;/code>&lt;/a>) to turn magic constants like &lt;code>process.env.NODE_ENV&lt;/code> into &lt;code>'production'&lt;/code> or &lt;code>'development'&lt;/code> strings depending on the environment, and import and render &lt;code>redux-devtools&lt;/code> conditionally when &lt;code>process.env.NODE_ENV&lt;/code> is not &lt;code>'production'&lt;/code>. Then, if you have an Uglify step before production, Uglify will eliminate dead &lt;code>if (false)&lt;/code> branches with &lt;code>redux-devtools&lt;/code> imports.&lt;/p>
&lt;p>If you are using ES6 modules with Webpack 1.x and Babel, you might try putting your &lt;code>import&lt;/code> statement inside an &lt;code>if (process.env.NODE_ENV !== 'production)&lt;/code> to exclude the DevTools package from your production bundle. However this ES6 specification forbids it, so this won’t compile. Instead, you can use a conditional CommonJS &lt;code>require&lt;/code>. Babel will let it compile, and Uglify will eliminate the dead branches before Webpack creates a bundle. This is why we recommend creating a &lt;code>configureStore.js&lt;/code> file that either directs you to &lt;code>configureStore.dev.js&lt;/code> or &lt;code>configureStore.prod.js&lt;/code> depending on the configuration. While it is a little bit more maintenance, the upside is that you can be sure you won’t pull any development dependencies into the production builds, and that you can easily enable different middleware (e.g. crash reporting, logging) in the production environment.&lt;/p>
&lt;h5 id="storeconfigurestorejs-1">&lt;code>store/configureStore.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Use ProvidePlugin (Webpack) or loose-envify (Browserify)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// together with Uglify to strip the dev branch in prod build.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">process&lt;/span>.&lt;span style="color:#a6e22e">env&lt;/span>.&lt;span style="color:#a6e22e">NODE_ENV&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#e6db74">&amp;#39;production&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./configureStore.prod&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./configureStore.dev&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="storeconfigurestoreprodjs">&lt;code>store/configureStore.prod.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">createStore&lt;/span>, &lt;span style="color:#a6e22e">applyMiddleware&lt;/span>, &lt;span style="color:#a6e22e">compose&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">rootReducer&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;../reducers&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">finalCreateStore&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">compose&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Middleware you want to use in production:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">applyMiddleware&lt;/span>(&lt;span style="color:#a6e22e">p1&lt;/span>, &lt;span style="color:#a6e22e">p2&lt;/span>, &lt;span style="color:#a6e22e">p3&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Other store enhancers if you use any
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>)(&lt;span style="color:#a6e22e">createStore&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">configureStore&lt;/span>(&lt;span style="color:#a6e22e">initialState&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">finalCreateStore&lt;/span>(&lt;span style="color:#a6e22e">rootReducer&lt;/span>, &lt;span style="color:#a6e22e">initialState&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="storeconfigurestoredevjs">&lt;code>store/configureStore.dev.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">createStore&lt;/span>, &lt;span style="color:#a6e22e">applyMiddleware&lt;/span>, &lt;span style="color:#a6e22e">compose&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">persistState&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux-devtools&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">rootReducer&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;../reducers&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;../containers/DevTools&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">finalCreateStore&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">compose&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Middleware you want to use in development:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">applyMiddleware&lt;/span>(&lt;span style="color:#a6e22e">d1&lt;/span>, &lt;span style="color:#a6e22e">d2&lt;/span>, &lt;span style="color:#a6e22e">d3&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Required! Enable Redux DevTools with the monitors you chose
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span>.&lt;span style="color:#a6e22e">instrument&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Optional. Lets you write ?debug_session=&amp;lt;key&amp;gt; in address bar to persist debug sessions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">persistState&lt;/span>(&lt;span style="color:#a6e22e">getDebugSessionKey&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)(&lt;span style="color:#a6e22e">createStore&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">getDebugSessionKey&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// You can write custom logic here!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// By default we try to read the key from ?debug_session=&amp;lt;key&amp;gt; in the address bar
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span> &lt;span style="color:#f92672">=&lt;/span> window.&lt;span style="color:#a6e22e">location&lt;/span>.&lt;span style="color:#a6e22e">href&lt;/span>.&lt;span style="color:#a6e22e">match&lt;/span>(&lt;span style="color:#e6db74">/[?&amp;amp;]debug_session=([^&amp;amp;]+)\b/&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#a6e22e">matches&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)&lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span>[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">configureStore&lt;/span>(&lt;span style="color:#a6e22e">initialState&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">finalCreateStore&lt;/span>(&lt;span style="color:#a6e22e">rootReducer&lt;/span>, &lt;span style="color:#a6e22e">initialState&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Hot reload reducers (requires Webpack or Browserify HMR to be enabled)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">hot&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">hot&lt;/span>.&lt;span style="color:#a6e22e">accept&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;../reducers&amp;#39;&lt;/span>, () =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">store&lt;/span>.&lt;span style="color:#a6e22e">replaceReducer&lt;/span>(&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;../reducers&amp;#39;&lt;/span>)&lt;span style="color:#75715e">/*.default if you use Babel 6+ */&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="render-devtools-in-your-app">Render &lt;code>&amp;lt;DevTools&amp;gt;&lt;/code> in Your App&amp;hellip;&lt;/h4>
&lt;p>Finally, include the &lt;code>DevTools&lt;/code> component in your page.
A naïve way to do this would be to render it right in your &lt;code>index.js&lt;/code>:&lt;/p>
&lt;h5 id="indexjs">&lt;code>index.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">React&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">render&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react-dom&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">Provider&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react-redux&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">configureStore&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./store/configureStore&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">TodoApp&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./containers/TodoApp&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Don&amp;#39;t do this! You’re bringing DevTools into the production bundle.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./containers/DevTools&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">configureStore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">render&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">Provider&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span>&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#a6e22e">store&lt;/span>}&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">div&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">TodoApp&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">/div&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">/Provider&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;app&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We recommend a different approach. Create a &lt;code>Root.js&lt;/code> component that renders the root of your application (usually some component surrounded by a &lt;code>&amp;lt;Provider&amp;gt;&lt;/code>). Then use the same trick with conditional &lt;code>require&lt;/code> statements to have two versions of it, one for development, and one for production:&lt;/p>
&lt;h5 id="containersrootjs">&lt;code>containers/Root.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">process&lt;/span>.&lt;span style="color:#a6e22e">env&lt;/span>.&lt;span style="color:#a6e22e">NODE_ENV&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#e6db74">&amp;#39;production&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./Root.prod&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./Root.dev&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="containersrootdevjs">&lt;code>containers/Root.dev.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">React&lt;/span>, { &lt;span style="color:#a6e22e">Component&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">Provider&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react-redux&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">TodoApp&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./TodoApp&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./DevTools&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Root&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> &lt;span style="color:#a6e22e">Component&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">render&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> { &lt;span style="color:#a6e22e">store&lt;/span> } &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">props&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">Provider&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span>&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#a6e22e">store&lt;/span>}&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">div&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">TodoApp&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">/div&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">/Provider&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="containersrootprodjs">&lt;code>containers/Root.prod.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">React&lt;/span>, { &lt;span style="color:#a6e22e">Component&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">Provider&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react-redux&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">TodoApp&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./TodoApp&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Root&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> &lt;span style="color:#a6e22e">Component&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">render&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> { &lt;span style="color:#a6e22e">store&lt;/span> } &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">props&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">Provider&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span>&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#a6e22e">store&lt;/span>}&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">TodoApp&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">/Provider&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="or-open-them-in-a-new-window">&amp;hellip;Or Open Them in a New Window&lt;/h4>
&lt;p>When you use &lt;a href="https://github.com/gaearon/redux-devtools-dock-monitor">&lt;code>DockMonitor&lt;/code>&lt;/a>, you usually want to render &lt;code>&amp;lt;DevTools&amp;gt;&lt;/code> at the root of your app. It will appear in a docked container above it. However, you can also render it anywhere else in your React component tree. To do this, you can remove &lt;code>DockMonitor&lt;/code> and instead render &lt;code>&amp;lt;DevTools&amp;gt;&lt;/code> inside some component of your app. Don’t forget to create two versions of this component to exclude &lt;code>DevTools&lt;/code> in production!&lt;/p>
&lt;p>However you don’t even have to render &lt;code>&amp;lt;DevTools&amp;gt;&lt;/code> in the same window. For example, you may prefer to display it in a popup. In this case, you can remove &lt;code>DockMonitor&lt;/code> from &lt;code>DevTools.js&lt;/code> and just use the &lt;code>LogMonitor&lt;/code>, and have some code like this:&lt;/p>
&lt;h5 id="indexjs-1">&lt;code>index.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">React&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">Provider&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react-redux&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">render&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react-dom&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">configureStore&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./store/configureStore&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">App&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./containers/App&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">configureStore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">render&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">Provider&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span>&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#a6e22e">store&lt;/span>}&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">App&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">/Provider&amp;gt;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;root&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">process&lt;/span>.&lt;span style="color:#a6e22e">env&lt;/span>.&lt;span style="color:#a6e22e">NODE_ENV&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;production&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">showDevTools&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;./showDevTools&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">showDevTools&lt;/span>(&lt;span style="color:#a6e22e">store&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="showdevtoolsjs">&lt;code>showDevTools.js&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">React&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">render&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;react-dom&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./containers/DevTools&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">showDevTools&lt;/span>(&lt;span style="color:#a6e22e">store&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">popup&lt;/span> &lt;span style="color:#f92672">=&lt;/span> window.&lt;span style="color:#a6e22e">open&lt;/span>(&lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Redux DevTools&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;menubar=no,location=no,resizable=yes,scrollbars=no,status=no&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Reload in case it already exists
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">popup&lt;/span>.&lt;span style="color:#a6e22e">location&lt;/span>.&lt;span style="color:#a6e22e">reload&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">setTimeout&lt;/span>(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">popup&lt;/span>.document.&lt;span style="color:#a6e22e">write&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;&amp;lt;div id=&amp;#34;react-devtools-root&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">render&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">DevTools&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span>&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#a6e22e">store&lt;/span>} &lt;span style="color:#f92672">/&amp;gt;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">popup&lt;/span>.document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;react-devtools-root&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#ae81ff">10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Personal preferences vary, and whether to put the DevTools in a separate window, in a dock, or right inside you app’s user interface, is up to you. Make sure to check the documentation for the monitors you use and learn about the different props they support for customizing the appearance and the behavior.&lt;/p>
&lt;p>Note that there are no useful props you can pass to the &lt;code>DevTools&lt;/code> component other than the &lt;code>store&lt;/code>. The &lt;code>store&lt;/code> prop is needed if you don’t wrap &lt;code>&amp;lt;DevTools&amp;gt;&lt;/code> in a &lt;code>&amp;lt;Provider&amp;gt;&lt;/code>—just like with any connected component. To adjust the monitors, you need to pass props to them inside &lt;code>DevTools.js&lt;/code> itself inside the &lt;code>createDevTools()&lt;/code> call when they are used.&lt;/p>
&lt;h3 id="gotchas">Gotchas&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Your reducers have to be pure and free of side effects to work correctly with DevTools.&lt;/strong> For example, even generating a random ID in reducer makes it impure and non-deterministic. Instead, do this in action creators.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Make sure to only apply &lt;code>DevTools.instrument()&lt;/code> and render &lt;code>&amp;lt;DevTools&amp;gt;&lt;/code> in development!&lt;/strong> In production, this will be terribly slow because actions just accumulate forever. As described above, you need to use conditional &lt;code>require&lt;/code>s and use &lt;code>ProvidePlugin&lt;/code> (Webpack) or &lt;code>loose-envify&lt;/code> (Browserify) together with Uglify to remove the dead code. Here is &lt;a href="https://github.com/erikras/react-redux-universal-hot-example/">an example&lt;/a> that adds Redux DevTools handling the production case correctly.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>It is important that &lt;code>DevTools.instrument()&lt;/code> store enhancer should be added to your middleware stack &lt;em>after&lt;/em> &lt;code>applyMiddleware&lt;/code> in the &lt;code>compose&lt;/code>d functions, as &lt;code>applyMiddleware&lt;/code> is potentially asynchronous.&lt;/strong> Otherwise, DevTools won’t see the raw actions emitted by asynchronous middleware such as &lt;a href="https://github.com/acdlite/redux-promise">redux-promise&lt;/a> or &lt;a href="https://github.com/gaearon/redux-thunk">redux-thunk&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="running-examples">Running Examples&lt;/h3>
&lt;p>Clone the project:&lt;/p>
&lt;pre tabindex="0">&lt;code>git clone https://github.com/gaearon/redux-devtools.git
cd redux-devtools
&lt;/code>&lt;/pre>&lt;p>Run &lt;code>npm install&lt;/code> in the root folder:&lt;/p>
&lt;pre tabindex="0">&lt;code>npm install
&lt;/code>&lt;/pre>&lt;p>Now you can open an example folder and run &lt;code>npm install&lt;/code> there:&lt;/p>
&lt;pre tabindex="0">&lt;code>cd examples/counter # or examples/todomvc
npm install
&lt;/code>&lt;/pre>&lt;p>Finally, run the development server and open the page:&lt;/p>
&lt;pre tabindex="0">&lt;code>npm start
open http://localhost:3000
&lt;/code>&lt;/pre>&lt;p>Try clicking on actions in the log, or changing some code inside the reducers. You should see the action log re-evaluate the state on every code change.&lt;/p>
&lt;p>Also try opening &lt;code>http://localhost:3000/?debug_session=123&lt;/code>, click around, and then refresh. You should see that all actions have been restored from the local storage.&lt;/p>
&lt;h3 id="custom-monitors">Custom Monitors&lt;/h3>
&lt;p>&lt;strong>DevTools accepts monitor components so you can build a completely custom UI.&lt;/strong> &lt;a href="https://github.com/gaearon/redux-devtools-log-monitor">&lt;code>LogMonitor&lt;/code>&lt;/a> and &lt;a href="https://github.com/gaearon/redux-devtools-dock-monitor">&lt;code>DockMonitor&lt;/code>&lt;/a> are just examples of what is possible.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://github.com/gaearon/redux-devtools/issues/3">I challenge you to build a custom monitor for Redux DevTools!&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Some crazy ideas for custom monitors:&lt;/p>
&lt;ul>
&lt;li>A slider that lets you jump between computed states just by dragging it&lt;/li>
&lt;li>An in-app layer that shows the last N states right in the app (e.g. for animation)&lt;/li>
&lt;li>A time machine like interface where the last N states of your app reside on different Z layers&lt;/li>
&lt;li>Feel free to come up with and implement your own! Check &lt;a href="https://github.com/gaearon/redux-devtools-log-monitor">&lt;code>LogMonitor&lt;/code>&lt;/a> &lt;code>propTypes&lt;/code> to see what you can do.&lt;/li>
&lt;/ul>
&lt;p>In fact some of these are implemented already:&lt;/p>
&lt;h4 id="redux-slider-monitorhttpsgithubcomcalesceredux-slider-monitor">&lt;a href="https://github.com/calesce/redux-slider-monitor">redux-slider-monitor&lt;/a>&lt;/h4>
&lt;p>&lt;img src="https://camo.githubusercontent.com/d61984306d27d5e0739efc2d57c56ba7aed7996c/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f662e636c2e6c792f6974656d732f3269314c3147316e3161316833793161324f31772f53637265656e2532305265636f7264696e67253230323031352d30382d3034253230617425323030372e3435253230504d2e676966" alt="">&lt;/p>
&lt;h4 id="redux-devtools-filterable-log-monitorhttpsgithubcombvaughnredux-devtools-filterable-log-monitor">&lt;a href="https://github.com/bvaughn/redux-devtools-filterable-log-monitor/">redux-devtools-filterable-log-monitor&lt;/a>&lt;/h4>
&lt;p>&lt;img src="https://cloud.githubusercontent.com/assets/29597/11937666/a438d56c-a7ca-11e5-848a-0d535d6c3e25.gif" alt="reduxfilterablelogmonitor">&lt;/p>
&lt;h4 id="keep-them-coming">Keep them coming!&lt;/h4>
&lt;p>Create a PR to add your custom monitor.&lt;/p>
&lt;h3 id="license">License&lt;/h3>
&lt;p>MIT&lt;/p></content></item><item><title>redux.md</title><link>/posts/nodejs/redux/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/redux/</guid><description>Redux Redux is a predictable state container for JavaScript apps.
Testimonials “Love what you’re doing with Redux” Jing Chen, creator of Flux
“I asked for comments on Redux in FB&amp;rsquo;s internal JS discussion group, and it was universally praised. Really awesome work.” Bill Fisher, author of Flux documentation
“It&amp;rsquo;s cool that you are inventing a better Flux by not doing Flux at all.” André Staltz, creator of Cycle
Developer Experience I wrote Redux while working on my React Europe talk called “Hot Reloading with Time Travel”.</description><content>&lt;h1 id="reduxhttpracktgithubioredux">&lt;a href="http://rackt.github.io/redux">Redux&lt;/a>&lt;/h1>
&lt;p>Redux is a predictable state container for JavaScript apps.&lt;/p>
&lt;h3 id="testimonials">Testimonials&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/jingc/status/616608251463909376">“Love what you’re doing with Redux”&lt;/a>
Jing Chen, creator of Flux&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/fisherwebdev/status/616286955693682688">“I asked for comments on Redux in FB&amp;rsquo;s internal JS discussion group, and it was universally praised. Really awesome work.”&lt;/a>
Bill Fisher, author of Flux documentation&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/andrestaltz/status/616271392930201604">“It&amp;rsquo;s cool that you are inventing a better Flux by not doing Flux at all.”&lt;/a>
André Staltz, creator of Cycle&lt;/p>
&lt;/blockquote>
&lt;h3 id="developer-experience">Developer Experience&lt;/h3>
&lt;p>I wrote Redux while working on my React Europe talk called &lt;a href="https://www.youtube.com/watch?v=xsSnOQynTHs">“Hot Reloading with Time Travel”&lt;/a>. My goal was to create a state management library with minimal API but completely predictable behavior, so it is possible to implement logging, hot reloading, time travel, universal apps, record and replay, without any buy-in from the developer.&lt;/p>
&lt;h3 id="influences">Influences&lt;/h3>
&lt;p>Redux evolves the ideas of &lt;a href="http://facebook.github.io/flux/">Flux&lt;/a>, but avoids its complexity by taking cues from &lt;a href="https://github.com/evancz/elm-architecture-tutorial/">Elm&lt;/a>.
Whether you have used them or not, Redux only takes a few minutes to get started with.&lt;/p>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;p>To install the stable version:&lt;/p>
&lt;pre tabindex="0">&lt;code>npm install --save redux
&lt;/code>&lt;/pre>&lt;p>Most likely, you’ll also need &lt;a href="https://github.com/rackt/react-redux">the React bindings&lt;/a> and &lt;a href="https://github.com/gaearon/redux-devtools">the developer tools&lt;/a>.&lt;/p>
&lt;pre tabindex="0">&lt;code>npm install --save react-redux
npm install --save-dev redux-devtools
&lt;/code>&lt;/pre>&lt;p>This assumes that you’re using &lt;a href="https://www.npmjs.com/">npm&lt;/a> package manager with a module bundler like &lt;a href="http://webpack.github.io">Webpack&lt;/a> or &lt;a href="http://browserify.org/">Browserify&lt;/a> to consume &lt;a href="http://webpack.github.io/docs/commonjs.html">CommonJS modules&lt;/a>.&lt;/p>
&lt;p>If you don’t yet use &lt;a href="https://www.npmjs.com/">npm&lt;/a> or a modern module bundler, and would rather prefer a single-file &lt;a href="https://github.com/umdjs/umd">UMD&lt;/a> build that makes &lt;code>Redux&lt;/code> available as a global object, you can grab a pre-built version from &lt;a href="https://cdnjs.com/libraries/redux">cdnjs&lt;/a>. We &lt;em>don’t&lt;/em> recommend this approach for any serious application, as most of the libraries complementary to Redux are only available on &lt;a href="https://www.npmjs.com/">npm&lt;/a>.&lt;/p>
&lt;h3 id="the-gist">The Gist&lt;/h3>
&lt;p>The whole state of your app is stored in an object tree inside a single &lt;em>store&lt;/em>.
The only way to change the state tree is to emit an &lt;em>action&lt;/em>, an object describing what happened.
To specify how the actions transform the state tree, you write pure &lt;em>reducers&lt;/em>.&lt;/p>
&lt;p>That’s it!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> { &lt;span style="color:#a6e22e">createStore&lt;/span> } &lt;span style="color:#a6e22e">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;redux&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * This is a reducer, a pure function with (state, action) =&amp;gt; state signature.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * It describes how an action transforms the state into the next state.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * The shape of the state is up to you: it can be a primitive, an array, an object,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * or even an Immutable.js data structure. The only important part is that you should
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * not mutate the state object, but return a new object if the state changes.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * In this example, we use a `switch` statement and strings, but you can use a helper that
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * follows a different convention (such as function maps) if it makes sense for your project.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">counter&lt;/span>(&lt;span style="color:#a6e22e">state&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">action&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (&lt;span style="color:#a6e22e">action&lt;/span>.&lt;span style="color:#a6e22e">type&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;INCREMENT&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">state&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;DECREMENT&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">state&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">state&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Create a Redux store holding the state of your app.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Its API is { subscribe, dispatch, getState }.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">store&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">createStore&lt;/span>(&lt;span style="color:#a6e22e">counter&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// You can subscribe to the updates manually, or use bindings to your view layer.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">store&lt;/span>.&lt;span style="color:#a6e22e">subscribe&lt;/span>(() =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">store&lt;/span>.&lt;span style="color:#a6e22e">getState&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// The only way to mutate the internal state is to dispatch an action.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// The actions can be serialized, logged or stored and later replayed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">store&lt;/span>.&lt;span style="color:#a6e22e">dispatch&lt;/span>({ &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;INCREMENT&amp;#39;&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">store&lt;/span>.&lt;span style="color:#a6e22e">dispatch&lt;/span>({ &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;INCREMENT&amp;#39;&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">store&lt;/span>.&lt;span style="color:#a6e22e">dispatch&lt;/span>({ &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;DECREMENT&amp;#39;&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 1
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Instead of mutating the state directly, you specify the mutations you want to happen with plain objects called &lt;em>actions&lt;/em>. Then you write a special function called a &lt;em>reducer&lt;/em> to decide how every action transforms the entire application’s state.&lt;/p>
&lt;p>If you’re coming from Flux, there is a single important difference you need to understand. Redux doesn’t have a Dispatcher or support many stores. Instead, there is just a single store with a single root reducing function. As your app grows, instead of adding stores, you split the root reducer into smaller reducers independently operating on the different parts of the state tree. This is exactly like there is just one root component in a React app, but it is composed out of many small components.&lt;/p>
&lt;p>This architecture might seem like an overkill for a counter app, but the beauty of this pattern is how well it scales to large and complex apps. It also enables very powerful developer tools, because it is possible to trace every mutation to the action that caused it. You can record user sessions and reproduce them just by replaying every action.&lt;/p>
&lt;h3 id="learn-redux-from-its-creator">Learn Redux from Its Creator&lt;/h3>
&lt;p>&lt;a href="https://egghead.io/series/getting-started-with-redux">Getting Started with Redux&lt;/a> is a video course consisting of 30 videos narrated by Dan Abramov, author of Redux. It is designed to complement the “Basics” part of the docs while bringing additional insights about immutability, testing, Redux best practices, and using Redux with React. &lt;strong>This course is free and will always be.&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/sandrinodm/status/670548531422326785">“Great course on egghead.io by @dan_abramov - instead of just showing you how to use #redux, it also shows how and why redux was built!”&lt;/a>
Sandrino Di Mattia&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/chrisdhanaraj/status/670328025553219584">“Plowing through @dan_abramov &amp;lsquo;Getting Started with Redux&amp;rsquo; - its amazing how much simpler concepts get with video.”&lt;/a>
Chris Dhanaraj&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/eddiezane/status/670333133242408960">“This video series on Redux by @dan_abramov on @eggheadio is spectacular!”&lt;/a>
Eddie Zaneski&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/danott/status/669909126554607617">“Come for the name hype. Stay for the rock solid fundamentals. (Thanks, and great job @dan_abramov and @eggheadio!)”&lt;/a>
Dan&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;a href="https://twitter.com/gelatindesign/status/669658358643892224">“This series of videos on Redux by @dan_abramov is repeatedly blowing my mind - gunna do some serious refactoring”&lt;/a>
Laurence Roberts&lt;/p>
&lt;/blockquote>
&lt;p>So, what are you waiting for?&lt;/p>
&lt;h4 id="watch-the-30-free-videoshttpseggheadioseriesgetting-started-with-redux">&lt;a href="https://egghead.io/series/getting-started-with-redux">Watch the 30 Free Videos!&lt;/a>&lt;/h4>
&lt;p>If you enjoyed my course, consider supporting Egghead by &lt;a href="https://egghead.io/pricing">buying a subscription&lt;/a>. Subscribers have access to the source code for the example in every one of my videos, as well as to tons of advanced lessons on other topics, including JavaScript in depth, React, Angular, and more. Many &lt;a href="https://egghead.io/instructors">Egghead instructors&lt;/a> are also open source library authors, so buying a subscription is a nice way to thank them for the work that they’ve done.&lt;/p>
&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/introduction/index.html">Introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/basics/index.html">Basics&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/advanced/index.html">Advanced&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/recipes/index.html">Recipes&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/Troubleshooting.html">Troubleshooting&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/Glossary.html">Glossary&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/api/index.html">API Reference&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>For PDF, ePub, and MOBI exports for offline reading, and instructions on how to create them, please see: &lt;a href="https://github.com/paulkogel/redux-offline-docs">paulkogel/redux-offline-docs&lt;/a>.&lt;/p>
&lt;h3 id="examples">Examples&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/introduction/Examples.html#counter">Counter&lt;/a> (&lt;a href="https://github.com/rackt/redux/tree/master/examples/counter">source&lt;/a>)&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/introduction/Examples.html#todomvc">TodoMVC&lt;/a> (&lt;a href="https://github.com/rackt/redux/tree/master/examples/todomvc">source&lt;/a>)&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/introduction/Examples.html#todos-with-undo">Todos with Undo&lt;/a> (&lt;a href="https://github.com/rackt/redux/tree/master/examples/todos-with-undo">source&lt;/a>)&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/introduction/Examples.html#async">Async&lt;/a> (&lt;a href="https://github.com/rackt/redux/tree/master/examples/async">source&lt;/a>)&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/introduction/Examples.html#universal">Universal&lt;/a> (&lt;a href="https://github.com/rackt/redux/tree/master/examples/universal">source&lt;/a>)&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/introduction/Examples.html#real-world">Real World&lt;/a> (&lt;a href="https://github.com/rackt/redux/tree/master/examples/real-world">source&lt;/a>)&lt;/li>
&lt;li>&lt;a href="http://rackt.github.io/redux/docs/introduction/Examples.html#shopping-cart">Shopping Cart&lt;/a> (&lt;a href="https://github.com/rackt/redux/tree/master/examples/shopping-cart">source&lt;/a>)&lt;/li>
&lt;/ul>
&lt;p>If you’re new to the NPM ecosystem and have troubles getting a project up and running, or aren’t sure where to paste the gist above, check out &lt;a href="https://github.com/jackielii/simplest-redux-example">simplest-redux-example&lt;/a> that uses Redux together with React and Browserify.&lt;/p>
&lt;h3 id="discussion">Discussion&lt;/h3>
&lt;p>Join the &lt;a href="https://discord.gg/0ZcbPKXt5bZ6au5t">#redux&lt;/a> channel of the &lt;a href="http://www.reactiflux.com">Reactiflux&lt;/a> Discord community.&lt;/p>
&lt;h3 id="thanks">Thanks&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/evancz/elm-architecture-tutorial">The Elm Architecture&lt;/a> for a great intro to modeling state updates with reducers;&lt;/li>
&lt;li>&lt;a href="http://www.confluent.io/blog/turning-the-database-inside-out-with-apache-samza/">Turning the database inside-out&lt;/a> for blowing my mind;&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=j-kj2qwJa_E">Developing ClojureScript with Figwheel&lt;/a> for convincing me that re-evaluation should “just work”;&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/docs/wiki/hot-module-replacement-with-webpack">Webpack&lt;/a> for Hot Module Replacement;&lt;/li>
&lt;li>&lt;a href="https://github.com/acdlite/flummox">Flummox&lt;/a> for teaching me to approach Flux without boilerplate or singletons;&lt;/li>
&lt;li>&lt;a href="https://github.com/threepointone/disto">disto&lt;/a> for a proof of concept of hot reloadable Stores;&lt;/li>
&lt;li>&lt;a href="https://github.com/optimizely/nuclear-js">NuclearJS&lt;/a> for proving this architecture can be performant;&lt;/li>
&lt;li>&lt;a href="https://github.com/omcljs/om">Om&lt;/a> for popularizing the idea of a single state atom;&lt;/li>
&lt;li>&lt;a href="https://github.com/cyclejs/cycle-core">Cycle&lt;/a> for showing how often a function is the best tool;&lt;/li>
&lt;li>&lt;a href="https://github.com/facebook/react">React&lt;/a> for the pragmatic innovation.&lt;/li>
&lt;/ul>
&lt;p>Special thanks to &lt;a href="http://jdpaton.github.io">Jamie Paton&lt;/a> for handing over the &lt;code>redux&lt;/code> NPM package name.&lt;/p>
&lt;h3 id="change-log">Change Log&lt;/h3>
&lt;p>This project adheres to &lt;a href="http://semver.org/">Semantic Versioning&lt;/a>.
Every release, along with the migration instructions, is documented on the Github &lt;a href="https://github.com/rackt/redux/releases">Releases&lt;/a> page.&lt;/p>
&lt;h3 id="patrons">Patrons&lt;/h3>
&lt;p>The work on Redux was &lt;a href="https://www.patreon.com/reactdx">funded by the community&lt;/a>.
Meet some of the outstanding companies that made it possible:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://webflow.com/">Webflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.chess-ix.com/">Chess iX&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="PATRONS.md">See the full list of Redux patrons.&lt;/a>&lt;/p>
&lt;h3 id="license">License&lt;/h3>
&lt;p>MIT&lt;/p></content></item><item><title>rlang.md</title><link>/posts/academy/rlang/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/academy/rlang/</guid><description>R常用命令（Medcl专用精简版） 1.查看base包命令
library(help=&amp;#34;base&amp;#34;) 2.查看帮助
?lm help(&amp;#34;*&amp;#34;) help(&amp;#34;mean&amp;#34;) help(&amp;#34;bs&amp;#34;, package = &amp;#34;splines&amp;#34;) #在特定包里搜索 help(&amp;#34;bs&amp;#34;,try.all.packages=TRUE) #在所有包中搜索，默认只在内存加载的包中搜索 help.start() help.search(&amp;#34;tree&amp;#34;) help.search(&amp;#34;tree&amp;#34;, rebuild = TRUE)) #新安装包之后，需要rebuild apropos(&amp;#34;length&amp;#34;) #查找函数 3.赋值
a&amp;lt;-5 a=5 5-&amp;gt;a 4.查看对象
ls(pattern=&amp;#34;a&amp;#34;) ls(pat=&amp;#34;^a&amp;#34;) 5.删除对象</description><content>&lt;h1 id="r常用命令medcl专用精简版">R常用命令（Medcl专用精简版）&lt;/h1>
&lt;p>1.查看base包命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>library&lt;span style="color:#f92672">(&lt;/span>help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;base&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2.查看帮助&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>?lm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>help&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>help&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mean&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>help&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;bs&amp;#34;&lt;/span>, package &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;splines&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e">#在特定包里搜索&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>help&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;bs&amp;#34;&lt;/span>,try.all.packages&lt;span style="color:#f92672">=&lt;/span>TRUE&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e">#在所有包中搜索，默认只在内存加载的包中搜索&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>help.start&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>help.search&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tree&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>help.search&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tree&amp;#34;&lt;/span>, rebuild &lt;span style="color:#f92672">=&lt;/span> TRUE&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#75715e">#新安装包之后，需要rebuild&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apropos&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;length&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e">#查找函数&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>3.赋值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>a&amp;lt;-5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5-&amp;gt;a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4.查看对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>ls&lt;span style="color:#f92672">(&lt;/span>pattern&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls&lt;span style="color:#f92672">(&lt;/span>pat&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;^a&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>5.删除对象&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-rm(pat="a")" data-lang="rm(pat="a")">rm(list=ls(pat=&amp;#34;a&amp;#34;))
&lt;/code>&lt;/pre>&lt;p>6.构建一个dataframe数据框&lt;/p>
&lt;p>M &amp;lt;- data.frame(n1, n2, n3)&lt;/p>
&lt;p>7.查看数据类型（共有四种：数值型，字符型，复数型7和逻辑型(FALSE或TRUE)）&lt;/p>
&lt;p>x &amp;lt;- 1
mode(x)
用Inf和-Inf表示正负无穷，NaN（not a number），NA（not available）&lt;/p>
&lt;p>8.工作目录&lt;/p>
&lt;p>getwd()
setwd(&amp;quot;/home/paradis/R&amp;quot;) #如果一个文件不在工作目录里则必须给出它的路径&lt;/p>
&lt;p>9.读取文件&lt;/p>
&lt;p>read.table(file=&amp;ldquo;Q:/data_24.csv&amp;rdquo;,header=T,sep = &amp;ldquo;\t&amp;rdquo;,dec=&amp;quot;.&amp;quot;,quote=&amp;quot;&amp;quot;&amp;rsquo;&amp;quot;) #创建一个数据框
还有scan（前者可以指定变量的类型）
和read.fwf（以用来读取文件中一些固定宽度格式的数据）&lt;/p>
&lt;p>&lt;strong>mydata$V1和mydata[, 1]是向量，而mydata[&amp;ldquo;V1&amp;rdquo;]是数据框&lt;/strong>&lt;/p>
&lt;p>10.存数据&lt;/p>
&lt;p>write.table
write(x,file =&amp;ldquo;data.txt&amp;rdquo;),&lt;/p>
&lt;p>工作空间保存加载:&lt;/p>
&lt;p>用load(&amp;ldquo;xyz.RData&amp;rdquo;)
save.image()是save(list =ls(all=TRUE),
file=&amp;quot;.RData&amp;quot;)&lt;/p>
&lt;p>11.生成数据&lt;/p>
&lt;p>x &amp;lt;- 1:30 #1到30个整数序列&lt;/p>
&lt;blockquote>
&lt;p>1:5
[1] 1 2 3 4 5
3;1
[1] 3
[1] 1
3:1
[1] 3 2 1
1:(10-1)
[1] 1 2 3 4 5 6 7 8 9&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>seq(1, 5, 0.5) #生成实数序列
[1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0
seq(length=9, from=1, to=5)
[1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0&lt;/p>
&lt;/blockquote>
&lt;p>还可以用函数c直接输入数值：&lt;/p>
&lt;blockquote>
&lt;p>c(1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5)
[1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0&lt;/p>
&lt;/blockquote>
&lt;p>如果想用键盘输入一些数据也是可以的，只需要直接使用默认选项&lt;/p>
&lt;p>的scan函数：&lt;/p>
&lt;blockquote>
&lt;p>z &amp;lt;- scan()&lt;/p>
&lt;/blockquote>
&lt;p>函数rep用来创建一个所有元素都相同的向量：&lt;/p>
&lt;blockquote>
&lt;p>rep(1, 30)
[1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1&lt;/p>
&lt;/blockquote>
&lt;p>#矩阵操作&lt;/p>
&lt;blockquote>
&lt;p>matrix(1:6, 2, 3,byrow=F)
[,1] [,2] [,3]
[1,] 1 3 5
[2,] 2 4 6
matrix(1:6, 2, 3,byrow=T)
[,1] [,2] [,3]
[1,] 1 2 3
[2,] 4 5 6&lt;/p>
&lt;/blockquote>
&lt;p>#维度控制&lt;/p>
&lt;blockquote>
&lt;p>x=1:15
x
[1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
dim(x)
NULL
dim(x)&amp;lt;-c(5,3)
x
[,1] [,2] [,3]
[1,] 1 6 11
[2,] 2 7 12
[3,] 3 8 13
[4,] 4 9 14
[5,] 5 10 15&lt;/p>
&lt;/blockquote>
&lt;p>12.数据框和列表&lt;/p>
&lt;p>矩阵合并&lt;/p>
&lt;p>rbind,基于行，cbind，基于列&lt;/p>
&lt;blockquote>
&lt;p>matrix&amp;lt;-rbind(1:7,1:7)
matrix
[,1] [,2] [,3] [,4] [,5] [,6] [,7]
[1,] 1 2 3 4 5 6 7
[2,] 1 2 3 4 5 6 7&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>matrix&amp;lt;-cbind(1:7,1:7)
matrix
[,1] [,2]
[1,] 1 1
[2,] 2 2
[3,] 3 3
[4,] 4 4
[5,] 5 5
[6,] 6 6
[7,] 7 7&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>x &amp;lt;- 1:4; n &amp;lt;- 10; M &amp;lt;- c(10, 35); y &amp;lt;- 2:4
data.frame(x, y)
错误于data.frame(x, y) : 参数值意味着不同的行数 4, 3
data.frame(x, M)
x M
1 1 10
2 2 35
3 3 10
4 4 35
data.frame(x, n)
x n
1 1 10
2 2 10
3 3 10
4 4 10
L1 &amp;lt;- list(x, y); L2 &amp;lt;- list(A=x, B=y)
L1
[[1]]
[1] 1 2 3 4&lt;/p>
&lt;/blockquote>
&lt;p>[[2]]
[1] 2 3 4&lt;/p>
&lt;blockquote>
&lt;p>L2
$A
[1] 1 2 3 4&lt;/p>
&lt;/blockquote>
&lt;p>$B
[1] 2 3 4&lt;/p>
&lt;blockquote>
&lt;p>L2$A
[1] 1 2 3 4
L2$B
[1] 2 3 4&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>seq(10,11,0.2)
[1] 10.0 10.2 10.4 10.6 10.8 11.0
c(1:5,seq(10,11,0.2))
[1] 1.0 2.0 3.0 4.0 5.0 10.0 10.2 10.4 10.6 10.8 11.0&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>log2(4)
[1] 2
log10(1e7)
[1] 7&lt;/p>
&lt;/blockquote>
&lt;p>#比较&lt;/p>
&lt;blockquote>
&lt;p>a&amp;lt;-&amp;ldquo;a&amp;rdquo;
b&amp;lt;-&amp;ldquo;a&amp;rdquo;
identical(a,b)
[1] TRUE
all.equal(a,b)
[1] TRUE
x=1:5
x[1]
[1] 1
x[4]
[1] 4
x[5]
[1] 5
x[0]
integer(0)
x[0]=5
x[0]
numeric(0)
x[1]=5
x[1]
[1] 5
x
[1] 5 2 3 4 5
i=c(1,2)
x[i]
[1] 5 2&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>x=matrix(1:3,2,3)
x
[,1] [,2] [,3]
[1,] 1 3 2
[2,] 2 1 3
x[2,]
[1] 2 1 3&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>x[,2]
[1] 3 1
x &amp;lt;- 1:10
x[x&amp;gt;=5]
[1] 5 6 7 8 9 10&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>x[x%%2==0]
[1] 2 4 6 8 10
x[c(F,T)]
[1] 2 4 6 8 10
x[c(T,F)]
[1] 1 3 5 7 9&lt;/p>
&lt;/blockquote>
&lt;p>#自定义行列名&lt;/p>
&lt;blockquote>
&lt;p>names(x)&amp;lt;-c(&amp;ldquo;a&amp;rdquo;,&amp;ldquo;b&amp;rdquo;,&amp;ldquo;c&amp;rdquo;)
x
a b c
1 2 3
x&amp;lt;-matrix(1:3,2,3)
x
[,1] [,2] [,3]
[1,] 1 3 2
[2,] 2 1 3
rownames(x)&amp;lt;-c(&amp;ldquo;row1&amp;rdquo;,&amp;ldquo;row2&amp;rdquo;)
colnames(x)&amp;lt;-c(&amp;ldquo;col1&amp;rdquo;,&amp;ldquo;col2&amp;rdquo;,&amp;ldquo;col3&amp;rdquo;)
x
col1 col2 col3
row1 1 3 2
row2 2 1 3
dimnames(x)
[[1]]
[1] &amp;ldquo;row1&amp;rdquo; &amp;ldquo;row2&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>[[2]]
[1] &amp;ldquo;col1&amp;rdquo; &amp;ldquo;col2&amp;rdquo; &amp;ldquo;col3&amp;rdquo;&lt;/p>
&lt;blockquote>
&lt;p>x&amp;lt;-array(1:8,dim=c(2,2,3))
x
, , 1&lt;/p>
&lt;/blockquote>
&lt;p>[,1] [,2]
[1,] 1 3
[2,] 2 4&lt;/p>
&lt;p>, , 2&lt;/p>
&lt;p>[,1] [,2]
[1,] 5 7
[2,] 6 8&lt;/p>
&lt;p>, , 3&lt;/p>
&lt;p>[,1] [,2]
[1,] 1 3
[2,] 2 4&lt;/p>
&lt;p>#向量运算&lt;/p>
&lt;blockquote>
&lt;p>x&amp;lt;-1:4
y&amp;lt;-rep(1,4)
z&amp;lt;-x+y
z
[1] 2 3 4 5&lt;/p>
&lt;/blockquote>
&lt;p>#不同长度，循环使用&lt;/p>
&lt;blockquote>
&lt;p>x=1:2
y=1:4
x+y
[1] 2 4 4 6
x
[1] 1 2
y
[1] 1 2 3 4&lt;/p>
&lt;/blockquote>
&lt;p>#函数快速参考&lt;/p>
&lt;p>sum(x) 对x中的元素求和
prod(x) 对x中的元素求连乘积
max(x) x中元素的最大值
min(x) x中元素的最小值
which.max(x) 返回x中最大元素的下标
which.min(x) 返回x中最小元素的下标
range(x) 与c(min(x), max(x))作用相同
length(x) x中元素的数目
mean(x) x中元素的均值
median(x) x中元素的中位数
var(x) or cov(x) x中元素的的方差（用n ? 1做分母）；如果x是一个矩阵或者一
个数据框，将计算协方差阵
cor(x) 如果x是一个矩阵或者一个数据框则计算相关系数矩阵（如
果x是一个向量则结果是1）
var(x, y) or cov(x, y) x和y的协方差，如果是矩阵或数据框则计算x和y对应列的协方
差
cor(x, y) x和y的线性相关系数，如果是矩阵或者数据框则计算相关系数
矩阵。&lt;/p>
&lt;p>round(x, n) 将x中的元素四舍五入到小数点后n位
rev(x) 对x中的元素取逆序
sort(x) 将x中的元素按升序排列；要按降序排列可以用命令rev(sort(x))
rank(x) 返回x中元素的秩
log(x, base) 计算以base为底的x的对数值
scale(x) 如果x是一个矩阵， 则中心化和标准化数据； 若只进行中心化
则使用选项scale=FALSE， 只进行标准化则center=FALSE（ 缺省值
是center=TRUE, scale=TRUE）
pmin(x,y,&amp;hellip;) 返回一个向量，它的第i个元素是x[i], y[i], . . . 中最小值
pmax(x,y,&amp;hellip;) 同上，取最大值
cumsum(x) 返回一个向量，它的第i个元素是从x[1]到x[i]的和
cumprod(x) 同上，取乘积
cummin(x) 同上，取最小值
cummax(x) 同上，取最大值
match(x, y) 返回一个和x的长度相同的向量，表示x中与y中元素相同的元素在y中
的位置（没有则返回NA）
which(x == a) 返回一个包含x符合条件（当比较运算结果为真（TRUE）的下标的向
量，在这个结果向量中数值i说明x[i] == a（这个函数的参数必须是
逻辑型变量）
choose(n, k) 计算从n个样本中选取k个的组合数
na.omit(x) 忽略有缺失值（NA）的观察数据（如果x是矩阵或数据框则忽略相应的
行）
na.fail(x) 如果x包含至少一个NA则返回一个错误消息
unique(x) 如果x是一个向量或者数据框，则返回一个类似的对象但是去掉所有重
复的元素（对于重复的元素只取一个）
table(x) 返回一个表格，给出x中重复元素的个数列表(尤其对于整数型或者因子
型变量)
table(x, y) x与y的列联表
subset(x, &amp;hellip;) 返回x中的一个满足特定条件&amp;hellip;的子集，该条件通常是进行比较运
算：x$V1 &amp;lt; 10；如果x是数据框，选项select给出要保留的变量（或
者用负号表示去掉）
sample(x, size) 从x中无放回抽取size个样本，选项replace = TRUE表示有放回的抽样&lt;/p>
&lt;pre tabindex="0">&lt;code>&lt;/code>&lt;/pre></content></item><item><title>snake-game1.md</title><link>/posts/game/snake-game1/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/game/snake-game1/</guid><description>从零开始设计一个类贪吃蛇的框架（一） 从零开始设计一个类贪吃蛇的框架（二）
从零开始设计一个类贪吃蛇的框架（三）
先看看粗糙的效果图
首先在quick-cocos2dx中生成一个模板 设计一个舞台场景 关于场景的分割和布局 我们可以把屏幕分割尾行和列
在 snakeController.lua中定义这个变量，我们很多的坐标计算按这个格栅来
COLUMNS = 15 ROWS = 20 构建场景 snakeController.lua中输入以下代码
local SnakeGameController = class(&amp;#34;SnakeController&amp;#34;, function() return display.newScene(&amp;#34;SnakeController&amp;#34;) end) function SnakeGameController:ctor() self.layer = display.newLayer() self:addChild(self.layer) end function SnakeGameController:onTouch(event, x, y) end function SnakeGameController:onEnter() self.layer:addTouchEventListener(function(event, x, y) return self:onTouch(event, x, y) end) self.layer:setTouchEnabled(true) self:Play() end function SnakeGameController:Play() end return SnakeGameController 很简单的，我们设计一个场景，然后添加了onEnter函数
场景有一个图层
可以响应触摸事件
画个方框 下一步要在图层中实现画图，简单绘出一个方框
function SnakeGameController:drawGridNode(x,y,color) local node = display.newRect(45, 45) node:setFill(true) node:setColor(color) node:setLineWidth(3) node:setPosition(x,y) self.</description><content>&lt;h1 id="从零开始设计一个类贪吃蛇的框架一">从零开始设计一个类贪吃蛇的框架（一）&lt;/h1>
&lt;p>&lt;a href="snake-game2">从零开始设计一个类贪吃蛇的框架（二）&lt;/a>&lt;/p>
&lt;p>&lt;a href="snake-game3">从零开始设计一个类贪吃蛇的框架（三）&lt;/a>&lt;/p>
&lt;p>先看看粗糙的效果图&lt;/p>
&lt;p>&lt;img src="http://files.git.oschina.net/group1/M00/00/15/cHwGbFNXu-WAHDvgAAAdNoQ6Dpk093.PNG?token=73a22811cebab7571fc84aaba2c8a295&amp;amp;ts=1398258710&amp;amp;filename=demo.PNG" alt="粗糙的效果图1" title="贪吃蛇">&lt;/p>
&lt;p>&lt;img src="http://files.git.oschina.net/group1/M00/00/15/cHwGbFNXvNGAC9fjAAAZ3w59pSQ046.PNG?token=b529163ff0c93e41c2b39943975a1a6b&amp;amp;ts=1398258898&amp;amp;filename=demo2.PNG" alt="粗糙的效果图2" title="贪吃蛇">&lt;/p>
&lt;h2 id="首先在quick-cocos2dx中生成一个模板">首先在quick-cocos2dx中生成一个模板&lt;/h2>
&lt;h2 id="设计一个舞台场景">设计一个舞台场景&lt;/h2>
&lt;h2 id="关于场景的分割和布局">关于场景的分割和布局&lt;/h2>
&lt;p>我们可以把屏幕分割尾行和列&lt;/p>
&lt;p>在&lt;code> snakeController.lua&lt;/code>中定义这个变量，我们很多的坐标计算按这个格栅来&lt;/p>
&lt;pre>&lt;code>COLUMNS = 15
ROWS = 20
&lt;/code>&lt;/pre>
&lt;h3 id="构建场景">构建场景&lt;/h3>
&lt;p>&lt;code> snakeController.lua&lt;/code>中输入以下代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> SnakeGameController &lt;span style="color:#f92672">=&lt;/span> class(&lt;span style="color:#e6db74">&amp;#34;SnakeController&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> display.newScene(&lt;span style="color:#e6db74">&amp;#34;SnakeController&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">ctor&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self.layer &lt;span style="color:#f92672">=&lt;/span> display.newLayer()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:addChild(self.layer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">onTouch&lt;/span>(event, x, y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">onEnter&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self.layer:addTouchEventListener(&lt;span style="color:#66d9ef">function&lt;/span>(event, x, y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self:onTouch(event, x, y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self.layer:setTouchEnabled(&lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:Play()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">Play&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> SnakeGameController
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>很简单的，我们设计一个场景，然后添加了&lt;code>onEnter&lt;/code>函数&lt;/p>
&lt;ol>
&lt;li>
&lt;p>场景有一个图层&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可以响应触摸事件&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="画个方框">画个方框&lt;/h3>
&lt;p>下一步要在图层中实现画图，简单绘出一个方框&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">drawGridNode&lt;/span>(x,y,color)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> node &lt;span style="color:#f92672">=&lt;/span> display.newRect(&lt;span style="color:#ae81ff">45&lt;/span>, &lt;span style="color:#ae81ff">45&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node:setFill(&lt;span style="color:#66d9ef">true&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node:setColor(color)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node:setLineWidth(&lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> node:setPosition(x,y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self.layer:addChild(node)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个函数调用&lt;code>newRect&lt;/code>方法，就可以在图层上绘画&lt;/p>
&lt;p>&lt;em>参数x，y是我们的坐标&lt;/em>&lt;/p>
&lt;p>&lt;em>参数color是色彩，在文件头部添加以下全局变量&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> GREEN &lt;span style="color:#f92672">=&lt;/span> ccc4f(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0.5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RED &lt;span style="color:#f92672">=&lt;/span> ccc4f(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0.5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BLUE &lt;span style="color:#f92672">=&lt;/span> ccc4f(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BLACK &lt;span style="color:#f92672">=&lt;/span> ccc4f(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WHITE &lt;span style="color:#f92672">=&lt;/span> ccc4f(&lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">255&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>注意在旧的版本中，这个函数的坐标是在坐标系的中央，后面的坐标都要转换。新的版本好像已经统一到了&lt;code>(0,0)&lt;/code>&lt;/em>&lt;/p>
&lt;h3 id="画食物">画食物&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">drawFoodNode&lt;/span>(color)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> food[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>]&lt;span style="color:#f92672">=&lt;/span>display.cx &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span> &lt;span style="color:#f92672">*&lt;/span>math.random(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">20&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> food[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>]&lt;span style="color:#f92672">=&lt;/span>display.cy &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span> &lt;span style="color:#f92672">*&lt;/span>math.random(&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">12&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self[&lt;span style="color:#e6db74">&amp;#34;sprite&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> self:drawGridNode(food[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>],food[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>],color)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们通过&lt;code>math.random&lt;/code>方法可以随机生成食物的位置&lt;/p>
&lt;p>好了，我们的基本场景已经就绪&lt;/p>
&lt;h3 id="增加启动游戏的函数">增加启动游戏的函数&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">Play&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:drawFoodNode(RED)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>onEnter&lt;/code>中调用&lt;code>self:Play()&lt;/code>就启动了我们的游戏场景了&lt;/p>
&lt;p>可以看到一个美味的食物出现在屏幕上！！！&lt;/p>
&lt;p>下面就具体实现最难的蛇的部分&lt;/p></content></item><item><title>snake-game2.md</title><link>/posts/game/snake-game2/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/game/snake-game2/</guid><description>从零开始设计一个类贪吃蛇的框架（二） 从零开始设计一个类贪吃蛇的框架（一）
从零开始设计一个类贪吃蛇的框架（三）
画蛇身 画出蛇身也很简单，可以把蛇想象成很多节，每节就是一个方框
画蛇全身就是把多个方框连接起来
首先我们定义蛇的一些基本属性 snake ={ x={}, y={}, nodes=5, nodeArray={}, direction=1, life=1, sprite=nil, brain=nil } 其中x和y是我们用来存放每节蛇身坐标的数组
我们的node是蛇身节的数量
首先画蛇身的函数添加到Play中 function SnakeGameController:Play() self:drawSnakeNode(RED) end 接下来就是画蛇身的函数 在ctor函数中增加以下代码来初始化蛇的属性
for i=1,snake[&amp;#34;nodes&amp;#34;] do snake[&amp;#34;x&amp;#34;][i] = display.cx - (COLUMN-i) *45 snake[&amp;#34;y&amp;#34;][i] = display.cy - (ROW-1) *45 print(snake[&amp;#34;x&amp;#34;][i]..snake[&amp;#34;y&amp;#34;][i]) end 在文件中增加以下函数
function SnakeGameController:drawSnakeNode(color) for i=1,snake[&amp;#34;nodes&amp;#34;] do local node = self:drawGridNode(snake[&amp;#34;x&amp;#34;][i],snake[&amp;#34;y&amp;#34;][i],color) end end 这样我们的蛇就画出来了！
让蛇动起来 激动人心的时候到了，让蛇动起来。
动画离不开帧的概念，我们的思路就是，每一帧把蛇身末尾的一节去除，在头部增加一节，这样蛇身就产生了移动效果了
先增加一个函数SnakeGameController:moveSnake function SnakeGameController:moveSnake() print(&amp;#34;original coordinates&amp;#34;) local lenght = snake[&amp;#34;nodes&amp;#34;] for i=1,snake[&amp;#34;nodes&amp;#34;] do--/*蛇每环节往前移动,也贪吃蛇关键算法*/ print(snake[&amp;#34;x&amp;#34;][i].</description><content>&lt;h1 id="从零开始设计一个类贪吃蛇的框架二">从零开始设计一个类贪吃蛇的框架（二）&lt;/h1>
&lt;p>&lt;a href="snake-game1">从零开始设计一个类贪吃蛇的框架（一）&lt;/a>&lt;/p>
&lt;p>&lt;a href="snake-game3">从零开始设计一个类贪吃蛇的框架（三）&lt;/a>&lt;/p>
&lt;h2 id="画蛇身">画蛇身&lt;/h2>
&lt;p>画出蛇身也很简单，可以把蛇想象成很多节，每节就是一个方框&lt;/p>
&lt;p>画蛇全身就是把多个方框连接起来&lt;/p>
&lt;h3 id="首先我们定义蛇的一些基本属性">首先我们定义蛇的一些基本属性&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> snake &lt;span style="color:#f92672">=&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x&lt;span style="color:#f92672">=&lt;/span>{},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y&lt;span style="color:#f92672">=&lt;/span>{},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodes&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeArray&lt;span style="color:#f92672">=&lt;/span>{},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> direction&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> life&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sprite&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">nil&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> brain&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>x&lt;/code>和&lt;code>y&lt;/code>是我们用来存放每节蛇身坐标的数组&lt;/p>
&lt;p>我们的&lt;code>node&lt;/code>是蛇身节的数量&lt;/p>
&lt;h3 id="首先画蛇身的函数添加到play中">首先画蛇身的函数添加到&lt;code>Play&lt;/code>中&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">Play&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:drawSnakeNode(RED)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="接下来就是画蛇身的函数">接下来就是画蛇身的函数&lt;/h3>
&lt;p>在&lt;code>ctor&lt;/code>函数中增加以下代码来初始化蛇的属性&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,snake[&lt;span style="color:#e6db74">&amp;#34;nodes&amp;#34;&lt;/span>] &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][i] &lt;span style="color:#f92672">=&lt;/span> display.cx &lt;span style="color:#f92672">-&lt;/span> (COLUMN&lt;span style="color:#f92672">-&lt;/span>i) &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">45&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][i] &lt;span style="color:#f92672">=&lt;/span> display.cy &lt;span style="color:#f92672">-&lt;/span> (ROW&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">45&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][i]&lt;span style="color:#f92672">..&lt;/span>snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][i])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在文件中增加以下函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">drawSnakeNode&lt;/span>(color)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,snake[&lt;span style="color:#e6db74">&amp;#34;nodes&amp;#34;&lt;/span>] &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> node &lt;span style="color:#f92672">=&lt;/span> self:drawGridNode(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][i],snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][i],color)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样我们的蛇就画出来了！&lt;/p>
&lt;h4 id="让蛇动起来">让蛇动起来&lt;/h4>
&lt;p>激动人心的时候到了，让蛇动起来。&lt;/p>
&lt;p>动画离不开帧的概念，我们的思路就是，每一帧把蛇身末尾的一节去除，在头部增加一节，这样蛇身就产生了移动效果了&lt;/p>
&lt;h5 id="先增加一个函数snakegamecontrollermovesnake">先增加一个函数&lt;code>SnakeGameController:moveSnake&lt;/code>&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">moveSnake&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;original coordinates&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> lenght &lt;span style="color:#f92672">=&lt;/span> snake[&lt;span style="color:#e6db74">&amp;#34;nodes&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,snake[&lt;span style="color:#e6db74">&amp;#34;nodes&amp;#34;&lt;/span>] &lt;span style="color:#66d9ef">do&lt;/span>&lt;span style="color:#75715e">--/*蛇每环节往前移动,也贪吃蛇关键算法*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][i]&lt;span style="color:#f92672">..&lt;/span>snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][i])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- remove last node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:drawGridNode(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][&lt;span style="color:#ae81ff">1&lt;/span>], snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][&lt;span style="color:#ae81ff">1&lt;/span>],BLACK)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.remove(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>],&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.remove(snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>],&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- 查看方向&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> switch &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.insert(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>],lenght,snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][lenght&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.insert(snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>],lenght,snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][lenght&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.insert(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>],lenght,snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][lenght&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.insert(snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>],lenght,snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][lenght&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">3&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.insert(snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>],lenght,snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][lenght&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.insert(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>],lenght,snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][lenght&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">4&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.insert(snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>],lenght,snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][lenght&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.insert(snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>],lenght,snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][lenght&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">--按方向更新蛇每节坐标数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> switch[snake[&lt;span style="color:#e6db74">&amp;#34;direction&amp;#34;&lt;/span>]]()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;updating coordinates&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:drawSnakeNode(RED)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>lua&lt;/code>语言中没有&lt;code>switch&lt;/code>的关键字，但是通过表和闭包的方式，我们很容易可以模拟出&lt;code>switch&lt;/code>的效果&lt;/p>
&lt;p>上面函数中&lt;code>switch&lt;/code>的主要目的是判断蛇的方向&lt;/p>
&lt;h5 id="然后要在帧动画中注册这个方法">然后要在帧动画中注册这个方法&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">onEnterFrame&lt;/span>(dt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:moveSnake()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="并将帧动画实现函数注册到onenter函数中">并将帧动画实现函数，注册到&lt;code>onEnter&lt;/code>函数中&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> self:schedule((&lt;span style="color:#66d9ef">function&lt;/span>(dt) self:onEnterFrame(dt) &lt;span style="color:#66d9ef">end&lt;/span>),&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>看看，我们的蛇动起来了！！！&lt;/p></content></item><item><title>snake-game3.md</title><link>/posts/game/snake-game3/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/game/snake-game3/</guid><description>从零开始设计一个类贪吃蛇的框架（三） 从零开始设计一个类贪吃蛇的框架（一）
从零开始设计一个类贪吃蛇的框架（二）
我们的蛇不能老是傻傻地瞎转悠
为了让蛇显得聪明些，我们增加一些相关的效果
比如停、撞墙、躲避墙
让蛇停下来 function SnakeGameController:stopSnake() print(&amp;#34;stopping snake!&amp;#34;) for i=1,snake[&amp;#34;nodes&amp;#34;] do snake[&amp;#34;x&amp;#34;][i] = display.cx snake[&amp;#34;y&amp;#34;][i] = display.cy end self:drawSnakeNode(BLUE) end 如果点击或触摸，让蛇转向 转向要首先判断方向，我们把他单独实现出来 function SnakeGameController:needChangeDirection(x,y) print(&amp;#34;Detected touch!!!!!&amp;#34;) x = x - display.width/2 y = y - display.height/2 curDirection = snake[&amp;#34;direction&amp;#34;] snakeHead = snake[&amp;#34;nodes&amp;#34;] if curDirection&amp;lt;3 and y &amp;gt; snake[&amp;#34;y&amp;#34;][snakeHead] then newDirection = 3 elseif curDirection&amp;lt;3 and y &amp;lt; snake[&amp;#34;y&amp;#34;][snakeHead] then newDirection = 4 elseif curDirection&amp;gt;2 and x &amp;gt; snake[&amp;#34;x&amp;#34;][snakeHead] then newDirection = 1 elseif curDirection&amp;gt;2 and x &amp;lt; snake[&amp;#34;x&amp;#34;][snakeHead] then newDirection = 2 end return newDirection end 触摸事件，按方向移动 function SnakeGameController:onTouch(event, x, y) newDirection = self:needChangeDirection(x,y) print(&amp;#34;Direction is &amp;#34;.</description><content>&lt;h1 id="从零开始设计一个类贪吃蛇的框架三">从零开始设计一个类贪吃蛇的框架（三）&lt;/h1>
&lt;p>&lt;a href="snake-game1">从零开始设计一个类贪吃蛇的框架（一）&lt;/a>&lt;/p>
&lt;p>&lt;a href="snake-game2">从零开始设计一个类贪吃蛇的框架（二）&lt;/a>&lt;/p>
&lt;p>我们的蛇不能老是傻傻地瞎转悠&lt;/p>
&lt;p>为了让蛇显得聪明些，我们增加一些相关的效果&lt;/p>
&lt;p>比如停、撞墙、躲避墙&lt;/p>
&lt;h2 id="让蛇停下来">让蛇停下来&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">stopSnake&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;stopping snake!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,snake[&lt;span style="color:#e6db74">&amp;#34;nodes&amp;#34;&lt;/span>] &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][i] &lt;span style="color:#f92672">=&lt;/span> display.cx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][i] &lt;span style="color:#f92672">=&lt;/span> display.cy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:drawSnakeNode(BLUE)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="如果点击或触摸让蛇转向">如果点击或触摸，让蛇转向&lt;/h2>
&lt;h3 id="转向要首先判断方向我们把他单独实现出来">转向要首先判断方向，我们把他单独实现出来&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">needChangeDirection&lt;/span>(x,y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Detected touch!!!!!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> x &lt;span style="color:#f92672">-&lt;/span> display.width&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">=&lt;/span> y &lt;span style="color:#f92672">-&lt;/span> display.height&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curDirection &lt;span style="color:#f92672">=&lt;/span> snake[&lt;span style="color:#e6db74">&amp;#34;direction&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snakeHead &lt;span style="color:#f92672">=&lt;/span> snake[&lt;span style="color:#e6db74">&amp;#34;nodes&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> curDirection&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">and&lt;/span> y &lt;span style="color:#f92672">&amp;gt;&lt;/span> snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][snakeHead] &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newDirection &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elseif&lt;/span> curDirection&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">and&lt;/span> y &lt;span style="color:#f92672">&amp;lt;&lt;/span> snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][snakeHead] &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newDirection &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elseif&lt;/span> curDirection&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">and&lt;/span> x &lt;span style="color:#f92672">&amp;gt;&lt;/span> snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][snakeHead] &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newDirection &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elseif&lt;/span> curDirection&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">and&lt;/span> x &lt;span style="color:#f92672">&amp;lt;&lt;/span> snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][snakeHead] &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newDirection &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> newDirection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="触摸事件按方向移动">触摸事件，按方向移动&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">onTouch&lt;/span>(event, x, y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newDirection &lt;span style="color:#f92672">=&lt;/span> self:needChangeDirection(x,y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Direction is &amp;#34;&lt;/span>&lt;span style="color:#f92672">..&lt;/span>newDirection)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;direction&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> newDirection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:moveSnake()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="能够聪明地躲避墙自动转向">能够聪明地躲避墙，自动转向&lt;/h3>
&lt;p>注意调用这个函数后，都要重新画蛇身，这个功能我们已经在帧函数中实现。&lt;/p>
&lt;pre tabindex="0">&lt;code> function SnakeGameController:needChangeDirectionFromWall()
curDirection = snake[&amp;#34;direction&amp;#34;]
snakeHead = snake[&amp;#34;nodes&amp;#34;]
switch = {
[1] = function( ... )
if snake[&amp;#34;x&amp;#34;][snakeHead] &amp;gt; display.width/2 - 100 then
snake[&amp;#34;direction&amp;#34;] = math.random(3,4)
end
end,
[2]= function( ... )
if snake[&amp;#34;x&amp;#34;][snakeHead] == 100 then
snake[&amp;#34;direction&amp;#34;] = math.random(3,4)
end
end,
[3] = function( ... )
if snake[&amp;#34;y&amp;#34;][snakeHead] &amp;gt; display.height/2 - 100 then
snake[&amp;#34;direction&amp;#34;] = math.random(1,2)
end
end,
[4] = function ( ... )
if snake[&amp;#34;y&amp;#34;][snakeHead] &amp;lt; 100 then
snake[&amp;#34;direction&amp;#34;] = math.random(1,2)
end
end,
}
print(switch[curDirection]())
return switch[curDirection]()
end
&lt;/code>&lt;/pre>&lt;h3 id="如果蛇撞墙就结束">如果蛇撞墙就结束&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">snakeHitWall&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,snake[&lt;span style="color:#e6db74">&amp;#34;nodes&amp;#34;&lt;/span>] &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][i] &lt;span style="color:#f92672">&amp;gt;&lt;/span> display.width&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>][i] &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#f92672">-&lt;/span>display.width&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][i] &lt;span style="color:#f92672">&amp;gt;&lt;/span> display.height&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;y&amp;#34;&lt;/span>][i] &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#f92672">-&lt;/span>display.height&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;life&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;brain&amp;#34;&lt;/span>]:getState()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;brain&amp;#34;&lt;/span>]:doEvent(&lt;span style="color:#e6db74">&amp;#34;panic&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;brain&amp;#34;&lt;/span>]:getState()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- self:GameOver()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span> &lt;span style="color:#75715e">-- for&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加结束函数终止游戏">添加结束函数，终止游戏&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">GameOver&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Game Over!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> label &lt;span style="color:#f92672">=&lt;/span> ui.newTTFLabel({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Game Over!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> display.cx,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">=&lt;/span> display.cy,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> align &lt;span style="color:#f92672">=&lt;/span> ui.TEXT_ALIGN_CENTER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:addChild(label)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self.state &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;IDLE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加胜利函数">添加胜利函数&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">GameWin&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Game Win!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> label &lt;span style="color:#f92672">=&lt;/span> ui.newTTFLabel({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Game Win!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> display.cx,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#f92672">=&lt;/span> display.cy,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> align &lt;span style="color:#f92672">=&lt;/span> ui.TEXT_ALIGN_CENTER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self:addChild(label)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- self.state = &amp;#34;IDLE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="进阶设计--让蛇躲避墙artificial-inteligence">进阶设计&amp;ndash;让蛇躲避墙（Artificial Inteligence）&lt;/h2>
&lt;p>为了让我们的蛇更聪明，我们可以调用&lt;code>人工智能&lt;/code>的概念，让蛇判断自己的方位，当靠近四周墙壁的时候就自动转向&lt;/p>
&lt;h3 id="在文件前面引用一个状态机这个文件是在framework目录下">在文件前面引用一个&lt;code>状态机&lt;/code>。这个文件是在&lt;code>framework&lt;/code>目录下&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> StateMachine &lt;span style="color:#f92672">=&lt;/span> import(&lt;span style="color:#e6db74">&amp;#34;controller.stateMachine&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="在ctor函数中为我们的蛇增加状态机">在&lt;code>ctor&lt;/code>函数中为我们的蛇增加状态机&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> snake[&lt;span style="color:#e6db74">&amp;#34;brain&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> self:SnakeStateMachine()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="增加snakestatemachine函数用来定义snake的状态机">增加&lt;code>SnakeStateMachine&lt;/code>函数，用来定义&lt;code>snake&lt;/code>的状态机&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">SnakeGameController&lt;/span>:&lt;span style="color:#a6e22e">SnakeStateMachine&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> fsm &lt;span style="color:#f92672">=&lt;/span> StateMachine.new()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> fsm &lt;span style="color:#f92672">=&lt;/span> StateMachine.new()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fsm:setupState({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initial &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;green&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> events &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;warn&amp;#34;&lt;/span>, from &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;green&amp;#34;&lt;/span>, to &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;yellow&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;panic&amp;#34;&lt;/span>, from &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;green&amp;#34;&lt;/span>, to &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;red&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;calm&amp;#34;&lt;/span>, from &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;red&amp;#34;&lt;/span>, to &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;yellow&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;clear&amp;#34;&lt;/span>, from &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;yellow&amp;#34;&lt;/span>, to &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;green&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> callbacks &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onbeforestart &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(event) print(&lt;span style="color:#e6db74">&amp;#34;[FSM] STARTING UP&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onstart &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(event) print(&lt;span style="color:#e6db74">&amp;#34;[FSM] READY&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onbeforewarn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(event) print(&lt;span style="color:#e6db74">&amp;#34;[FSM] START   EVENT: warn!&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onbeforepanic &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(event) print(&lt;span style="color:#e6db74">&amp;#34;[FSM] START   EVENT: panic!&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onbeforecalm &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(event) print(&lt;span style="color:#e6db74">&amp;#34;[FSM] START   EVENT: calm!&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onbeforeclear &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(event) print(&lt;span style="color:#e6db74">&amp;#34;[FSM] START   EVENT: clear!&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onpanic &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(event) self:needChangeDirectionFromWall() &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> onwarn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(event) self:stopSnake() &lt;span style="color:#66d9ef">end&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(fsm:isReady())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> fsm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意到，上面的很多功能可以通过状态机来进行跟踪和协调&lt;/p>
&lt;p>基本的思路就是，没更改一种状态，就调用相应的响应函数&lt;/p>
&lt;p>比如更改精灵的图片，改变它的位置等等。&lt;/p>
&lt;p>状态机的设计比较复杂，再说吧！&lt;/p></content></item><item><title>socketio.md</title><link>/posts/nodejs/socketio/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/socketio/</guid><description>Learning socket.io combine socket.io with express is easy var app = require(&amp;#39;express&amp;#39;)(); var server = require(&amp;#39;http&amp;#39;).createServer(app); var io = require(&amp;#39;socket.io&amp;#39;).listen(server); setting route of express app.get(&amp;#39;/&amp;#39;, function(req, res){ res.sendfile(__dirname + &amp;#39;/index.html&amp;#39;); }); setting socket.io on server side io.sockets.on(&amp;#39;connection&amp;#39;,function(socket){ io.sockets.emit(&amp;#39;sayhello&amp;#39;,{hello:&amp;#39;world&amp;#39;}); io.sockets.emit(&amp;#39;news&amp;#39;,&amp;#39;All done!&amp;#39;); // receive the socket from client socket.on(&amp;#39;feedback&amp;#39;,function(data){ console.log(&amp;#34;your feedback recevied&amp;#34;,data.msg) io.sockets.emit(&amp;#39;feedback&amp;#39;,data.msg); }); socket.on(&amp;#39;login&amp;#39;,function(data){ console.log(&amp;#39;Got your name:&amp;#39;, data); var msg = data.name + &amp;#39; just logged in&amp;#39;; //broadcast to client io.sockets.emit(&amp;#39;news&amp;#39;,msg); //save data to a file }); }); Note: io.</description><content>&lt;h1 id="learning-socketio">Learning socket.io&lt;/h1>
&lt;h2 id="combine-socketio-with-express-is-easy">combine &lt;code>socket.io&lt;/code> with express is easy&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">app&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;express&amp;#39;&lt;/span>)();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">server&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;http&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">createServer&lt;/span>(&lt;span style="color:#a6e22e">app&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">io&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;socket.io&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">listen&lt;/span>(&lt;span style="color:#a6e22e">server&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setting-route-of-express">setting route of express&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">req&lt;/span>, &lt;span style="color:#a6e22e">res&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">res&lt;/span>.&lt;span style="color:#a6e22e">sendfile&lt;/span>(&lt;span style="color:#a6e22e">__dirname&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/index.html&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setting-socketio-on-server-side">setting socket.io on server side&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">sockets&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;connection&amp;#39;&lt;/span>,&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">socket&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">sockets&lt;/span>.&lt;span style="color:#a6e22e">emit&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;sayhello&amp;#39;&lt;/span>,{&lt;span style="color:#a6e22e">hello&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#e6db74">&amp;#39;world&amp;#39;&lt;/span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">sockets&lt;/span>.&lt;span style="color:#a6e22e">emit&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;news&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;All done!&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// receive the socket from client
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;feedback&amp;#39;&lt;/span>,&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;your feedback recevied&amp;#34;&lt;/span>,&lt;span style="color:#a6e22e">data&lt;/span>.&lt;span style="color:#a6e22e">msg&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">sockets&lt;/span>.&lt;span style="color:#a6e22e">emit&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;feedback&amp;#39;&lt;/span>,&lt;span style="color:#a6e22e">data&lt;/span>.&lt;span style="color:#a6e22e">msg&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;login&amp;#39;&lt;/span>,&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Got your name:&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">data&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">msg&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">data&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39; just logged in&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//broadcast to client
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">sockets&lt;/span>.&lt;span style="color:#a6e22e">emit&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;news&amp;#39;&lt;/span>,&lt;span style="color:#a6e22e">msg&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//save data to a file
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Note:&lt;/li>
&lt;li>&lt;code>io.sockets.emit&lt;/code> can emit sockets as many as you want,but &lt;code>socket&lt;/code> can be emitted only once!&lt;/li>
&lt;li>on server side, you may want to use &lt;code>socket.on&lt;/code> many times,but &lt;code>socket.emit&lt;/code> once&lt;/li>
&lt;/ul>
&lt;h2 id="make-the-server-running">make the server running!&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server&lt;/span>.&lt;span style="color:#a6e22e">listen&lt;/span>(&lt;span style="color:#a6e22e">process&lt;/span>.&lt;span style="color:#a6e22e">env&lt;/span>.&lt;span style="color:#a6e22e">PORT&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#ae81ff">1337&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="on-client-side">On client side&lt;/h2>
&lt;h3 id="define-html-body">Define html body&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">http-equiv&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Content-Type&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;text/html; charset=utf-8&amp;#34;&lt;/span>/&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;index&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">link&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;text/css&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://lib.sinaapp.com/js/bootstrap/v3.0.0/css/bootstrap.min.css&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;http://lib.sinaapp.com/js/jquery/2.0.3/jquery-2.0.3.min.js&amp;#39;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://lib.sinaapp.com/js/bootstrap/v3.0.0/js/bootstrap.min.js&amp;#34;&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span> &amp;gt;System Broadcasts:&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">br&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;news&amp;#39;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">br&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span> &amp;gt;Feedback to users emit :&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">br&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h1&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;feedback&amp;#39;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="javascript-in-body-tag">javascript in &lt;code>body&lt;/code> tag&lt;/h3>
&lt;h3 id="testing-sockets">testing sockets&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/socket.io/socket.io.js&amp;#39;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">connect&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;http://10.0.2.10:1337&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//var socket = io.connect(&amp;#39;http://linuxing3c9.jd-app.com&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;news&amp;#39;&lt;/span>,&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">$&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;#news&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">html&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;feedback&amp;#39;&lt;/span>,&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">$&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;#feedback&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">html&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">emit&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;feedback&amp;#39;&lt;/span>,{&lt;span style="color:#a6e22e">msg&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#e6db74">&amp;#39;I like it &amp;#39;&lt;/span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">socket&lt;/span>.&lt;span style="color:#a6e22e">emit&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;login&amp;#39;&lt;/span>,{&lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#e6db74">&amp;#39;xing wenju&amp;#39;&lt;/span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="you-can-also-test-the-style-and-jquery-loaded">you can also test the style and jquery loaded&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">language&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;javascript&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;text/javascript&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">$&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;activated&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>virtual_machines.md</title><link>/posts/vms/virtual_machines/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/vms/virtual_machines/</guid><description>[Virtual Machines] 虚拟机技术的广泛应用，可以极大扩展我们的视野。</description><content>&lt;h1 id="virtual-machines">[Virtual Machines]&lt;/h1>
&lt;p>虚拟机技术的广泛应用，可以极大扩展我们的视野。&lt;/p></content></item><item><title>virtualbox.md</title><link>/posts/vms/virtualbox/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/vms/virtualbox/</guid><description>virtualbox BoxManage storageattach machineA --storagectl &amp;#34;IDE Controller&amp;#34; --port 0 --device 0 --type hdd --medium VBoxManage createvm -name machineA -register VBoxManage storagectl machineA --name &amp;#34;IDE Controller&amp;#34; --add ide VBoxManage storageattach machineA --storagectl &amp;#34;IDE Controller&amp;#34; --port 0 --device 0 --type hdd --medium \path\to\file.vmdk</description><content>&lt;h1 id="virtualbox">virtualbox&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>BoxManage storageattach machineA --storagectl &lt;span style="color:#e6db74">&amp;#34;IDE Controller&amp;#34;&lt;/span> --port &lt;span style="color:#ae81ff">0&lt;/span> --device &lt;span style="color:#ae81ff">0&lt;/span> --type hdd --medium
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>VBoxManage createvm -name machineA -register
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>VBoxManage storagectl machineA --name &lt;span style="color:#e6db74">&amp;#34;IDE Controller&amp;#34;&lt;/span> --add ide
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>VBoxManage storageattach machineA --storagectl &lt;span style="color:#e6db74">&amp;#34;IDE Controller&amp;#34;&lt;/span> --port &lt;span style="color:#ae81ff">0&lt;/span> --device &lt;span style="color:#ae81ff">0&lt;/span> --type hdd --medium &lt;span style="color:#ae81ff">\p&lt;/span>ath&lt;span style="color:#ae81ff">\t&lt;/span>o&lt;span style="color:#ae81ff">\f&lt;/span>ile.vmdk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>vmc.md</title><link>/posts/python/vmc/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/python/vmc/</guid><description/><content/></item><item><title>vultr.md</title><link>/posts/linux/vultr/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/linux/vultr/</guid><description>Transfered to Vultr Japan ssh is simple with proxytunnel ~/.ssh/config DynamicForward 1080 ProxyCommand proxytunnel -v -p proxy:80 -d %h:%p -H &amp;#34;User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)\n&amp;#34; ServerAliveInterval 30 And connect to ssh server ssh root@vultrhost For high speed test Very fast from mainland!</description><content>&lt;h2 id="transfered-to-vultr-japan">Transfered to Vultr Japan&lt;/h2>
&lt;h3 id="ssh-is-simple-with-proxytunnel">&lt;code>ssh&lt;/code> is simple with &lt;code>proxytunnel&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>&lt;code>~/.ssh/config&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>DynamicForward 1080
ProxyCommand proxytunnel -v -p proxy:80 -d %h:%p -H &amp;#34;User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)\n&amp;#34;
ServerAliveInterval 30
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>And connect to ssh server&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>ssh root@vultrhost
&lt;/code>&lt;/pre>&lt;h3 id="for-high-speed-test">For high speed test&lt;/h3>
&lt;p>Very fast from mainland!&lt;/p></content></item><item><title>web.md</title><link>/posts/python/web/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/python/web/</guid><description>ipython notebook 安装 conda install ipython jupyter-notebook 启动 jupyter notebook --ip 127.0.0.1 --port 8080 --cert=cert.pem 使用 import os print(os.path(&amp;#39;/root&amp;#39;)) 经验 生成密钥 编辑配置文件.jupyter/config</description><content>&lt;h1 id="ipython-notebook">ipython notebook&lt;/h1>
&lt;h2 id="安装">安装&lt;/h2>
&lt;pre tabindex="0">&lt;code>conda install ipython jupyter-notebook
&lt;/code>&lt;/pre>&lt;h2 id="启动">启动&lt;/h2>
&lt;pre tabindex="0">&lt;code>jupyter notebook --ip 127.0.0.1 --port 8080 --cert=cert.pem
&lt;/code>&lt;/pre>&lt;h2 id="使用">使用&lt;/h2>
&lt;pre tabindex="0">&lt;code>import os
print(os.path(&amp;#39;/root&amp;#39;))
&lt;/code>&lt;/pre>&lt;h2 id="经验">经验&lt;/h2>
&lt;h4 id="生成密钥">生成密钥&lt;/h4>
&lt;h3 id="编辑配置文件jupyterconfig">编辑配置文件&lt;code>.jupyter/config&lt;/code>&lt;/h3></content></item><item><title>yarn.md</title><link>/posts/nodejs/yarn/</link><pubDate>Fri, 16 Feb 2018 14:05:34 -0400</pubDate><guid>/posts/nodejs/yarn/</guid><description>Yarn Workflow Introducing a package manager into your project introduces a new workflow around dependencies.
Yarn tries its best to stay out of your way and make each step of this workflow simple to understand.
There are a few things you should know about the basic workflow:
Creating a new project Adding/updating/removing dependencies Installing/reinstalling your dependencies Working with version control (i.e. git) Continuous Integration Starting a new project yarn init Managing dependencies Adding a dependency yarn add [package] yarn add [package]@[version] yarn add [package]@[tag] yarn global add [package]@[tag] Updating a dependency yarn upgrade [package] yarn upgrade [package]@[version] yarn upgrade [package]@[tag] Removing a dependency yarn remove [package] Installing all the dependencies of project yarn install</description><content>&lt;h1 id="yarnhttpsyarnpkgcomendocsusage">&lt;a href="https://yarnpkg.com/en/docs/usage">Yarn&lt;/a>&lt;/h1>
&lt;h3 id="workflow">Workflow&lt;/h3>
&lt;p>Introducing a package manager into your project introduces a new workflow around dependencies.&lt;/p>
&lt;p>Yarn tries its best to stay out of your way and make each step of this workflow simple to understand.&lt;/p>
&lt;p>There are a few things you should know about the basic workflow:&lt;/p>
&lt;ul>
&lt;li>Creating a new project&lt;/li>
&lt;li>Adding/updating/removing dependencies&lt;/li>
&lt;li>Installing/reinstalling your dependencies&lt;/li>
&lt;li>Working with version control (i.e. git)&lt;/li>
&lt;li>Continuous Integration&lt;/li>
&lt;/ul>
&lt;h3 id="starting-a-new-project">Starting a new project&lt;/h3>
&lt;pre tabindex="0">&lt;code>yarn init
&lt;/code>&lt;/pre>&lt;h3 id="managing-dependencies">Managing dependencies&lt;/h3>
&lt;ul>
&lt;li>Adding a dependency&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>yarn add [package]
yarn add [package]@[version]
yarn add [package]@[tag]
yarn global add [package]@[tag]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Updating a dependency&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>yarn upgrade [package]
yarn upgrade [package]@[version]
yarn upgrade [package]@[tag]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Removing a dependency&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>yarn remove [package]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Installing all the dependencies of project&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>yarn install
&lt;/code>&lt;/pre></content></item><item><title>Easy Hugo Tutorial</title><link>/posts/hugo/easy-hugo-tutorial/</link><pubDate>Fri, 16 Feb 2018 13:59:46 -0400</pubDate><guid>/posts/hugo/easy-hugo-tutorial/</guid><description> Tutorial Disable draft to show the blogs Be careful about the modal editing in evil Automatically start a new hugo-blog</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Tutorial
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div id="outline-container-headline-2" class="outline-4">
&lt;h4 id="headline-2">
Disable &lt;code class="verbatim">draft&lt;/code> to show the blogs
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-4">
&lt;h4 id="headline-3">
Be careful about the &lt;code class="verbatim">modal&lt;/code> editing in &lt;code class="verbatim">evil&lt;/code>
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-4">
&lt;h4 id="headline-4">
Automatically start a new &lt;code class="verbatim">hugo-blog&lt;/code>
&lt;/h4>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>Scrapy Venezuela News</title><link>/posts/work/scrapy-venezuela-new/</link><pubDate>Fri, 16 Feb 2018 13:58:36 -0400</pubDate><guid>/posts/work/scrapy-venezuela-new/</guid><description> Codes 在scrapy 项目中抓取网页 保存到不同的存储中，比如 docx 文件，比如 txt 文件，比如 json 文件，比如 mongo 数据库 在 emacs 中插入 txt 中文件，生成一个目录链接</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Codes
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
在scrapy 项目中抓取网页
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
保存到不同的存储中，比如 docx 文件，比如 txt 文件，比如 json 文件，比如 mongo 数据库
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-3">
&lt;h3 id="headline-4">
在 emacs 中插入 txt 中文件，生成一个目录链接
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>Reactjs Is Awesome</title><link>/posts/nodejs/reactjs-is-awesome/</link><pubDate>Fri, 16 Feb 2018 13:58:34 -0400</pubDate><guid>/posts/nodejs/reactjs-is-awesome/</guid><description>Notes itchat wechaty jupyter-notebook social media study reactjs parsel News Refuerzan recolección de basura en Caracas Published: 29 diciembre, 2017 6:25 am Yulimar Rojas se encuentra entre las grandes deportistas de Latinoamérica en 2017 Published: 27 diciembre, 2017 4:21 pm Cristiano gana premio Globe Soccer por quinta vez Published: 28 diciembre, 2017 4:22 pm Se acabó la sequía melenuda Published: 28 diciembre, 2017 9:57 am Metros de Caracas y Valencia trabajarán en horario especial de fin de año Published: 28 diciembre, 2017 8:07 pm Diosdado Cabello pide investigar a Banesco por contrabando de efectivo Published: 28 diciembre, 2017 8:38 am Choferes cobran lo que les da la gana de pasaje Published: 29 diciembre, 2017 6:00 am Ley de Inversión Extranjera Productiva buscará reducir las importaciones Published: 28 diciembre, 2017 10:57 am Presidente Nicolás Maduro asegura que 2018 será un año victorioso Published: 28 diciembre, 2017 1:22 pm Gobierno tomará decisiones “drásticas” para luchar contra el contrabando de extracción Published: 28 diciembre, 2017 12:24 pm Precios afectan celebración de la tradicional cena del 31 Published: 28 diciembre, 2017 6:00 am Ministro Jorge Rodríguez ofreció balance en área económica y social Published: 28 diciembre, 2017 2:23 pm Rodríguez: Detalles sobre el funcionamiento del petro ya están en Gaceta Oficial Published: 28 diciembre, 2017 4:51 pm Eleazar Díaz Rangel | La Petromoneda Published: 29 diciembre, 2017 6:00 am Piñate: Ley de Inversión Extranjera permitirá el ingreso de divisas Published: 28 diciembre, 2017 4:58 pm Freddy Bernal: 2.</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Notes
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
itchat
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
wechaty
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-3">
&lt;h3 id="headline-4">
jupyter-notebook
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-3">
&lt;h3 id="headline-5">
social media study
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
reactjs
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-3">
&lt;h3 id="headline-7">
parsel
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-2">
&lt;h2 id="headline-8">
News
&lt;/h2>
&lt;div id="outline-text-headline-8" class="outline-text-2">
&lt;div id="outline-container-headline-9" class="outline-3">
&lt;h3 id="headline-9">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/comunidad/refuerzan-recoleccion-basura-caracas/">Refuerzan recolección de basura en Caracas&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-9" class="outline-text-3">
&lt;p>Published: 29 diciembre, 2017 6:25 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-3">
&lt;h3 id="headline-10">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/deportes/yulimar-rojas-una-de-las-grades-deportistas-latinoamericana-de-2017/">Yulimar Rojas se encuentra entre las grandes deportistas de Latinoamérica en 2017&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-10" class="outline-text-3">
&lt;p>Published: 27 diciembre, 2017 4:21 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-11" class="outline-3">
&lt;h3 id="headline-11">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/slider-inferior/cristiano-premio-globe-soccer-quinta/">Cristiano gana premio Globe Soccer por quinta vez&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-11" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 4:22 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-3">
&lt;h3 id="headline-12">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/slider/se-acabo-la-sequia-melenuda/">Se acabó la sequía melenuda&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-12" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 9:57 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-13" class="outline-3">
&lt;h3 id="headline-13">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/comunidad/metros-caracas-valencia-trabajaran-horario-especial-fin-ano/">Metros de Caracas y Valencia trabajarán en horario especial de fin de año&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-13" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 8:07 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-3">
&lt;h3 id="headline-14">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/politica/diosdado-cabello-pide-investigar-banesco-contrabando-efectivo/">Diosdado Cabello pide investigar a Banesco por contrabando de efectivo&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-14" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 8:38 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-3">
&lt;h3 id="headline-15">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/slider/701277/">Choferes cobran lo que les da la gana de pasaje&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-15" class="outline-text-3">
&lt;p>Published: 29 diciembre, 2017 6:00 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-16" class="outline-3">
&lt;h3 id="headline-16">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/politica/ley-de-inversion-extranjera-productiva-buscara-reducir-las-importaciones/">Ley de Inversión Extranjera Productiva buscará reducir las importaciones&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-16" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 10:57 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-17" class="outline-3">
&lt;h3 id="headline-17">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/politica/presidente-nicolas-maduro-asegura-2018-sera-ano-victorioso/">Presidente Nicolás Maduro asegura que 2018 será un año victorioso&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-17" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 1:22 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-18" class="outline-3">
&lt;h3 id="headline-18">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/slider/maduro-encabeza-actos-conmemorativos-la-salutacion-fanb/">Gobierno tomará decisiones “drásticas” para luchar contra el contrabando de extracción&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-18" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 12:24 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-19" class="outline-3">
&lt;h3 id="headline-19">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/precios-afectan-celebracion-la-tradicional-cena-del-31/">Precios afectan celebración de la tradicional cena del 31&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-19" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 6:00 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-20" class="outline-3">
&lt;h3 id="headline-20">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/sin-categoria/ministro-jorge-rodriguez-ofrecio-balance-en-area-economica-y-social/">Ministro Jorge Rodríguez ofreció balance en área económica y social&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-20" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 2:23 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-21" class="outline-3">
&lt;h3 id="headline-21">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/rodriguez-detalles-funcionamiento-del-petro-ya-estan-gaceta-oficial/">Rodríguez: Detalles sobre el funcionamiento del petro ya están en Gaceta Oficial&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-21" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 4:51 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-22" class="outline-3">
&lt;h3 id="headline-22">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/eleazar-diaz-rangel-la-petromoneda/">Eleazar Díaz Rangel | La Petromoneda&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-22" class="outline-text-3">
&lt;p>Published: 29 diciembre, 2017 6:00 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-23" class="outline-3">
&lt;h3 id="headline-23">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/pinate-ley-inversion-extranjera-permitira-ingreso-divisas/">Piñate: Ley de Inversión Extranjera permitirá el ingreso de divisas&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-23" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 4:58 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-24" class="outline-3">
&lt;h3 id="headline-24">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/freddy-bernal-2-200-toneladas-pernil-estan-retenidas-colombia/">Freddy Bernal: 2.200 toneladas de pernil están retenidas en Colombia&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-24" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 7:00 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-25" class="outline-3">
&lt;h3 id="headline-25">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/conatel-se-reunio-empresas-telefonicas/">Conatel se reunió con empresas telefónicas&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-25" class="outline-text-3">
&lt;p>Published: 27 diciembre, 2017 8:10 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-26" class="outline-3">
&lt;h3 id="headline-26">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/oficializado-campo-1-del-bloque-ayacucho-respaldo-financiero-del-petro/">Oficializado campo 1 del Bloque Ayacucho como respaldo financiero del Petro&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-26" class="outline-text-3">
&lt;p>Published: 27 diciembre, 2017 7:12 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-27" class="outline-3">
&lt;h3 id="headline-27">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/primera-emision-petros-se-anunciara-cuestion-dias/">Primera emisión de petros se anunciará en cuestión de días&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-27" class="outline-text-3">
&lt;p>Published: 29 diciembre, 2017 6:00 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-28" class="outline-3">
&lt;h3 id="headline-28">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/economia/redoblan-envios-gasolina-occidente/">Redoblan envíos de gasolina a Occidente&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-28" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 6:00 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-29" class="outline-3">
&lt;h3 id="headline-29">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/sin-categoria/padrino-lopez-la-fanb-no-quiere-gobernar-quiere-trabajar-junto-al-pueblo/">Padrino López: La Fanb no quiere gobernar, quiere trabajar junto al pueblo&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-29" class="outline-text-3">
&lt;p>Published: 27 diciembre, 2017 1:30 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-30" class="outline-3">
&lt;h3 id="headline-30">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/politica/anc-aprueba-ley-del-regimen-tributario-para-el-desarrollo-del-arco-minero/">ANC aprueba Ley del Régimen Tributario para el Desarrollo del Arco Minero&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-30" class="outline-text-3">
&lt;p>Published: 27 diciembre, 2017 4:17 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-31" class="outline-3">
&lt;h3 id="headline-31">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/politica/reverol-afirma-secuestro-ha-disminuido-322-pais/">Reverol afirma que el secuestro ha disminuido 32,2% en todo el país&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-31" class="outline-text-3">
&lt;p>Published: 27 diciembre, 2017 5:52 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-32" class="outline-3">
&lt;h3 id="headline-32">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/politica/maduro-denuncio-sabotaje-importacion-pernil-navideno/">Maduro denunció sabotaje en importación de pernil navideño&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-32" class="outline-text-3">
&lt;p>Published: 27 diciembre, 2017 8:20 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-33" class="outline-3">
&lt;h3 id="headline-33">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/politica/nicolas-maduro-pide-a-arreaza-responder-a-gobiernos-de-canada-y-brasil/">Nicolás Maduro pide a Arreaza responder a gobiernos de Canadá y Brasil&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-33" class="outline-text-3">
&lt;p>Published: 27 diciembre, 2017 7:41 pm &lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-34" class="outline-3">
&lt;h3 id="headline-34">
&lt;a href="http://www.ultimasnoticias.com.ve/noticias/politica/opositores-liberados-sabran-condiciones-enero/">Opositores liberados sabrán sus condiciones en enero&lt;/a>
&lt;/h3>
&lt;div id="outline-text-headline-34" class="outline-text-3">
&lt;p>Published: 28 diciembre, 2017 6:15 am &lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></content></item><item><title>Ox Hugo Tutorial</title><link>/posts/hugo/ox-hugo-tutorial/</link><pubDate>Sun, 10 Dec 2017 23:55:01 -0400</pubDate><guid>/posts/hugo/ox-hugo-tutorial/</guid><description>Installation
This package requires emacs 24.5+ and Org 9.0+. It is available on Melpa (https://melpa.org/#/ox-hugo).
Usage Once the package is installed, you will need to require it so that the ox-hugo export options are available in the Org Export Dispatcher menu (the one you see when you hit C-c C-e to initiate any export).
You can do that by adding the below to your config:
(with-eval-after-load &amp;#39;ox (require &amp;#39;ox-hugo)) If you use use-package, you can do the below instead:</description><content>&lt;p>
Installation&lt;/p>
&lt;p>
This package requires emacs 24.5+ and Org 9.0+. It is available on Melpa
(&lt;a href="https://melpa.org/#/ox-hugo).">https://melpa.org/#/ox-hugo).&lt;/a>&lt;/p>
&lt;p>
Usage Once the package is installed, you will need to require it so that the
ox-hugo export options are available in the Org Export Dispatcher menu (the one
you see when you hit C-c C-e to initiate any export).&lt;/p>
&lt;p>
You can do that by adding the below to your config:&lt;/p>
&lt;p>
(with-eval-after-load &amp;#39;ox (require &amp;#39;ox-hugo)) If you use use-package, you can do
the below instead:&lt;/p>
&lt;p>
(use-package ox-hugo :after ox) Spacemacs&lt;/p>
&lt;p>
Spacemacs users can choose to add this snippet to their dotspacemacs/user-config
function in .spacemacs:&lt;/p>
&lt;p>
(defun dotspacemacs/user-config () ;; Other stuff ;; ..&lt;/p>
&lt;p>
;; ox-hugo config (use-package ox-hugo :ensure t ;Auto-install the package
from Melpa :after ox)) If you do so, you also need to add ox-hugo to
dotspacemacs-additional-packages.&lt;/p>
&lt;p>
Verified to work on Spacemacs develop branch with spacemacs-base distribution,
emacs editing style.&lt;/p>
&lt;p>
Before you export Before you export check that these properties are set as you
need:&lt;/p>
&lt;p>
HUGO_SECTION: The default Hugo section name for all the posts. See here for more
information on Hugo sections. It is common for this property to be set to posts
or blog. The default value is set using org-hugo-default-section-directory.
HUGO_BASE_DIR: Root directory of the source for the Hugo site. If this is set to
~/hugo/, the exported Markdown files will be saved to
~/hugo/content/&amp;lt;HUGO_SECTION&amp;gt;/ directory. By default, the Markdown files reside
in a hierarchy under the content/ directory in the site root directory (ref). If
you try to export without setting this property, you will get this error:&lt;/p>
&lt;p>
user-error: It is mandatory to set the HUGO_BASE_DIR property Important: If you
choose to export an Org subtree as a post, you need to set the EXPORT_FILE_NAME
subtree property. That property is used by this package to figure out where the
current post starts.&lt;/p></content></item><item><title>Municipal Elections</title><link>/posts/work/municipal-elections/</link><pubDate>Sun, 10 Dec 2017 23:40:50 -0400</pubDate><guid>/posts/work/municipal-elections/</guid><description>La rectora principal del CNE, Sandra Oblitas, ofreció el primer boletin oficial pasada las 9 y 50 de la noche, donde se conoció que la participación ascendió al 47,32%, luego de que 9.139.564 sufragaron durante esta elección municipal.
La vicepresidenta del poder electoral, felicitó al pueblo por su participación pacífica y aseguró &amp;#34;que estuvo a la altura de las demandas&amp;#34; de la jornada.
De los resultados ofrecidos por el ente comicial, con más del 92,07% de los votos escrutados, solo Gustavo Delgado, quien ganó la Alcaldía de San Cristobal, no pertenece al partido de Gobierno.</description><content>&lt;p>
La rectora principal del CNE, Sandra Oblitas, ofreció el primer boletin oficial
pasada las 9 y 50 de la noche, donde se conoció que la participación ascendió al
47,32%, luego de que 9.139.564 sufragaron durante esta elección municipal.&lt;/p>
&lt;p>
La vicepresidenta del poder electoral, felicitó al pueblo por su participación
pacífica y aseguró &amp;#34;que estuvo a la altura de las demandas&amp;#34; de la jornada.&lt;/p>
&lt;p>
De los resultados ofrecidos por el ente comicial, con más del 92,07% de los
votos escrutados, solo Gustavo Delgado, quien ganó la Alcaldía de San Cristobal,
no pertenece al partido de Gobierno.&lt;/p></content></item><item><title>Orgnize your life in plain text</title><link>/posts/work/frontend-map/</link><pubDate>Sun, 10 Dec 2017 23:40:50 -0400</pubDate><guid>/posts/work/frontend-map/</guid><description>[How To Use This Document](#HowToUseThisDocument) [License](#License) [Change History - What&amp;amp;rsquo;s new](#ChangeHistory) [Getting Started](#GettingStarted)
[Getting org-mode with Git](#GettingOrgModeWithGit) [Org-Mode Setup](#Setup) [Organizing Your Life Into Org Files](#OrgFiles) [Agenda Setup](#AgendaSetup) [Org File Structure](#OrgFileStructure) [Key bindings](#KeyBindings) [Tasks and States](#TasksAndStates)
[TODO keywords](#TodoKeywords)
[Task States](#TodoKeywordTaskStates) [Project Task States](#TodoKeywordProjectTaskStates) [Phone Calls](#TodoKeywordPhoneCalls) [Meetings](#TodoKeywordMeetings) [Fast Todo Selection](#FastTodoSelection) [TODO state triggers](#ToDoStateTriggers) [Adding New Tasks Quickly with Org Capture](#Capture)
[Capture Templates](#CaptureTemplates) [Separate file for Capture Tasks](#CaptureRefileOrg) [Capture Tasks is all about being FAST](#CaptureTasksAreFast) [Refiling Tasks](#Refiling)</description><content>&lt;ol>
&lt;li>[How To Use This Document](#HowToUseThisDocument)&lt;/li>
&lt;li>[License](#License)&lt;/li>
&lt;li>[Change History - What&amp;amp;rsquo;s new](#ChangeHistory)&lt;/li>
&lt;li>
&lt;p>[Getting Started](#GettingStarted)&lt;/p>
&lt;ol>
&lt;li>[Getting org-mode with Git](#GettingOrgModeWithGit)&lt;/li>
&lt;li>[Org-Mode Setup](#Setup)&lt;/li>
&lt;li>[Organizing Your Life Into Org Files](#OrgFiles)&lt;/li>
&lt;li>[Agenda Setup](#AgendaSetup)&lt;/li>
&lt;li>[Org File Structure](#OrgFileStructure)&lt;/li>
&lt;li>[Key bindings](#KeyBindings)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Tasks and States](#TasksAndStates)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>[TODO keywords](#TodoKeywords)&lt;/p>
&lt;ol>
&lt;li>[Task States](#TodoKeywordTaskStates)&lt;/li>
&lt;li>[Project Task States](#TodoKeywordProjectTaskStates)&lt;/li>
&lt;li>[Phone Calls](#TodoKeywordPhoneCalls)&lt;/li>
&lt;li>[Meetings](#TodoKeywordMeetings)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Fast Todo Selection](#FastTodoSelection)&lt;/li>
&lt;li>[TODO state triggers](#ToDoStateTriggers)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Adding New Tasks Quickly with Org Capture](#Capture)&lt;/p>
&lt;ol>
&lt;li>[Capture Templates](#CaptureTemplates)&lt;/li>
&lt;li>[Separate file for Capture Tasks](#CaptureRefileOrg)&lt;/li>
&lt;li>[Capture Tasks is all about being FAST](#CaptureTasksAreFast)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Refiling Tasks](#Refiling)&lt;/p>
&lt;ol>
&lt;li>[Refile Setup](#RefileSetup)&lt;/li>
&lt;li>[Refiling Tasks](#RefilingTasks)&lt;/li>
&lt;li>[Refiling Notes](#RefilingNotes)&lt;/li>
&lt;li>[Refiling Phone Calls and Meetings](#RefilingPhoneCalls)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Custom agenda views](#CustomAgendaViews)&lt;/p>
&lt;ol>
&lt;li>[Setup](#CustomAgendaViewSetup)&lt;/li>
&lt;li>
&lt;p>[What do I work on next?](#WhatDoIWorkOnNext)&lt;/p>
&lt;ol>
&lt;li>[Why keep it all on the `NEXT` list?](#CustomAgendaViewsNextList)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Reading email, newsgroups, and conversations on IRC](#ReadingMailNewsIRC)&lt;/li>
&lt;li>
&lt;p>[Filtering](#CustomAgendaViewFiltering)&lt;/p>
&lt;ol>
&lt;li>[Automatically removing context based tasks with / RET](#CustomAgendaViewFilteringContext)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Time Clocking](#Clocking)&lt;/p>
&lt;ol>
&lt;li>[Clock Setup](#ClockSetup)&lt;/li>
&lt;li>
&lt;p>[Clocking in](#ClockingIn)&lt;/p>
&lt;ol>
&lt;li>[Setting a default clock task](#ClockingInDefaultTask)&lt;/li>
&lt;li>[Using the clock history to clock in old tasks](#ClockingInByClockHistory)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Clock Everything - Create New Tasks](#ClockEverythingWithNewTasks)&lt;/li>
&lt;li>[Finding tasks to clock in](#FindTasksToClockIn)&lt;/li>
&lt;li>[Editing clock entries](#EditingClockEntries)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Time reporting and tracking](#TimeReportingAndTracking)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>[Billing clients based on clocked time](#BillingClientsForClockedTime)&lt;/p>
&lt;ol>
&lt;li>[Verify that the clock data is complete and correct](#VerifyingClockData)&lt;/li>
&lt;li>[Using clock reports to summarize time spent](#ClockReports)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Task Estimates and column view](#TaskEstimates)&lt;/p>
&lt;ol>
&lt;li>[Creating a task estimate with column mode](#CreatingTaskEstimates)&lt;/li>
&lt;li>[Saving your estimate](#SavingEstimate)&lt;/li>
&lt;li>[Reviewing your estimate](#ReviewingEstimates)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Providing progress reports to others](#ProgressReporting)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Tags](#Tags)&lt;/p>
&lt;ol>
&lt;li>[Tags](#OrgTagAlist)&lt;/li>
&lt;li>
&lt;p>[Filetags](#FileTags)&lt;/p>
&lt;ol>
&lt;li>[Non-work related org-mode files](#TaggingNonWorkFiles)&lt;/li>
&lt;li>[Work related org-mode files](#TaggingWorkFiles)&lt;/li>
&lt;li>[Refile tasks](#RefileTasks)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[State Trigger Tags](#StateTriggerTags)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Handling Notes](#HandlingNotes)&lt;/li>
&lt;li>[Handling Phone Calls](#HandlinePhoneCalls)&lt;/li>
&lt;li>
&lt;p>[GTD stuff](#GTD)&lt;/p>
&lt;ol>
&lt;li>[Weekly Review Process](#GTDWeeklyReview)&lt;/li>
&lt;li>[Project definition and finding stuck projects](#Projects)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Archiving](#Archiving)&lt;/p>
&lt;ol>
&lt;li>[Archiving Subtrees](#ArchivingSubtrees)&lt;/li>
&lt;li>[Archive Setup](#ArchiveSetup)&lt;/li>
&lt;li>[Archive Tag - Hiding Information](#ArchiveTagHidesInfo)&lt;/li>
&lt;li>[When to Archive](#WhenToArchive)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Publishing and Exporting](#Publishing)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>[New Exporter Setup](#orgf6dd355)&lt;/p>
&lt;ol>
&lt;li>[Conversion from the old exporter to the new exporter](#orgf428f2c)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Org-babel Setup](#OrgBabel)&lt;/li>
&lt;li>[Playing with ditaa](#playingwithditaa)&lt;/li>
&lt;li>[Playing with graphviz](#Graphviz)&lt;/li>
&lt;li>
&lt;p>[Playing with PlantUML](#PlantUML)&lt;/p>
&lt;ol>
&lt;li>[Sequence Diagram](#PlantUMLSequence)&lt;/li>
&lt;li>[Activity Diagram](#PlantUMLActivity)&lt;/li>
&lt;li>[Usecase Diagram](#PlantUMLUseCase)&lt;/li>
&lt;li>[Object Diagram](#PlantUMLObject)&lt;/li>
&lt;li>[State Diagram](#PlantUMLState)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Publishing Single Files](#PublishingSingleFiles)&lt;/li>
&lt;li>[Publishing Projects](#PublishingProjects)&lt;/li>
&lt;li>
&lt;p>[Miscellaneous Export Settings](#MiscBabelExportSettings)&lt;/p>
&lt;ol>
&lt;li>[Fontify Latex listings for source blocks](#FontifyLatexListings)&lt;/li>
&lt;li>[Export HTML without XML header](#ExportHTMLWithoutXMLHeader)&lt;/li>
&lt;li>[Allow binding variables on export without confirmation](#AllowVariableBindingForExport)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Reminders](#Reminders)&lt;/p>
&lt;ol>
&lt;li>[Reminder Setup](#ReminderSetup)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Productivity Tools](#ProductivityTools)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>[Abbrev-mode and Skeletons](#AbbrevMode)&lt;/p>
&lt;ol>
&lt;li>[Example PlantUml Activity Diagram Generation](#ActivityDiagramExample)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Focus On Current Work](#FocusOnCurrentWork)&lt;/p>
&lt;ol>
&lt;li>[Narrowing to a subtree with `bh/org-todo`](#NarrowToSubtree)&lt;/li>
&lt;li>[Limiting the agenda to a subtree](#AgendaNarrowToSubtree)&lt;/li>
&lt;li>[Limiting the agenda to a file](#AgendaNarrowToFile)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Tuning the Agenda Views](#TuningAgendaViews)&lt;/p>
&lt;ol>
&lt;li>[Highlight the current agenda line](#HighlightCurrentAgendaLine)&lt;/li>
&lt;li>[Keep tasks with timestamps visible on the global todo lists](#GlobalTodoListsShowAllTasks)&lt;/li>
&lt;li>[Use the Diary for Holidays and Appointments](#DiaryForAppointments)&lt;/li>
&lt;li>[Searches include archive files](#SearchesIncludeArchiveFiles)&lt;/li>
&lt;li>[Agenda view tweaks](#AgendaViewTweaks)&lt;/li>
&lt;li>[Sticky Agendas](#StickyAgendas)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Checklist handling](#ChecklistHandling)&lt;/li>
&lt;li>[Backups](#Backups)&lt;/li>
&lt;li>[Handling blocked tasks](#HandlingBlockedTasks)&lt;/li>
&lt;li>
&lt;p>[Org Task structure and presentation](#OrgTaskStructureAndPresentation)&lt;/p>
&lt;ol>
&lt;li>[Controlling display of leading stars on headlines](#DisplayLeadingStars)&lt;/li>
&lt;li>[org-indent mode](#OrgIndentMode)&lt;/li>
&lt;li>[Handling blank lines](#HandlingBlankLines)&lt;/li>
&lt;li>[Adding new tasks quickly without disturbing the current task content](#AddingNewTasks)&lt;/li>
&lt;li>[Notes at the top](#NotesAtTop)&lt;/li>
&lt;li>[Searching and showing results](#SearchingResults)&lt;/li>
&lt;li>[Editing and Special key handling](#SpecialKeyHandling)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Attachments](#Attachments)&lt;/li>
&lt;li>[Deadlines and Agenda Visibility](#DeadlinesAndAgendaVisibility)&lt;/li>
&lt;li>[Exporting Tables to CSV](#TableExportToCSV)&lt;/li>
&lt;li>[Minimize Emacs Frames](#MinimizeFrames)&lt;/li>
&lt;li>[Logging stuff](#LoggingStuff)&lt;/li>
&lt;li>[Limiting time spent on tasks](#LimitingTimeSpentOnTasks)&lt;/li>
&lt;li>[Habit Tracking](#HabitTracking)&lt;/li>
&lt;li>[Habits only log DONE state changes](#HabitsLogDone)&lt;/li>
&lt;li>[Auto revert mode](#AutoRevertMode)&lt;/li>
&lt;li>
&lt;p>[Handling Encryption](#HandlingEncryption)&lt;/p>
&lt;ol>
&lt;li>[Auto Save Files](#AutoSaveFiles)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Speed Commands](#SpeedCommands)&lt;/li>
&lt;li>[Org Protocol](#OrgProtocol)&lt;/li>
&lt;li>[Require a final newline when saving files](#RequireFinalNewline)&lt;/li>
&lt;li>[Insert inactive timestamps and exclude from export](#InsertInactiveTimestamps)&lt;/li>
&lt;li>[Return follows links](#ReturnFollowsLink)&lt;/li>
&lt;li>[Highlight clock when running overtime](#HighlightClockOvertime)&lt;/li>
&lt;li>[Meeting Notes](#MeetingNotes)&lt;/li>
&lt;li>[Remove Highlights after changes](#HighlightPersistAfterEdit)&lt;/li>
&lt;li>[Getting up to date org-mode info documentation](#OrgModeInfoDocumentation)&lt;/li>
&lt;li>[Prefer future dates or not?](#FutureDates)&lt;/li>
&lt;li>[Automatically change list bullets](#ListBullets)&lt;/li>
&lt;li>[Remove indentation on agenda tags view](#IndentationOnTagsView)&lt;/li>
&lt;li>[Fontify source blocks natively](#FontifySrcBlocksNatively)&lt;/li>
&lt;li>[Agenda persistent filters](#AgendaPersistentFilters)&lt;/li>
&lt;li>[Add tags for flagged entries](#TagFlaggedEntries)&lt;/li>
&lt;li>[Mail links open compose-mail](#MailLinksOpenComposeMail)&lt;/li>
&lt;li>[Composing mail from org mode subtrees](#MailingSubtrees)&lt;/li>
&lt;li>[Use smex for M-x ido-completion](#SmexAndIdo)&lt;/li>
&lt;li>[Use Emacs bookmarks for fast navigation](#BookmarksFastNavigation)&lt;/li>
&lt;li>[Using org-mime to email](#OrgMimeMail)&lt;/li>
&lt;li>[Remove multiple state change log details from the agenda](#StateChangeDetailsInAgenda)&lt;/li>
&lt;li>[Drop old style references in tables](#OldTableReferences)&lt;/li>
&lt;li>[Use system settings for file-application selection](#SystemSettingsForApplicationSelection)&lt;/li>
&lt;li>[Use the current window for the agenda](#CurrentWindowForAgenda)&lt;/li>
&lt;li>[Delete IDs when cloning](#DeleteIdsWhenCloning)&lt;/li>
&lt;li>[Cycling plain lists](#CyclePlainLists)&lt;/li>
&lt;li>[Showing source block syntax highlighting](#ShowSrcBlockSyntax)&lt;/li>
&lt;li>[Inserting Structure Template Blocks](#StructureTemplateBlocks)&lt;/li>
&lt;li>[NEXT is for tasks](#NextTasks)&lt;/li>
&lt;li>[Startup in folded view](#StartupView)&lt;/li>
&lt;li>[Allow alphabetical list entries](#AlphabeticalLists)&lt;/li>
&lt;li>[Using orgstruct mode for mail](#OrgStructModeForMail)&lt;/li>
&lt;li>[Using flyspell mode to reduce spelling errors](#FlySpellModeChecksSpelling)&lt;/li>
&lt;li>[Preserving source block indentation](#PreserveSourceIndentations)&lt;/li>
&lt;li>[Prevent editing invisible text](#PreventInvisibleEdits)&lt;/li>
&lt;li>[Use utf-8 as default coding system](#DefaultCodingSystem)&lt;/li>
&lt;li>[Keep clock durations in hours](#ClockDurationsNoDays)&lt;/li>
&lt;li>[Create unique IDs for tasks when linking](#LinkingToTaskCreatesId)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Things I Don&amp;amp;rsquo;t Use (Anymore)](#Unused)&lt;/p>
&lt;ol>
&lt;li>[Archive Sibling](#ArchiveSibling)&lt;/li>
&lt;li>[Strike-through emphasis](#StrikeThroughEmphasis)&lt;/li>
&lt;li>[Subscripts and Superscripts](#SubscriptsAndSuperscripts)&lt;/li>
&lt;li>[Yasnippet](#Yasnippets)&lt;/li>
&lt;li>[Show headings at odd levels only or odd-even levels](#HeadingLevelsOddEven)&lt;/li>
&lt;li>[Propagate STARTED to parent tasks](#PropagateStartedToParent)&lt;/li>
&lt;li>[Automatically clocking tasks](#AutomaticallyClockingTasks)&lt;/li>
&lt;li>[q buries the agenda view buffer](#QBuriesAgenda)&lt;/li>
&lt;li>[Task Priorities](#TaskPriorities)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>[Using Git for Automatic History, Backups, and Synchronization](#GitSync)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>[Automatic Hourly Commits](#HourlyCommits)&lt;/p>
&lt;ol>
&lt;li>[~/bin/org-git-sync.sh](#OrgGitSyncSh)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>[Git - Edit files with confidence](#GitEditWithConfidence)&lt;/li>
&lt;li>[Git Repository synchronization](#git-sync)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>Org-mode is a fabulous organizational tool originally built by Carsten
Dominik that operates on plain text files. Org-mode is part of Emacs.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HowToUseThisDocument&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
This document assumes you&amp;amp;rsquo;ve had some exposure to org-mode already so
concepts like the agenda, capture mode, etc. won&amp;amp;rsquo;t be completely
foreign to you. More information about org-mode can be found in the
[Org-Mode Manual](&lt;a href="http://orgmode.org/index.html#sec-4.1)">http://orgmode.org/index.html#sec-4.1)&lt;/a> and on the [Worg Site](&lt;a href="http://orgmode.org/worg/).">http://orgmode.org/worg/).&lt;/a>&lt;/p>
&lt;p>
I have been using org-mode as my personal information manager for
years now. I started small with just the default `TODO` and `DONE`
keywords. I added small changes to my workflow and over time it
evolved into what is described by this document.&lt;/p>
&lt;p>
I still change my workflow and try new things regularly. This
document describes mature workflows in my current org-mode setup. I
tend to document changes to my workflow 30 days after implementing
them (assuming they are still around at that point) so that the new
workflow has a chance to mature.&lt;/p>
&lt;p>
Some of the customized Emacs settings described in this document are
set at their default values. This explicitly shows the setting for
important org-mode variables used in my workflow and to keep my
workflow behaviour stable in the event that the default value changes
in the future.&lt;/p>
&lt;p>
This document is available as an [org file](&lt;a href="http://doc.norang.ca/org-mode.org)">http://doc.norang.ca/org-mode.org)&lt;/a> which you can load in Emacs
and tangle with `C-c C-v C-t` which will create org-mode.el in the
same directory as the org-mode.org file. This will extract all of the
elisp examples in this document into a file you can include in your
.emacs file.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;License&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Copyright (C) 2013 Bernt Hansen.
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.&lt;/p>
&lt;p>
Code in this document is free software: you can redistribute it
and/or modify it under the terms of the GNU General Public
License as published by the Free Software Foundation, either
version 3 of the License, or (at your option) any later version.&lt;/p>
&lt;p>
This code is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.&lt;/p>
&lt;p>
This document &amp;lt;&lt;a href="http://doc.norang.ca/org-mode.html">http://doc.norang.ca/org-mode.html&lt;/a>&amp;gt; (either in its
[HTML format](&lt;a href="http://doc.norang.ca/org-mode.html)">http://doc.norang.ca/org-mode.html)&lt;/a> or in its [Org format](&lt;a href="http://doc.norang.ca/org-mode.org))">http://doc.norang.ca/org-mode.org))&lt;/a> is licensed under the GNU Free
Documentation License version 1.3 or later
(&amp;lt;&lt;a href="http://www.gnu.org/copyleft/fdl.html">http://www.gnu.org/copyleft/fdl.html&lt;/a>&amp;gt;).&lt;/p>
&lt;p>
The code examples and CSS stylesheets are licensed under the GNU
General Public License v3 or later
(&amp;lt;&lt;a href="http://www.gnu.org/licenses/gpl.html">http://www.gnu.org/licenses/gpl.html&lt;/a>&amp;gt;).&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ChangeHistory&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
This is version of this document. This
document is created using the publishing features of `org-mode` git
version .&lt;/p>
&lt;p>
The source for this document can be found as a [plain text org file](&lt;a href="http://doc.norang.ca/org-mode.org).">http://doc.norang.ca/org-mode.org).&lt;/a> I
try to update this document about once a month.&lt;/p>
&lt;p>
The change history for this document can be found at
[git://git.norang.ca/org-mode-doc.git](&lt;a href="http://git.norang.ca/?p">http://git.norang.ca/?p&lt;/a>%3Dorg-mode-doc.git%3Ba%3Dsummary).&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;GettingStarted&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Getting started with `org-mode` is really easy. You only need a few lines in your
emacs startup to use the latest version of org-mode from the `git` repository.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;GettingOrgModeWithGit&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Getting org-mode with Git&lt;/p>
&lt;p>
I keep a copy of the org-mode `git` repository in `~/git/org-mode/`. This clone
was created with&lt;/p>
&lt;p>
cd ~/git
git clone git://orgmode.org/org-mode.git&lt;/p>
&lt;p>
To update and get new commits from the org-mode developers you can use&lt;/p>
&lt;p>
cd ~/git/org-mode
git pull
make uncompiled&lt;/p>
&lt;p>
I run uncompiled source files in my setup so the uncompiled `make` target is all you need.&lt;/p>
&lt;p>
I normally track the `master` branch in the org-mode repository.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Setup&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Org-Mode Setup&lt;/p>
&lt;p>
The following setup in my .emacs enables `org-mode` for most buffers.
`org-mode` is the default mode for `.org`, `.org_archive`, and `.txt`
files.&lt;/p>
&lt;p>
;;;
;;; Org Mode
;;;
(add-to-list &amp;#39;load-path (expand-file-name &amp;#34;~/git/org-mode/lisp&amp;#34;))
(add-to-list &amp;#39;auto-mode-alist &amp;#39;(&amp;#34;\\.\\(org\\|org_archive\\|txt\\)$&amp;#34; . org-mode))
(require &amp;#39;org)
;;
;; Standard key bindings
(global-set-key &amp;#34;\C-cl&amp;#34; &amp;#39;org-store-link)
(global-set-key &amp;#34;\C-ca&amp;#34; &amp;#39;org-agenda)
(global-set-key &amp;#34;\C-cb&amp;#34; &amp;#39;org-iswitchb)&lt;/p>
&lt;p>
That&amp;amp;rsquo;s all you need to get started using headlines and lists in org-mode.&lt;/p>
&lt;p>
The rest of this document describes customizations I use in my setup,
how I structure org-mode files, and other changes to fit the way I
want org-mode to work.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgFiles&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Organizing Your Life Into Org Files&lt;/p>
&lt;p>
Tasks are separated into logical groupings or projects.
Use separate org files for large task groupings and
subdirectories for collections of files for multiple
projects that belong together.&lt;/p>
&lt;p>
Here are sample files that I use.&lt;/p>
&lt;p>
The following org files collect non-work related tasks:&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Filename&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Description&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;todo.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Personal tasks and things to keep track of&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;gsoc2009.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Google Summer of Code stuff for 2009&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;farm.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Farm related tasks&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;mark.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Tasks related to my son Mark&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;org.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Org-mode related tasks&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;git.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Git related tasks&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
The following org-file collects org capture notes and tasks:&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Filename&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Description&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;refile.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Capture task bucket&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
The following work-related org-files keep my business notes (using
fictitious client names)&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Filename&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Description&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;norang.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Norang tasks and notes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;XYZ.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;XYZ Corp tasks and notes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC Ltd tasks&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC-DEF.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC Ltd tasks for their client DEF Corp&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC-KKK.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC Ltd tasks for their client KKK Inc&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;YYY.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;YYY Inc tasks&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
Org-mode is great for dealing with multiple clients and client
projects. An org file becomes the collection of projects, notes,
etc. for a single client or client-project.&lt;/p>
&lt;p>
Client ABC Ltd. has multiple customer systems that I work on.
Separating the tasks for each client-customer into separate org files
helps keep things logically grouped and since clients come and go this
allows entire org files to be added or dropped from my agenda to keep
only what is important visible in agenda views.&lt;/p>
&lt;p>
Other org files are used for publishing only and do not contribute to the agenda.
See [Publishing and Exporting](#Publishing) for more details.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AgendaSetup&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Agenda Setup&lt;/p>
&lt;p>
Here is my current `org-agenda-files` setup.&lt;/p>
&lt;p>
(setq org-agenda-files (quote (&amp;#34;~/git/org&amp;#34;
&amp;#34;~/git/org/client1&amp;#34;
&amp;#34;~/git/client2&amp;#34;)))&lt;/p>
&lt;p>
`org-mode` manages the `org-agenda-files` variable automatically using
`C-c [` and `C-c ]` to add and remove files respectively. However,
this replaces my directory list with a list of explicit filenames
instead and is not what I want. If this occurs then adding a new org
file to any of the above directories will not contribute to my agenda
and I will probably miss something important.&lt;/p>
&lt;p>
I have disabled the `C-c [` and `C-c ]` keys in `org-mode-hook` to
prevent messing up my list of directories in the `org-agenda-files`
variable. I just add and remove directories manually in my `.emacs`
file. Changing the list of directories in `org-agenda-files` happens
very rarely since new files in existing directories are automatically
picked up.&lt;/p>
&lt;p>
I also disable the comment function `C-c ;` since I never use those.
I kept accidentally hitting this key sequence when doing `C-c singlequote` for editing source blocks.&lt;/p>
&lt;p>
In the example above I have `~/git/client2` in a separate git
repository from ~/git/org. This gives me the flexibility of leaving
confidential information at the client site and having all of my
personal information available everywhere I use org-mode. I
synchronize my personal repositories on multiple machines and skip the
confidential info on the non-client laptop I travel with.
`org-agenda-files` on this laptop does not include the `~/git/client2`
directory.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgFileStructure&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Org File Structure&lt;/p>
&lt;p>
Most of my org files are set up with level 1 headings as main
categories only. Tasks and projects normally start as level 2.&lt;/p>
&lt;p>
Here are some examples of my level 1 headings in&lt;/p>
&lt;p>
`todo.org`:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Special Dates&lt;/p>
&lt;p>
Includes level 2 headings for&lt;/p>
&lt;ul>
&lt;li>Birthdays&lt;/li>
&lt;li>Anniversaries&lt;/li>
&lt;li>Holidays&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Finances&lt;/li>
&lt;li>Health and Recreation&lt;/li>
&lt;li>House Maintenance&lt;/li>
&lt;li>Lawn and Garden Maintenance&lt;/li>
&lt;li>Notes&lt;/li>
&lt;li>Tasks&lt;/li>
&lt;li>Vehicle Maintenance&lt;/li>
&lt;li>Passwords&lt;/li>
&lt;/ul>
&lt;p>`norang.org`:&lt;/p>
&lt;ul>
&lt;li>System Maintenance&lt;/li>
&lt;li>Payroll&lt;/li>
&lt;li>Accounting&lt;/li>
&lt;li>Finances&lt;/li>
&lt;li>Hardware Maintenance&lt;/li>
&lt;li>Tasks&lt;/li>
&lt;li>Research and Development&lt;/li>
&lt;li>Notes&lt;/li>
&lt;li>Purchase Order Tracking&lt;/li>
&lt;li>Passwords&lt;/li>
&lt;/ul>
&lt;p>Each of these level 1 tasks normally has a `property drawer`
specifying the category for any tasks in that tree. Level 1 headings
are set up like this:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Health and Recreation&lt;/p>
&lt;p>…&lt;/p>
&lt;/li>
&lt;li>
&lt;p>House Maintenance&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;a id=&amp;#34;KeyBindings&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Key bindings&lt;/p>
&lt;p>
I live in the agenda. To make getting to the agenda faster I mapped
`F12` to the sequence `C-c a` since I&amp;amp;rsquo;m using it hundreds of times a
day.&lt;/p>
&lt;p>
I have the following custom key bindings set up for my emacs (sorted by frequency).&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Key&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;For&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Used&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;F12&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Agenda (1 key less than C-c a)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Very Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-c b&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Switch to org file&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Very Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;F11&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Goto currently clocked item&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Very Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-c c&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Capture a task&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Very Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-F11&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Clock in a task (show menu with prefix)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 g&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Gnus - I check mail regularly&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f5&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Show todo items for this subtree&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;S-f5&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Widen&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 b&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Quick access to bbdb data&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 c&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Calendar access&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-S-f12&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Save buffers and publish current project&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-c l&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Store a link for retrieval with C-c C-l&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Often&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f8&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Go to next org file in org-agenda-files&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 r&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Boxquote selected region&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 t&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Insert inactive timestamp&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 v&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Toggle visible mode (for showing/editing links)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-f9&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Previous buffer&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-f10&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Next buffer&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-x n r&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Narrow to region&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 f&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Boxquote insert a file&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 i&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Info manual&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 I&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Punch Clock In&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 O&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Punch Clock Out&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 o&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Switch to org scratch buffer&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 s&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Switch to scratch buffer&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Sometimes&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 h&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Hide other tasks&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Rare&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f7&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Toggle line truncation/wrap&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Rare&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;f9 T&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Toggle insert inactive timestamp&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Rare&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;C-c a&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Enter Agenda (minimal emacs testing)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;Rare&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
Here is the keybinding setup in lisp:&lt;/p>
&lt;p>
;; Custom Key Bindings
(global-set-key (kbd &amp;#34;&amp;lt;f12&amp;gt;&amp;#34;) &amp;#39;org-agenda)
(global-set-key (kbd &amp;#34;&amp;lt;f5&amp;gt;&amp;#34;) &amp;#39;bh/org-todo)
(global-set-key (kbd &amp;#34;&amp;lt;S-f5&amp;gt;&amp;#34;) &amp;#39;bh/widen)
(global-set-key (kbd &amp;#34;&amp;lt;f7&amp;gt;&amp;#34;) &amp;#39;bh/set-truncate-lines)
(global-set-key (kbd &amp;#34;&amp;lt;f8&amp;gt;&amp;#34;) &amp;#39;org-cycle-agenda-files)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; &amp;lt;f9&amp;gt;&amp;#34;) &amp;#39;bh/show-org-agenda)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; b&amp;#34;) &amp;#39;bbdb)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; c&amp;#34;) &amp;#39;calendar)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; f&amp;#34;) &amp;#39;boxquote-insert-file)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; g&amp;#34;) &amp;#39;gnus)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; h&amp;#34;) &amp;#39;bh/hide-other)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; n&amp;#34;) &amp;#39;bh/toggle-next-task-display)&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; I&amp;#34;) &amp;#39;bh/punch-in)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; O&amp;#34;) &amp;#39;bh/punch-out)&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; o&amp;#34;) &amp;#39;bh/make-org-scratch)&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; r&amp;#34;) &amp;#39;boxquote-region)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; s&amp;#34;) &amp;#39;bh/switch-to-scratch)&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; t&amp;#34;) &amp;#39;bh/insert-inactive-timestamp)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; T&amp;#34;) &amp;#39;bh/toggle-insert-inactive-timestamp)&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; v&amp;#34;) &amp;#39;visible-mode)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; l&amp;#34;) &amp;#39;org-toggle-link-display)
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; SPC&amp;#34;) &amp;#39;bh/clock-in-last-task)
(global-set-key (kbd &amp;#34;C-&amp;lt;f9&amp;gt;&amp;#34;) &amp;#39;previous-buffer)
(global-set-key (kbd &amp;#34;M-&amp;lt;f9&amp;gt;&amp;#34;) &amp;#39;org-toggle-inline-images)
(global-set-key (kbd &amp;#34;C-x n r&amp;#34;) &amp;#39;narrow-to-region)
(global-set-key (kbd &amp;#34;C-&amp;lt;f10&amp;gt;&amp;#34;) &amp;#39;next-buffer)
(global-set-key (kbd &amp;#34;&amp;lt;f11&amp;gt;&amp;#34;) &amp;#39;org-clock-goto)
(global-set-key (kbd &amp;#34;C-&amp;lt;f11&amp;gt;&amp;#34;) &amp;#39;org-clock-in)
(global-set-key (kbd &amp;#34;C-s-&amp;lt;f12&amp;gt;&amp;#34;) &amp;#39;bh/save-then-publish)
(global-set-key (kbd &amp;#34;C-c c&amp;#34;) &amp;#39;org-capture)&lt;/p>
&lt;p>
(defun bh/hide-other ()
(interactive)
(save-excursion
(org-back-to-heading &amp;#39;invisible-ok)
(hide-other)
(org-cycle)
(org-cycle)
(org-cycle)))&lt;/p>
&lt;p>
(defun bh/set-truncate-lines ()
&amp;#34;Toggle value of truncate-lines and refresh window display.&amp;#34;
(interactive)
(setq truncate-lines (not truncate-lines))
;; now refresh window display (an idiom from simple.el):
(save-excursion
(set-window-start (selected-window)
(window-start (selected-window)))))&lt;/p>
&lt;p>
(defun bh/make-org-scratch ()
(interactive)
(find-file &amp;#34;/tmp/publish/scratch.org&amp;#34;)
(gnus-make-directory &amp;#34;/tmp/publish&amp;#34;))&lt;/p>
&lt;p>
(defun bh/switch-to-scratch ()
(interactive)
(switch-to-buffer &amp;#34;&lt;strong>scratch&lt;/strong>&amp;#34;))&lt;/p>
&lt;p>
The main reason I have special key bindings (like `F11`, and `F12`) is
so that the keys work in any mode. If I&amp;amp;rsquo;m in the Gnus summary buffer
then `C-u C-c C-x C-i` doesn&amp;amp;rsquo;t work, but the `C-F11` key combination
does and this saves me time since I don&amp;amp;rsquo;t have to visit an org-mode
buffer first just to clock in a recent task.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TasksAndStates&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
I use one set of TODO keywords for all of my org files. Org-mode lets
you define TODO keywords per file but I find it&amp;amp;rsquo;s easier to have a
standard set of TODO keywords globally so I can use the same setup in
any org file I&amp;amp;rsquo;m working with.&lt;/p>
&lt;p>
The only exception to this is this document :) since I don&amp;amp;rsquo;t want
`org-mode` hiding the `TODO` keyword when it appears in headlines.
I&amp;amp;rsquo;ve set up a dummy `#+SEQ_TODO: FIXME FIXED` entry at the top of this
file just to leave my `TODO` keyword untouched in this document.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TodoKeywords&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## TODO keywords&lt;/p>
&lt;p>
I use a light colour theme in emacs. I find this easier to read on bright sunny days.&lt;/p>
&lt;p>
Here are my `TODO` state keywords and colour settings:&lt;/p>
&lt;p>
(setq org-todo-keywords
(quote ((sequence &amp;#34;TODO(t)&amp;#34; &amp;#34;NEXT(n)&amp;#34; &amp;#34;|&amp;#34; &amp;#34;DONE(d)&amp;#34;)
(sequence &amp;#34;WAITING(w@/!)&amp;#34; &amp;#34;HOLD(h@/!)&amp;#34; &amp;#34;|&amp;#34; &amp;#34;CANCELLED(c@/!)&amp;#34; &amp;#34;PHONE&amp;#34; &amp;#34;MEETING&amp;#34;))))&lt;/p>
&lt;p>
(setq org-todo-keyword-faces
(quote ((&amp;#34;TODO&amp;#34; :foreground &amp;#34;red&amp;#34; :weight bold)
(&amp;#34;NEXT&amp;#34; :foreground &amp;#34;blue&amp;#34; :weight bold)
(&amp;#34;DONE&amp;#34; :foreground &amp;#34;forest green&amp;#34; :weight bold)
(&amp;#34;WAITING&amp;#34; :foreground &amp;#34;orange&amp;#34; :weight bold)
(&amp;#34;HOLD&amp;#34; :foreground &amp;#34;magenta&amp;#34; :weight bold)
(&amp;#34;CANCELLED&amp;#34; :foreground &amp;#34;forest green&amp;#34; :weight bold)
(&amp;#34;MEETING&amp;#34; :foreground &amp;#34;forest green&amp;#34; :weight bold)
(&amp;#34;PHONE&amp;#34; :foreground &amp;#34;forest green&amp;#34; :weight bold))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TodoKeywordTaskStates&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Task States&lt;/p>
&lt;p>
Tasks go through the sequence `TODO` -&amp;gt; `DONE`.&lt;/p>
&lt;p>
The following diagram shows the possible state transitions for a task.&lt;/p>
&lt;p>
title Task States
[*] -&amp;gt; TODO
TODO -&amp;gt; NEXT
TODO -&amp;gt; DONE
NEXT -&amp;gt; DONE
DONE -&amp;gt; [*]
TODO –&amp;gt; WAITING
WAITING –&amp;gt; TODO
NEXT –&amp;gt; WAITING
WAITING –&amp;gt; NEXT
HOLD –&amp;gt; CANCELLED
WAITING –&amp;gt; CANCELLED
CANCELLED –&amp;gt; [*]
TODO –&amp;gt; HOLD
HOLD –&amp;gt; TODO
TODO –&amp;gt; CANCELLED
TODO: t
NEXT: n
DONE: d
WAITING:w
note right of WAITING: Note records\nwhat it is waiting for
HOLD:h
note right of CANCELLED: Note records\nwhy it was cancelled
CANCELLED:c
WAITING –&amp;gt; DONE&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TodoKeywordProjectTaskStates&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Project Task States&lt;/p>
&lt;p>
I use a lazy project definition. I don&amp;amp;rsquo;t like to bother with manually
stating &amp;amp;rsquo;this is a project&amp;amp;rsquo; and &amp;amp;rsquo;that is not a project&amp;amp;rsquo;. For me a project
definition is really simple. If a task has subtasks with a todo keyword
then it&amp;amp;rsquo;s a project. That&amp;amp;rsquo;s it.&lt;/p>
&lt;p>
Projects can be defined at any level - just create a task with a todo
state keyword that has at least one subtask also with a todo state
keyword and you have a project. Projects use the same todo keywords
as regular tasks. One subtask of a project needs to be marked `NEXT`
so the project is not on the stuck projects list.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TodoKeywordPhoneCalls&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Phone Calls&lt;/p>
&lt;p>
Telephone calls are special. They are created in a done state by a capture task.
The time of the call is recorded for as long as the capture task is active. If I need
to look up other details and want to close the capture task early I can just
`C-c C-c` to close the capture task (stopping the clock) and then `f9 SPC` to resume
the clock in the phone call while I do other things.&lt;/p>
&lt;p>
title Phone Call Task State
[*] -&amp;gt; PHONE
PHONE -&amp;gt; [*]&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TodoKeywordMeetings&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Meetings&lt;/p>
&lt;p>
Meetings are special. They are created in a done state by a capture
task. I use the MEETING capture template when someone interrupts what
I&amp;amp;rsquo;m doing with a question or discussion. This is handled similarly to
phone calls where I clock the amount of time spent with whomever it is
and record some notes of what was discussed (either during or after
the meeting) depending on content, length, and complexity of the
discussion.&lt;/p>
&lt;p>
The time of the meeting is recorded for as long as the capture task is
active. If I need to look up other details and want to close the
capture task early I can just `C-c C-c` to close the capture task
(stopping the clock) and then `f9 SPC` to resume the clock in the
meeting task while I do other things.&lt;/p>
&lt;p>
title Meeting Task State
[*] -&amp;gt; MEETING
MEETING -&amp;gt; [*]&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;FastTodoSelection&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Fast Todo Selection&lt;/p>
&lt;p>
Fast todo selection allows changing from any task todo state to any
other state directly by selecting the appropriate key from the fast
todo selection key menu. This is a great feature!&lt;/p>
&lt;p>
(setq org-use-fast-todo-selection t)&lt;/p>
&lt;p>
Changing a task state is done with `C-c C-t KEY`&lt;/p>
&lt;p>
where `KEY` is the appropriate fast todo state selection key as defined in `org-todo-keywords`.&lt;/p>
&lt;p>
The setting&lt;/p>
&lt;p>
(setq org-treat-S-cursor-todo-selection-as-state-change nil)&lt;/p>
&lt;p>
allows changing todo states with S-left and S-right skipping all of
the normal processing when entering or leaving a todo state. This
cycles through the todo states but skips setting timestamps and
entering notes which is very convenient when all you want to do is fix
up the status of an entry.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ToDoStateTriggers&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## TODO state triggers&lt;/p>
&lt;p>
I have a few triggers that automatically assign tags to tasks based on
state changes. If a task moves to `CANCELLED` state then it gets a
`CANCELLED` tag. Moving a `CANCELLED` task back to `TODO` removes the
`CANCELLED` tag. These are used for filtering tasks in agenda views
which I&amp;amp;rsquo;ll talk about later.&lt;/p>
&lt;p>
The triggers break down to the following rules:&lt;/p>
&lt;ul>
&lt;li>Moving a task to `CANCELLED` adds a `CANCELLED` tag&lt;/li>
&lt;li>Moving a task to `WAITING` adds a `WAITING` tag&lt;/li>
&lt;li>Moving a task to `HOLD` adds `WAITING` and `HOLD` tags&lt;/li>
&lt;li>Moving a task to a done state removes `WAITING` and `HOLD` tags&lt;/li>
&lt;li>Moving a task to `TODO` removes `WAITING`, `CANCELLED`, and `HOLD` tags&lt;/li>
&lt;li>Moving a task to `NEXT` removes `WAITING`, `CANCELLED`, and `HOLD` tags&lt;/li>
&lt;li>Moving a task to `DONE` removes `WAITING`, `CANCELLED`, and `HOLD` tags&lt;/li>
&lt;/ul>
&lt;p>The tags are used to filter tasks in the agenda views conveniently.&lt;/p>
&lt;p>
(setq org-todo-state-tags-triggers
(quote ((&amp;#34;CANCELLED&amp;#34; (&amp;#34;CANCELLED&amp;#34; . t))
(&amp;#34;WAITING&amp;#34; (&amp;#34;WAITING&amp;#34; . t))
(&amp;#34;HOLD&amp;#34; (&amp;#34;WAITING&amp;#34;) (&amp;#34;HOLD&amp;#34; . t))
(done (&amp;#34;WAITING&amp;#34;) (&amp;#34;HOLD&amp;#34;))
(&amp;#34;TODO&amp;#34; (&amp;#34;WAITING&amp;#34;) (&amp;#34;CANCELLED&amp;#34;) (&amp;#34;HOLD&amp;#34;))
(&amp;#34;NEXT&amp;#34; (&amp;#34;WAITING&amp;#34;) (&amp;#34;CANCELLED&amp;#34;) (&amp;#34;HOLD&amp;#34;))
(&amp;#34;DONE&amp;#34; (&amp;#34;WAITING&amp;#34;) (&amp;#34;CANCELLED&amp;#34;) (&amp;#34;HOLD&amp;#34;)))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Capture&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Org Capture mode replaces remember mode for capturing tasks and notes.&lt;/p>
&lt;p>
To add new tasks efficiently I use a minimal number of capture
templates. I used to have lots of capture templates, one for each
org-file. I&amp;amp;rsquo;d start org-capture with `C-c c` and then pick a template
that filed the task under `* Tasks` in the appropriate file.&lt;/p>
&lt;p>
I found I still needed to refile these capture tasks again to the
correct location within the org-file so all of these different capture
templates weren&amp;amp;rsquo;t really helping at all. Since then I&amp;amp;rsquo;ve changed my
workflow to use a minimal number of capture templates &amp;amp;#x2013; I create the
new task quickly and refile it once. This also saves me from
maintaining my org-capture templates when I add a new org file.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CaptureTemplates&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Capture Templates&lt;/p>
&lt;p>
When a new task needs to be added I categorize it into one of a few
things:&lt;/p>
&lt;ul>
&lt;li>A phone call (p)&lt;/li>
&lt;li>A meeting (m)&lt;/li>
&lt;li>An email I need to respond to (r)&lt;/li>
&lt;li>A new task (t)&lt;/li>
&lt;li>A new note (n)&lt;/li>
&lt;li>An interruption (j)&lt;/li>
&lt;li>A new habit (h)&lt;/li>
&lt;/ul>
&lt;p>and pick the appropriate capture task.&lt;/p>
&lt;p>
Here is my setup for org-capture&lt;/p>
&lt;p>
(setq org-directory &amp;#34;~/git/org&amp;#34;)
(setq org-default-notes-file &amp;#34;~/git/org/refile.org&amp;#34;)&lt;/p>
&lt;p>
;; I use C-c c to start capture mode
(global-set-key (kbd &amp;#34;C-c c&amp;#34;) &amp;#39;org-capture)&lt;/p>
&lt;p>
;; Capture templates for: TODO tasks, Notes, appointments, phone calls, meetings, and org-protocol
(setq org-capture-templates
(quote ((&amp;#34;t&amp;#34; &amp;#34;todo&amp;#34; entry (file &amp;#34;~/git/org/refile.org&amp;#34;)
&amp;#34;* TODO %?\n%U\n%a\n&amp;#34; :clock-in t :clock-resume t)
(&amp;#34;r&amp;#34; &amp;#34;respond&amp;#34; entry (file &amp;#34;~/git/org/refile.org&amp;#34;)
&amp;#34;* NEXT Respond to %:from on %:subject\nSCHEDULED: %t\n%U\n%a\n&amp;#34; :clock-in t :clock-resume t :immediate-finish t)
(&amp;#34;n&amp;#34; &amp;#34;note&amp;#34; entry (file &amp;#34;~/git/org/refile.org&amp;#34;)
&amp;#34;* %? :NOTE:\n%U\n%a\n&amp;#34; :clock-in t :clock-resume t)
(&amp;#34;j&amp;#34; &amp;#34;Journal&amp;#34; entry (file+datetree &amp;#34;~/git/org/diary.org&amp;#34;)
&amp;#34;* %?\n%U\n&amp;#34; :clock-in t :clock-resume t)
(&amp;#34;w&amp;#34; &amp;#34;org-protocol&amp;#34; entry (file &amp;#34;~/git/org/refile.org&amp;#34;)
&amp;#34;* TODO Review %c\n%U\n&amp;#34; :immediate-finish t)
(&amp;#34;m&amp;#34; &amp;#34;Meeting&amp;#34; entry (file &amp;#34;~/git/org/refile.org&amp;#34;)
&amp;#34;* MEETING with %? :MEETING:\n%U&amp;#34; :clock-in t :clock-resume t)
(&amp;#34;p&amp;#34; &amp;#34;Phone call&amp;#34; entry (file &amp;#34;~/git/org/refile.org&amp;#34;)
&amp;#34;* PHONE %? :PHONE:\n%U&amp;#34; :clock-in t :clock-resume t)
(&amp;#34;h&amp;#34; &amp;#34;Habit&amp;#34; entry (file &amp;#34;~/git/org/refile.org&amp;#34;)
&amp;#34;* NEXT %?\n%U\n%a\nSCHEDULED: %(format-time-string \&amp;#34;%&amp;lt;&amp;lt;%Y-%m-%d %a .+1d/3d&amp;gt;&amp;gt;\&amp;#34;)\n:PROPERTIES:\n:STYLE: habit\n:REPEAT_TO_STATE: NEXT\n:END:\n&amp;#34;))))&lt;/p>
&lt;p>
Capture mode now handles automatically clocking in and out of a
capture task. This all works out of the box now without special hooks.
When I start a capture mode task the task is clocked in as specified
by `:clock-in t` and when the task is filed with `C-c C-c` the clock
resumes on the original clocking task.&lt;/p>
&lt;p>
The quick clocking in and out of capture mode tasks (often it takes
less than a minute to capture some new task details) can leave
empty clock drawers in my tasks which aren&amp;amp;rsquo;t really useful. Since I
remove clocking lines with 0:00 length I end up with a clock drawer
like this:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>TODO New Capture Task&lt;/p>
&lt;p>[2010-05-08 Sat 13:53]&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>I have the following setup to remove these empty `LOGBOOK` drawers if
they occur.&lt;/p>
&lt;p>
;; Remove empty LOGBOOK drawers on clock out
(defun bh/remove-empty-drawer-on-clock-out ()
(interactive)
(save-excursion
(beginning-of-line 0)
(org-remove-empty-drawer-at &amp;#34;LOGBOOK&amp;#34; (point))))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-clock-out-hook &amp;#39;bh/remove-empty-drawer-on-clock-out &amp;#39;append)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CaptureRefileOrg&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Separate file for Capture Tasks&lt;/p>
&lt;p>
I have a single org file which is the target for my capture templates.&lt;/p>
&lt;p>
I store notes, tasks, phone calls, and org-protocol tasks in
`refile.org`. I used to use multiple files but found that didn&amp;amp;rsquo;t
really have any advantage over a single file.&lt;/p>
&lt;p>
Normally this file is empty except for a single line at the top which
creates a `REFILE` tag for anything in the file.&lt;/p>
&lt;p>
The file has a single permanent line at the top like this&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CaptureTasksAreFast&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Capture Tasks is all about being FAST&lt;/p>
&lt;p>
Okay I&amp;amp;rsquo;m in the middle of something and oh yeah - I have to remember
to do that. I don&amp;amp;rsquo;t stop what I&amp;amp;rsquo;m doing. I&amp;amp;rsquo;m probably clocking a
project I&amp;amp;rsquo;m working on and I don&amp;amp;rsquo;t want to lose my focus on that but I
can&amp;amp;rsquo;t afford to forget this little thing that just came up.&lt;/p>
&lt;p>
So what do I do? Hit `C-c c` to start capture mode and select `t`
since it&amp;amp;rsquo;s a new task and I get a buffer like this:&lt;/p>
&lt;ul>
&lt;li>TODO
[2010-08-05 Thu 21:06]
&lt;a href="~/git/org-mode-doc/org-mode.org::*Capture%20Tasks%20is%20all%20about%20being%20FAST">Capture Tasks is all about being FAST&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Enter the details of the TODO item and `C-c C-c` to file it away in
refile.org and go right back to what I&amp;amp;rsquo;m really working on secure in
the knowledge that that item isn&amp;amp;rsquo;t going to get lost and I don&amp;amp;rsquo;t have
to think about it anymore at all now.&lt;/p>
&lt;p>
The amount of time I spend entering the captured note is clocked. The
capture templates are set to automatically clock in and out of the
capture task. This is great for interruptions and telephone calls
too.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Refiling&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Refiling tasks is easy. After collecting a bunch of new tasks in my
refile.org file using capture mode I need to move these to the
correct org file and topic. All of my active org-files are in my
`org-agenda-files` variable and contribute to the agenda.&lt;/p>
&lt;p>
I collect capture tasks in refile.org for up to a week. These now
stand out daily on my block agenda and I usually refile them during
the day. I like to keep my refile task list empty.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;RefileSetup&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Refile Setup&lt;/p>
&lt;p>
To refile tasks in org you need to tell it where you want to refile things.&lt;/p>
&lt;p>
In my setup I let any file in `org-agenda-files` and the current file
contribute to the list of valid refile targets.&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve recently moved to using IDO to complete targets directly. I find
this to be faster than my previous complete in steps setup. At first
I didn&amp;amp;rsquo;t like IDO but after reviewing the documentation again and
learning about `C-SPC` to limit target searches I find it is much
better than my previous complete-in-steps setup. Now when I want to
refile something I do `C-c C-w` to start the refile process, then type
something to get some matching targets, then `C-SPC` to restrict the
matches to the current list, then continue searching with some other
text to find the target I need. `C-j` also selects the current
completion as the final target. I like this a lot. I show full
outline paths in the targets so I can have the same heading in
multiple subtrees or projects and still tell them apart while
refiling.&lt;/p>
&lt;p>
I now exclude `DONE` state tasks as valid refile targets. This helps to keep the
refile target list to a reasonable size.&lt;/p>
&lt;p>
Here is my refile configuration:&lt;/p>
&lt;p>
; Targets include this file and any file contributing to the agenda - up to 9 levels deep
(setq org-refile-targets (quote ((nil :maxlevel . 9)
(org-agenda-files :maxlevel . 9))))&lt;/p>
&lt;p>
; Use full outline paths for refile targets - we file directly with IDO
(setq org-refile-use-outline-path t)&lt;/p>
&lt;p>
; Targets complete directly with IDO
(setq org-outline-path-complete-in-steps nil)&lt;/p>
&lt;p>
; Allow refile to create parent tasks with confirmation
(setq org-refile-allow-creating-parent-nodes (quote confirm))&lt;/p>
&lt;p>
; Use IDO for both buffer and file completion and ido-everywhere to t
(setq org-completion-use-ido t)
(setq ido-everywhere t)
(setq ido-max-directory-size 100000)
(ido-mode (quote both))
; Use the current window when visiting files and buffers with ido
(setq ido-default-file-method &amp;#39;selected-window)
(setq ido-default-buffer-method &amp;#39;selected-window)
; Use the current window for indirect buffer display
(setq org-indirect-buffer-display &amp;#39;current-window)&lt;/p>
&lt;p>
;;;; Refile settings
; Exclude DONE state tasks from refile targets
(defun bh/verify-refile-target ()
&amp;#34;Exclude todo keywords with a done state from refile targets&amp;#34;
(not (member (nth 2 (org-heading-components)) org-done-keywords)))&lt;/p>
&lt;p>
(setq org-refile-target-verify-function &amp;#39;bh/verify-refile-target)&lt;/p>
&lt;p>
To refile a task to my `norang.org` file under `System Maintenance` I
just put the cursor on the task and hit `C-c C-w` and enter `nor C-SPC sys RET` and it&amp;amp;rsquo;s done. IDO completion makes locating targets a snap.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;RefilingTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Refiling Tasks&lt;/p>
&lt;p>
Tasks to refile are in their own section of the block agenda. To find
tasks to refile I run my agenda view with `F12 SPC` and scroll down to
second section of the block agenda: `Tasks to Refile`. This view
shows all tasks (even ones marked in a `done` state).&lt;/p>
&lt;p>
Bulk refiling in the agenda works very well for multiple tasks going
to the same place. Just mark the tasks with `m` and then `B r` to
refile all of them to a new location. Occasionally I&amp;amp;rsquo;ll also refile
tasks as subtasks of the current clocking task using `C-2 C-c C-w`
from the `refile.org` file.&lt;/p>
&lt;p>
Refiling all of my tasks tends to take less than a minute so I
normally do this a couple of times a day.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;RefilingNotes&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Refiling Notes&lt;/p>
&lt;p>
I keep a `* Notes` headline in most of my org-mode files. Notes have
a `NOTE` tag which is created by the capture template for notes. This
allows finding notes across multiple files easily using the agenda
search functions.&lt;/p>
&lt;p>
Notes created by capture tasks go first to `refile.org` and are later
refiled to the appropriate project file. Some notes that are project
related get filed to the appropriate project instead of under the
catchall `* NOTES` task. Generally these types of notes are specific
to the project and not generally useful &amp;amp;#x2013; so removing them from the
notes list when the project is archived makes sense.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;RefilingPhoneCalls&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Refiling Phone Calls and Meetings&lt;/p>
&lt;p>
Phone calls and meetings are handled using capture mode. I time my
calls and meetings using the capture mode template settings to clock
in and out the capture task while the phone call or meeting is in
progress.&lt;/p>
&lt;p>
Phone call and meeting tasks collect in `refile.org` and are later
refiled to the appropriate location. Some phone calls are billable
and we want these tracked in the appropriate category. I refile my
phone call and meeting tasks under the appropriate project so time
tracking and reports are as accurate as possible.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CustomAgendaViews&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
I now have one block agenda view that has everything on it. I also
keep separate single view agenda commands for use on my slower Eee
PC - since it takes prohibitively long to generate my block agenda on
that slow machine. I&amp;amp;rsquo;m striving to simplify my layout with everything
at my fingertips in a single agenda on my workstation which is where I
spend the bulk of my time.&lt;/p>
&lt;p>
Most of my old custom agenda views were rendered obsolete when
filtering functionality was added to the agenda in newer versions of
`org-mode` and now with block agenda functionality I can combine
everything into a single view.&lt;/p>
&lt;p>
Custom agenda views are used for:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Single block agenda shows the following&lt;/p>
&lt;ul>
&lt;li>overview of today&lt;/li>
&lt;li>Finding tasks to be refiled&lt;/li>
&lt;li>Finding stuck projects&lt;/li>
&lt;li>Finding NEXT tasks to work on&lt;/li>
&lt;li>Show all related tasks&lt;/li>
&lt;li>Reviewing projects&lt;/li>
&lt;li>Finding tasks waiting on something&lt;/li>
&lt;li>Findings tasks to be archived&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Finding notes&lt;/li>
&lt;li>Viewing habits&lt;/li>
&lt;/ul>
&lt;p>If I want just today&amp;amp;rsquo;s calendar view then `F12 a` is still faster than
generating the block agenda - especially if I want to view a week or
month&amp;amp;rsquo;s worth of information, or check my clocking data. In that case
the extra detail on the block agenda view is never really needed and I
don&amp;amp;rsquo;t want to spend time waiting for it to be generated.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CustomAgendaViewSetup&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Setup&lt;/p>
&lt;p>
;; Do not dim blocked tasks
(setq org-agenda-dim-blocked-tasks nil)&lt;/p>
&lt;p>
;; Compact the block agenda view
(setq org-agenda-compact-blocks t)&lt;/p>
&lt;p>
;; Custom agenda command definitions
(setq org-agenda-custom-commands
(quote ((&amp;#34;N&amp;#34; &amp;#34;Notes&amp;#34; tags &amp;#34;NOTE&amp;#34;
((org-agenda-overriding-header &amp;#34;Notes&amp;#34;)
(org-tags-match-list-sublevels t)))
(&amp;#34;h&amp;#34; &amp;#34;Habits&amp;#34; tags-todo &amp;#34;STYLE=\&amp;#34;habit\&amp;#34;&amp;#34;
((org-agenda-overriding-header &amp;#34;Habits&amp;#34;)
(org-agenda-sorting-strategy
&amp;#39;(todo-state-down effort-up category-keep))))
(&amp;#34; &amp;#34; &amp;#34;Agenda&amp;#34;
((agenda &amp;#34;&amp;#34; nil)
(tags &amp;#34;REFILE&amp;#34;
((org-agenda-overriding-header &amp;#34;Tasks to Refile&amp;#34;)
(org-tags-match-list-sublevels nil)))
(tags-todo &amp;#34;-CANCELLED/!&amp;#34;
((org-agenda-overriding-header &amp;#34;Stuck Projects&amp;#34;)
(org-agenda-skip-function &amp;#39;bh/skip-non-stuck-projects)
(org-agenda-sorting-strategy
&amp;#39;(category-keep))))
(tags-todo &amp;#34;-HOLD-CANCELLED/!&amp;#34;
((org-agenda-overriding-header &amp;#34;Projects&amp;#34;)
(org-agenda-skip-function &amp;#39;bh/skip-non-projects)
(org-tags-match-list-sublevels &amp;#39;indented)
(org-agenda-sorting-strategy
&amp;#39;(category-keep))))
(tags-todo &amp;#34;-CANCELLED/!NEXT&amp;#34;
((org-agenda-overriding-header (concat &amp;#34;Project Next Tasks&amp;#34;
(if bh/hide-scheduled-and-waiting-next-tasks
&amp;#34;&amp;#34;
&amp;#34; (including WAITING and SCHEDULED tasks)&amp;#34;)))
(org-agenda-skip-function &amp;#39;bh/skip-projects-and-habits-and-single-tasks)
(org-tags-match-list-sublevels t)
(org-agenda-todo-ignore-scheduled bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-todo-ignore-deadlines bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-todo-ignore-with-date bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-sorting-strategy
&amp;#39;(todo-state-down effort-up category-keep))))
(tags-todo &amp;#34;-REFILE-CANCELLED-WAITING-HOLD/!&amp;#34;
((org-agenda-overriding-header (concat &amp;#34;Project Subtasks&amp;#34;
(if bh/hide-scheduled-and-waiting-next-tasks
&amp;#34;&amp;#34;
&amp;#34; (including WAITING and SCHEDULED tasks)&amp;#34;)))
(org-agenda-skip-function &amp;#39;bh/skip-non-project-tasks)
(org-agenda-todo-ignore-scheduled bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-todo-ignore-deadlines bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-todo-ignore-with-date bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-sorting-strategy
&amp;#39;(category-keep))))
(tags-todo &amp;#34;-REFILE-CANCELLED-WAITING-HOLD/!&amp;#34;
((org-agenda-overriding-header (concat &amp;#34;Standalone Tasks&amp;#34;
(if bh/hide-scheduled-and-waiting-next-tasks
&amp;#34;&amp;#34;
&amp;#34; (including WAITING and SCHEDULED tasks)&amp;#34;)))
(org-agenda-skip-function &amp;#39;bh/skip-project-tasks)
(org-agenda-todo-ignore-scheduled bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-todo-ignore-deadlines bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-todo-ignore-with-date bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-sorting-strategy
&amp;#39;(category-keep))))
(tags-todo &amp;#34;-CANCELLED+WAITING|HOLD/!&amp;#34;
((org-agenda-overriding-header (concat &amp;#34;Waiting and Postponed Tasks&amp;#34;
(if bh/hide-scheduled-and-waiting-next-tasks
&amp;#34;&amp;#34;
&amp;#34; (including WAITING and SCHEDULED tasks)&amp;#34;)))
(org-agenda-skip-function &amp;#39;bh/skip-non-tasks)
(org-tags-match-list-sublevels nil)
(org-agenda-todo-ignore-scheduled bh/hide-scheduled-and-waiting-next-tasks)
(org-agenda-todo-ignore-deadlines bh/hide-scheduled-and-waiting-next-tasks)))
(tags &amp;#34;-REFILE/&amp;#34;
((org-agenda-overriding-header &amp;#34;Tasks to Archive&amp;#34;)
(org-agenda-skip-function &amp;#39;bh/skip-non-archivable-tasks)
(org-tags-match-list-sublevels nil))))
nil))))&lt;/p>
&lt;p>
My block agenda view looks like this when not narrowed to a project.
This shows top-level projects and `NEXT` tasks but hides the project details since
we are not focused on any particular project.&lt;/p>
&lt;p>
&lt;strong>&lt;strong>NOTE:&lt;/strong>&lt;/strong> This agenda screen shot is out of date and does not currently match the agenda setup in this document.
This will be fixed soon.&lt;/p>
&lt;p>
![img](block-agenda-nonproject.png)&lt;/p>
&lt;p>
After selecting a project (with `P` on any task in the agenda) the block agenda changes to show the project and
any subprojects in the Projects section. Tasks show project-related tasks that are hidden when not
narrowed to a project.&lt;/p>
&lt;p>
This makes it easy to focus on the task at hand.&lt;/p>
&lt;p>
&lt;strong>&lt;strong>NOTE:&lt;/strong>&lt;/strong> This agenda screen shot is out of date and does not currently match the agenda setup in this document.
This will be fixed soon.&lt;/p>
&lt;p>
![img](block-agenda-project.png)&lt;/p>
&lt;p>
I generally work top-down on the agenda. Things with deadlines and
scheduled dates (planned to work on today or earlier) show up in the
agenda at the top.&lt;/p>
&lt;p>
My day goes generally like this:&lt;/p>
&lt;ul>
&lt;li>Punch in (this starts the clock on the default task)&lt;/li>
&lt;li>Look at the agenda and make a mental note of anything important to deal with today&lt;/li>
&lt;li>
&lt;p>Read email and news&lt;/p>
&lt;ul>
&lt;li>create notes, and tasks for things that need responses with org-capture&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Check refile tasks and respond to emails&lt;/li>
&lt;li>
&lt;p>Look at my agenda and work on important tasks for today&lt;/p>
&lt;ul>
&lt;li>Clock it in&lt;/li>
&lt;li>Work on it until it is `DONE` or it gets interrupted&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Work on tasks&lt;/li>
&lt;li>Make journal entries (`C-c c j`) for interruptions&lt;/li>
&lt;li>Punch out for lunch and punch back in after lunch&lt;/li>
&lt;li>work on more tasks&lt;/li>
&lt;li>
&lt;p>Refile tasks to empty the list&lt;/p>
&lt;ul>
&lt;li>Tag tasks to be refiled with `m` collecting all tasks for the same target&lt;/li>
&lt;li>Bulk refile the tasks to the target location with `B r`&lt;/li>
&lt;li>Repeat (or refile individually with `C-c C-w`) until all refile tasks are gone&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Mark habits done today as DONE&lt;/li>
&lt;li>Punch out at the end of the work day&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;a id=&amp;#34;WhatDoIWorkOnNext&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## What do I work on next?&lt;/p>
&lt;p>
Start with deadlines and tasks scheduled today or earlier from the
daily agenda view. Then move on to tasks in the `Next Tasks` list in
the block agenda view. I tend to schedule current projects to &amp;amp;rsquo;today&amp;amp;rsquo;
when I start work on them and they sit on my daily agenda reminding me
that they need to be completed. I normally only schedule one or two
projects to the daily agenda and unschedule things that are no longer
important and don&amp;amp;rsquo;t deserve my attention today.&lt;/p>
&lt;p>
When I look for a new task to work on I generally hit `F12 SPC` to get
the block agenda and follow this order:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Pick something off today&amp;amp;rsquo;s agenda&lt;/p>
&lt;ul>
&lt;li>deadline for today (do this first - it&amp;amp;rsquo;s not late yet)&lt;/li>
&lt;li>deadline in the past (it&amp;amp;rsquo;s already late)&lt;/li>
&lt;li>a scheduled task for today (it&amp;amp;rsquo;s supposed to be done today)&lt;/li>
&lt;li>a scheduled task that is still on the agenda&lt;/li>
&lt;li>deadline that is coming up soon&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>pick a NEXT task&lt;/li>
&lt;li>If you run out of items to work on look for a NEXT task in the current context
pick a task from the Tasks list of the current project.&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;a id=&amp;#34;CustomAgendaViewsNextList&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Why keep it all on the `NEXT` list?&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve moved to a more GTD way of doing things. Now I just use a `NEXT`
list. Only projects get tasks with `NEXT` keywords since stuck projects
initiate the need for marking or creating `NEXT` tasks. A `NEXT` task
is something that is available to work on &lt;span style="text-decoration: underline;">now&lt;/span>, it is the next
logical step in some project.&lt;/p>
&lt;p>
I used to have a special keyword `ONGOING` for things that I do a lot
and want to clock but never really start/end. I had a special agenda
view for `ONGOING` tasks that I would pull up to easily find the thing
I want to clock.&lt;/p>
&lt;p>
Since then I&amp;amp;rsquo;ve moved away from using the `ONGOING` todo keyword.
Having an agenda view that shows `NEXT` tasks makes it easy to pick
the thing to clock - and I don&amp;amp;rsquo;t have to remember if I need to look in
the `ONGOING` list or the `NEXT` list when looking for the task to
clock-in. The `NEXT` list is basically &amp;amp;rsquo;what is current&amp;amp;rsquo; - any task
that moves a project forward. I want to find the thing to work on as
fast as I can and actually do work on it - not spend time hunting
through my org files for the task that needs to be clocked-in.&lt;/p>
&lt;p>
To drop a task off the `NEXT` list simply move it back to the `TODO`
state.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ReadingMailNewsIRC&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Reading email, newsgroups, and conversations on IRC&lt;/p>
&lt;p>
When reading email, newsgroups, and conversations on IRC I just let
the default task (normally `** Organization`) clock the time I spend on
these tasks. To read email I go to Gnus and read everything in my
inboxes. If there are emails that require a response I use
org-capture to create a new task with a heading of &amp;amp;rsquo;Respond to &amp;lt;user&amp;gt;&amp;amp;rsquo;
for each one. This automatically links to the email in the task and
makes it easy to find later. Some emails are quick to respond to and
some take research and a significant amount of time to complete. I
clock each one in it&amp;amp;rsquo;s own task just in case I need that clocked time
later. The capture template for Repond To tasks is now scheduled for
today so I can refile the task to the appropriate org file without
losing the task for a week.&lt;/p>
&lt;p>
Next, I go to my newly created tasks to be refiled from the block
agenda with `F12 a` and clock in an email task and deal with it.
Repeat this until all of the &amp;amp;rsquo;Respond to &amp;lt;user&amp;gt;&amp;amp;rsquo; tasks are marked
`DONE`.&lt;/p>
&lt;p>
I read email and newgroups in Gnus so I don&amp;amp;rsquo;t separate clocked time
for quickly looking at things. If an article has a useful piece of
information I want to remember I create a note for it with `C-c c n`
and enter the topic and file it. This takes practically no time at
all and I know the note is safely filed for later retrieval. The time
I spend in the capture buffer is clocked with that capture note.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CustomAgendaViewFiltering&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Filtering&lt;/p>
&lt;p>
So many tasks, so little time. I have hundreds of tasks at any given
time (373 right now). There is so much stuff to look at it can be
daunting. This is where agenda filtering saves the day.&lt;/p>
&lt;p>
It&amp;amp;rsquo;s 11:53AM and I&amp;amp;rsquo;m in work mode just before lunch. I don&amp;amp;rsquo;t want to
see tasks that are not work related right now. I also don&amp;amp;rsquo;t want to
work on a big project just before lunch&amp;amp;#x2026; so I need to find small
tasks that I can knock off the list.&lt;/p>
&lt;p>
How do we do this? Get a list of NEXT tasks from the block agenda and
then narrow it down with filtering. Tasks are ordered in the NEXT
agenda view by estimated effort so the short tasks are first &amp;amp;#x2013; just
start at the top and work your way down. I can limit the displayed
agenda tasks to those estimates of 10 minutes or less with `/ + 1` and
I can pick something that fits the minutes I have left before I take
off for lunch.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CustomAgendaViewFilteringContext&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Automatically removing context based tasks with / RET&lt;/p>
&lt;p>
`/ RET` in the agenda is really useful. This awesome feature was
added to org-mode by John Wiegley. It removes tasks automatically by
filtering based on a user-provided function.&lt;/p>
&lt;p>
At work I have projects I&amp;amp;rsquo;m working on which are assigned by my
manager. Sometimes priorities changes and projects are delayed to
sometime in the future. This means I need to stop working on these
immediately. I put the project task on `HOLD` and work on something
else. The `/ RET` filter removes `HOLD` tasks and subtasks (because
of tag inheritance).&lt;/p>
&lt;p>
At home I have some tasks tagged with `farm` since these need to be
performed when I am physically at our family farm. Since I am there
infrequently I have added `farm` to the list of auto-excluded tags on
my system. I can always explicitly filter to just `farm` tasks with
`/ TAB farm RET` when I am physically there.&lt;/p>
&lt;p>
I have the following setup to allow `/ RET` to filter tasks based on
the description above.&lt;/p>
&lt;p>
(defun bh/org-auto-exclude-function (tag)
&amp;#34;Automatic task exclusion in the agenda with / RET&amp;#34;
(and (cond
((string= tag &amp;#34;hold&amp;#34;)&lt;/p>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol>
&lt;p>((string= tag &amp;#34;farm&amp;#34;)
t))
(concat &amp;#34;-&amp;#34; tag)))&lt;/p>
&lt;p>
(setq org-agenda-auto-exclude-function &amp;#39;bh/org-auto-exclude-function)&lt;/p>
&lt;p>
This lets me filter tasks with just `/ RET` on the agenda which removes tasks I&amp;amp;rsquo;m not
supposed to be working on now from the list of returned results.&lt;/p>
&lt;p>
This helps to keep my agenda clutter-free.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Clocking&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Okay, I admit it. I&amp;amp;rsquo;m a clocking fanatic.&lt;/p>
&lt;p>
I clock everything at work. Org-mode makes this really easy. I&amp;amp;rsquo;d
rather clock too much stuff than not enough so I find it&amp;amp;rsquo;s easier to
get in the habit of clocking everything.&lt;/p>
&lt;p>
This makes it possible to look back at the day and see where I&amp;amp;rsquo;m
spending too much time, or not enough time on specific projects. This
also helps a lot when you need to estimate how long something is going
to take to do &amp;amp;#x2013; you can use your clocking data from similar tasks to
help tune your estimates so they are more accurate.&lt;/p>
&lt;p>
Without clocking data it&amp;amp;rsquo;s hard to tell how long something took to do
after the fact.&lt;/p>
&lt;p>
I now use the concept of `punching in` and `punching out` at the start
and end of my work day. I punch in when I arrive at work, punch out
for lunch, punch in after lunch, and punch out at the end of the day.
Every minute is clocked between punch-in and punch-out times.&lt;/p>
&lt;p>
Punching in defines a default task to clock time on whenever the clock
would normally stop. I found that with the default org-mode setup I
would lose clocked minutes during the day, a minute here, a minute
there, and that all adds up. This is especially true if you write
notes when moving to a DONE state - in this case the clock normally
stops before you have composed the note &amp;amp;#x2013; and good notes take a few
minutes to write.&lt;/p>
&lt;p>
My clocking setup basically works like this:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Punch in (start the clock)&lt;/p>
&lt;ul>
&lt;li>This clocks in a predefined task by `org-id` that is the default
task to clock in whenever the clock normally stops&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Clock in tasks normally, and let moving to a DONE state clock out&lt;/p>
&lt;ul>
&lt;li>clocking out automatically clocks time on a parent task or moves
back to the predefined default task if no parent exists.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Continue clocking whatever tasks you work on&lt;/li>
&lt;li>Punch out (stop the clock)&lt;/li>
&lt;/ul>
&lt;p>I&amp;amp;rsquo;m free to change the default task multiple times during the day but
with the clock moving up the project tree on clock out I no longer
need to do this. I simply have a single task that gets clocked in
when I punch-in.&lt;/p>
&lt;p>
If I punch-in with a prefix on a task in `Project X` then that task
automatically becomes the default task and all clocked time goes on
that project until I either punch out or punch in some other task.&lt;/p>
&lt;p>
My org files look like this:&lt;/p>
&lt;p>
`todo.org`:&lt;/p>
&lt;p>…&lt;/p>
&lt;ul>
&lt;li>Tasks&lt;/li>
&lt;/ul>
&lt;p>** Organization&lt;/p>
&lt;p>…&lt;/p>
&lt;p>
If I am working on some task, then I simply clock in on the task.
Clocking out moves the clock up to a parent task with a todo keyword
(if any) which keeps the clock time in the same subtree. If there
is no parent task with a todo keyword then the clock moves back to
the default clocking task until I punch out or clock in some other
task. When an interruption occurs I start a capture task which
keeps clocked time on the interruption task until I close it with
C-c C-c.&lt;/p>
&lt;p>
This works really well for me.&lt;/p>
&lt;p>
For example, consider the following org file:&lt;/p>
&lt;ul>
&lt;li>TODO Project A&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>* NEXT TASK 1
*&lt;/strong> TODO TASK 2
** TODO TASK 3&lt;/p>
&lt;ul>
&lt;li>Tasks&lt;/li>
&lt;/ul>
&lt;p>** TODO Some miscellaneous task&lt;/p>
&lt;p>
I&amp;amp;rsquo;ll work on this file in the following sequence:&lt;/p>
&lt;ol>
&lt;li>I punch in with `F9-I` at the start of my day
That clocks in the `Organization` task by id in my `todo.org` file.&lt;/li>
&lt;li>`F12-SPC` to review my block agenda
Pick &amp;amp;rsquo;TODO Some miscellaneous task&amp;amp;rsquo; to work on next and clock that in with `I`
The clock is now on &amp;amp;rsquo;TODO Some miscellaneous task&amp;amp;rsquo;&lt;/li>
&lt;li>I complete that task and mark it done with `C-c C-t d`
This stops the clock and moves it back to the `Organization` task.&lt;/li>
&lt;li>Now I want to work on `Project A` so I clock in `Task 1`
I work on Task 1 and mark it `DONE`. This clocks out `Task 1` and moves
the clock to `Project A`. Now I work on `Task 2` and clock that in.&lt;/li>
&lt;/ol>
&lt;p>The entire time I&amp;amp;rsquo;m working on and clocking some subtask of `Project A`
all of the clock time in the interval is applied somewhere to the `Project A`
tree. When I eventually mark `Project A` done then the clock will move
back to the default organization task.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ClockSetup&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Clock Setup&lt;/p>
&lt;p>
To get started we need to punch in which clocks in the default
task and keeps the clock running. This is now simply a matter of
punching in the clock with `F9 I`. You can do this anywhere.
Clocking out will now clock in the parent task (if there is one
with a todo keyword) or clock in the default task if not parent
exists.&lt;/p>
&lt;p>
Keeping the clock running when moving a subtask to a `DONE` state
means clocking continues to apply to the project task. I can pick the
next task from the parent and clock that in without losing a minute or
two while I&amp;amp;rsquo;m deciding what to work on next.&lt;/p>
&lt;p>
I keep clock times, state changes, and other notes in the `:LOGBOOK:`
drawer.&lt;/p>
&lt;p>
I have the following org-mode settings for clocking:&lt;/p>
&lt;p>
;;
;; Resume clocking task when emacs is restarted
(org-clock-persistence-insinuate)
;;
;; Show lot of clocking history so it&amp;#39;s easy to pick items off the C-F11 list
(setq org-clock-history-length 23)
;; Resume clocking task on clock-in if the clock is open
(setq org-clock-in-resume t)
;; Change tasks to NEXT when clocking in
(setq org-clock-in-switch-to-state &amp;#39;bh/clock-in-to-next)
;; Separate drawers for clocking and logs
(setq org-drawers (quote (&amp;#34;PROPERTIES&amp;#34; &amp;#34;LOGBOOK&amp;#34;)))
;; Save clock data and state changes and notes in the LOGBOOK drawer
(setq org-clock-into-drawer t)
;; Sometimes I change tasks I&amp;#39;m clocking quickly - this removes clocked tasks with 0:00 duration
(setq org-clock-out-remove-zero-time-clocks t)
;; Clock out when moving task to a done state
(setq org-clock-out-when-done t)
;; Save the running clock and all clock history when exiting Emacs, load it on startup
(setq org-clock-persist t)
;; Do not prompt to resume an active clock
(setq org-clock-persist-query-resume nil)
;; Enable auto clock resolution for finding open clocks
(setq org-clock-auto-clock-resolution (quote when-no-clock-is-running))
;; Include current clocking task in clock reports
(setq org-clock-report-include-clocking-task t)&lt;/p>
&lt;p>
(setq bh/keep-clock-running nil)&lt;/p>
&lt;p>
(defun bh/clock-in-to-next (kw)
&amp;#34;Switch a task from TODO to NEXT when clocking in.
Skips capture tasks, projects, and subprojects.
Switch projects and subprojects from NEXT back to TODO&amp;#34;
(when (not (and (boundp &amp;#39;org-capture-mode) org-capture-mode))
(cond
((and (member (org-get-todo-state) (list &amp;#34;TODO&amp;#34;))
(bh/is-task-p))
&amp;#34;NEXT&amp;#34;)
((and (member (org-get-todo-state) (list &amp;#34;NEXT&amp;#34;))
(bh/is-project-p))
&amp;#34;TODO&amp;#34;))))&lt;/p>
&lt;p>
(defun bh/find-project-task ()
&amp;#34;Move point to the parent (project) task if any&amp;#34;
(save-restriction
(widen)
(let ((parent-task (save-excursion (org-back-to-heading &amp;#39;invisible-ok) (point))))
(while (org-up-heading-safe)
(when (member (nth 2 (org-heading-components)) org-todo-keywords-1)
(setq parent-task (point))))
(goto-char parent-task)
parent-task)))&lt;/p>
&lt;p>
(defun bh/punch-in (arg)
&amp;#34;Start continuous clocking and set the default task to the
selected task. If no task is selected set the Organization task
as the default task.&amp;#34;
(interactive &amp;#34;p&amp;#34;)
(setq bh/keep-clock-running t)
(if (equal major-mode &amp;#39;org-agenda-mode)
;;
;; We&amp;#39;re in the agenda
;;
(let* ((marker (org-get-at-bol &amp;#39;org-hd-marker))
(tags (org-with-point-at marker (org-get-tags-at))))
(if (and (eq arg 4) tags)
(org-agenda-clock-in &amp;#39;(16))
(bh/clock-in-organization-task-as-default)))
;;
;; We are not in the agenda
;;
(save-restriction
(widen)
; Find the tags on the current task
(if (and (equal major-mode &amp;#39;org-mode) (not (org-before-first-heading-p)) (eq arg 4))
(org-clock-in &amp;#39;(16))
(bh/clock-in-organization-task-as-default)))))&lt;/p>
&lt;p>
(defun bh/punch-out ()
(interactive)
(setq bh/keep-clock-running nil)
(when (org-clock-is-active)
(org-clock-out))
(org-agenda-remove-restriction-lock))&lt;/p>
&lt;p>
(defun bh/clock-in-default-task ()
(save-excursion
(org-with-point-at org-clock-default-task
(org-clock-in))))&lt;/p>
&lt;p>
(defun bh/clock-in-parent-task ()
&amp;#34;Move point to the parent (project) task if any and clock in&amp;#34;
(let ((parent-task))
(save-excursion
(save-restriction
(widen)
(while (and (not parent-task) (org-up-heading-safe))
(when (member (nth 2 (org-heading-components)) org-todo-keywords-1)
(setq parent-task (point))))
(if parent-task
(org-with-point-at parent-task
(org-clock-in))
(when bh/keep-clock-running
(bh/clock-in-default-task)))))))&lt;/p>
&lt;p>
(defvar bh/organization-task-id &amp;#34;eb155a82-92b2-4f25-a3c6-0304591af2f9&amp;#34;)&lt;/p>
&lt;p>
(defun bh/clock-in-organization-task-as-default ()
(interactive)
(org-with-point-at (org-id-find bh/organization-task-id &amp;#39;marker)
(org-clock-in &amp;#39;(16))))&lt;/p>
&lt;p>
(defun bh/clock-out-maybe ()
(when (and bh/keep-clock-running
(not org-clock-clocking-in)
(marker-buffer org-clock-default-task)
(not org-clock-resolving-clocks-due-to-idleness))
(bh/clock-in-parent-task)))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-clock-out-hook &amp;#39;bh/clock-out-maybe &amp;#39;append)&lt;/p>
&lt;p>
I used to clock in tasks by ID using the following function but with
the new punch-in and punch-out I don&amp;amp;rsquo;t need these as much anymore.
`f9-SPC` calls `bh/clock-in-last-task` which switches the clock back
to the previously clocked task.&lt;/p>
&lt;p>
(require &amp;#39;org-id)
(defun bh/clock-in-task-by-id (id)
&amp;#34;Clock in a task by id&amp;#34;
(org-with-point-at (org-id-find id &amp;#39;marker)
(org-clock-in nil)))&lt;/p>
&lt;p>
(defun bh/clock-in-last-task (arg)
&amp;#34;Clock in the interrupted task if there is one
Skip the default task and get the next one.
A prefix arg forces clock in of the default task.&amp;#34;
(interactive &amp;#34;p&amp;#34;)
(let ((clock-in-to-task
(cond
((eq arg 4) org-clock-default-task)
((and (org-clock-is-active)
(equal org-clock-default-task (cadr org-clock-history)))
(caddr org-clock-history))
((org-clock-is-active) (cadr org-clock-history))
((equal org-clock-default-task (car org-clock-history)) (cadr org-clock-history))
(t (car org-clock-history)))))
(widen)
(org-with-point-at clock-in-to-task
(org-clock-in nil))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ClockingIn&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Clocking in&lt;/p>
&lt;p>
When I start or continue working on a task I clock it in with any of the following:&lt;/p>
&lt;ul>
&lt;li>`C-c C-x C-i`&lt;/li>
&lt;li>`I` in the agenda&lt;/li>
&lt;li>`I` speed key on the first character of the heading line&lt;/li>
&lt;li>`f9 I` while on the task in the agenda&lt;/li>
&lt;li>`f9 I` while in the task in an org file&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;a id=&amp;#34;ClockingInDefaultTask&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Setting a default clock task&lt;/p>
&lt;p>
I have a default `** Organization` task in my todo.org file that
I tend to put miscellaneous clock time on. This is the task I
clock in on when I punch in at the start of my work day with
`F9-I`. While reorganizing my org-files, reading email,
clearing my inbox, and doing other planning work that isn&amp;amp;rsquo;t for
a specific project I&amp;amp;rsquo;ll clock in this task. Punching-in
anywhere clocks in this Organization task as the default task.&lt;/p>
&lt;p>
If I want to change the default clocking task I just visit the
new task in any org buffer and clock it in with `C-u C-u C-c C-x C-i`. Now this new task that collects miscellaneous clock
minutes when the clock would normally stop.&lt;/p>
&lt;p>
You can quickly clock in the default clocking task with `C-u C-c C-x C-i d`. Another option is to repeatedly clock out so the
clock moves up the project tree until you clock out the
top-level task and the clock moves to the default task.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ClockingInByClockHistory&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Using the clock history to clock in old tasks&lt;/p>
&lt;p>
You can use the clock history to restart clocks on old tasks you&amp;amp;rsquo;ve
clocked or to jump directly to a task you have clocked previously. I
use this mainly to clock in whatever got interrupted by something.&lt;/p>
&lt;p>
Consider the following scenario:&lt;/p>
&lt;ul>
&lt;li>You are working on and clocking `Task A` (Organization)&lt;/li>
&lt;li>You get interrupted and switch to `Task B` (Document my use of org-mode)&lt;/li>
&lt;li>You complete `Task B` (Document my use of org-mode)&lt;/li>
&lt;li>Now you want to go back to `Task A` (Organization) again to continue&lt;/li>
&lt;/ul>
&lt;p>This is easy to deal with.&lt;/p>
&lt;ol>
&lt;li>Clock in `Task A`, work on it&lt;/li>
&lt;li>Go to `Task B` (or create a new task) and clock it in&lt;/li>
&lt;li>When you are finished with `Task B` hit `C-u C-c C-x C-i i`&lt;/li>
&lt;/ol>
&lt;p>This displays a clock history selection window like the following and
selects the interrupted `[i]` entry.&lt;/p>
&lt;p>
&lt;strong>&lt;strong>Clock history selection buffer for C-u C-c C-x C-i&lt;/strong>&lt;/strong>&lt;/p>
&lt;p>
Default Task
[d] norang Organization &amp;lt;– Task B
The task interrupted by starting the last one
[i] norang Organization &amp;lt;– Task B
Current Clocking Task
[c] org NEXT Document my use of org-mode &amp;lt;– Task A
Recent Tasks
[1] org NEXT Document my use of org-mode &amp;lt;– Task A
[2] norang Organization &amp;lt;– Task B
…
[Z] org DONE Fix default section links &amp;lt;– 35 clock task entries ago&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ClockEverythingWithNewTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Clock Everything - Create New Tasks&lt;/p>
&lt;p>
In order to clock everything you need a task for everything. That&amp;amp;rsquo;s
fine for planned projects but interruptions inevitably occur and you
need some place to record whatever time you spend on that
interruption.&lt;/p>
&lt;p>
To deal with this we create a new capture task to record the thing we
are about to do. The workflow goes something like this:&lt;/p>
&lt;ul>
&lt;li>You are clocking some task and an interruption occurs&lt;/li>
&lt;li>Create a quick capture task journal entry `C-c c j`&lt;/li>
&lt;li>Type the heading&lt;/li>
&lt;li>go do that thing (eat lunch, whatever)&lt;/li>
&lt;li>file it `C-c C-c`, this restores the clock back to the previous clocking task&lt;/li>
&lt;li>clock something else in or continue with the current clocking task&lt;/li>
&lt;/ul>
&lt;p>This means you can ignore the details like where this task really
belongs in your org file layout and just get on with completing the
thing. Refiling a bunch of tasks later in a group when it is
convenient to refile the tasks saves time in the long run.&lt;/p>
&lt;p>
If it&amp;amp;rsquo;s a one-shot uninteresting task (like a coffee break) I create
a capture journal entry for it that goes to the diary.org date tree.
If it&amp;amp;rsquo;s a task that actually needs to be tracked and marked done, and
applied to some project then I create a capture task instead which files it in
refile.org.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;FindTasksToClockIn&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Finding tasks to clock in&lt;/p>
&lt;p>
To find a task to work on I use one of the following options
(generally listed most frequently used first)&lt;/p>
&lt;ul>
&lt;li>Use the clock history C-u C-c C-x C-i
Go back to something I was clocking that is not finished&lt;/li>
&lt;li>Pick something off today&amp;amp;rsquo;s block agenda
`SCHEDULED` or `DEADLINE` items that need to be done soon&lt;/li>
&lt;li>Pick something off the `NEXT` tasks agenda view
Work on some unfinished task to move to completion&lt;/li>
&lt;li>Pick something off the other task list&lt;/li>
&lt;li>Use an agenda view with filtering to pick something to work on&lt;/li>
&lt;/ul>
&lt;p>Punching in on the task you select will restrict the agenda view to that project
so you can focus on just that thing for some period of time.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;EditingClockEntries&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Editing clock entries&lt;/p>
&lt;p>
Sometimes it is necessary to edit clock entries so they reflect
reality. I find I do this for maybe 2-3 entries in a week.&lt;/p>
&lt;p>
Occassionally I cannot clock in a task on time because I&amp;amp;rsquo;m away from
my computer. In this case the previous clocked task is still running
and counts time for both tasks which is wrong.&lt;/p>
&lt;p>
I make a note of the time and then when I get back to my computer I
clock in the right task and edit the start and end times to correct
the clock history.&lt;/p>
&lt;p>
To visit the clock line for an entry quickly use the agenda log mode.
`F12 a l` shows all clock lines for today. I use this to navigate to
the appropriate clock lines quickly. F11 goes to the current clocked
task but the agenda log mode is better for finding and visiting older
clock entries.&lt;/p>
&lt;p>
Use `F12 a l` to open the agenda in log mode and show only logged
clock times. Move the cursor down to the clock line you need to edit
and hit `TAB` and you&amp;amp;rsquo;re there.&lt;/p>
&lt;p>
To edit a clock entry just put the cursor on the part of the date you
want to edit (use the keyboard not the mouse - since the clicking on
the timestamp with the mouse goes back to the agenda for that day) and
hit the `S-&amp;lt;up arrow&amp;gt;` or `S-&amp;lt;down arrow&amp;gt;` keys to change the time.&lt;/p>
&lt;p>
The following setting makes time editing use discrete minute intervals (no rounding)
increments:&lt;/p>
&lt;p>
(setq org-time-stamp-rounding-minutes (quote (1 1)))&lt;/p>
&lt;p>
Editing the time with the shift arrow combination also updates the
total for the clock line which is a nice convenience.&lt;/p>
&lt;p>
I always check that I haven&amp;amp;rsquo;t created task overlaps when fixing time
clock entries by viewing them with log mode on in the agenda. There
is a new view in the agenda for this &amp;amp;#x2013; just hit `v c` in the daily
agenda and clock gaps and overlaps are identified.&lt;/p>
&lt;p>
I want my clock entries to be as accurate as possible.&lt;/p>
&lt;p>
The following setting shows 1 minute clocking gaps.&lt;/p>
&lt;p>
(setq org-agenda-clock-consistency-checks
(quote (:max-duration &amp;#34;4:00&amp;#34;
:min-duration 0
:max-gap 0
:gap-ok-around (&amp;#34;4:00&amp;#34;))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TimeReportingAndTracking&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;BillingClientsForClockedTime&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Billing clients based on clocked time&lt;/p>
&lt;p>
At the beginning of the month I invoice my clients for work done last
month. This is where I review my clocking data for correctness before
billing for the clocked time.&lt;/p>
&lt;p>
Billing for clocked time basically boils down to the following steps:&lt;/p>
&lt;ol>
&lt;li>Verify that the clock data is complete and correct&lt;/li>
&lt;li>Use clock reports to summarize time spent&lt;/li>
&lt;li>Create an invoice based on the clock data
I currently create invoices in an external software package
based on the org-mode clock data.&lt;/li>
&lt;li>Archive complete tasks so they are out of the way.
See [Archiving](#Archiving) for more details.&lt;/li>
&lt;/ol>
&lt;p>&amp;lt;a id=&amp;#34;VerifyingClockData&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Verify that the clock data is complete and correct&lt;/p>
&lt;p>
Since I change tasks often (sometimes more than once in a minute) I
use the following setting to remove clock entries with a zero
duration.&lt;/p>
&lt;p>
;; Sometimes I change tasks I&amp;#39;m clocking quickly - this removes clocked tasks with 0:00 duration
(setq org-clock-out-remove-zero-time-clocks t)&lt;/p>
&lt;p>
This setting just keeps my clocked log entries clean - only keeping
clock entries that contribute to the clock report.&lt;/p>
&lt;p>
Before invoicing for clocked time it is important to make sure your
clocked time data is correct. If you have a clocked time with an
entry that is not closed (ie. it has no end time) then that is a hole
in your clocked day and it gets counted as zero (0) for time spent on
the task when generating clock reports. Counting it as zero is almost
certainly wrong.&lt;/p>
&lt;p>
To check for unclosed clock times I use the agenda-view clock check
(`v c` in the agenda). This view shows clocking gaps and overlaps in
the agenda.&lt;/p>
&lt;p>
To check the last month&amp;amp;rsquo;s clock data I use `F12 a v m b v c`
which shows a full month in the agenda, moves to the previous
month, and shows the clocked times only. It&amp;amp;rsquo;s important to
remove any agenda restriction locks and filters when checking
the logs for gaps and overlaps.&lt;/p>
&lt;p>
The clocked-time only display in the agenda makes it easy to quickly
scan down the list to see if an entry is missing an end time. If an
entry is not closed you can manually fix the clock entry based on
other clock info around that time.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ClockReports&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Using clock reports to summarize time spent&lt;/p>
&lt;p>
Billable time for clients are kept in separate org files.&lt;/p>
&lt;p>
To get a report of time spent on tasks for `XYZ.org` you simply visit
the `XYZ.org` file and run an agenda clock report for the last month
with `F12 &amp;lt; a v m b R`. This limits the agenda to this one file,
shows the agenda for a full month, moves to last month, and generates
a clock report.&lt;/p>
&lt;p>
My agenda org clock report settings show 5 levels of detail with links
to the tasks. I like wider reports than the default compact setting
so I override the `:narrow` value.&lt;/p>
&lt;p>
;; Agenda clock report parameters
(setq org-agenda-clockreport-parameter-plist
(quote (:link t :maxlevel 5 :fileskip0 t :compact t :narrow 80)))&lt;/p>
&lt;p>
I used to have a monthly clock report dynamic block in each project
org file and manually updated them at the end of my billing cycle. I
used this as the basis for billing my clients for time spent on their
projects. I found updating the dynamic blocks fairly tedious when you
have more than a couple of files for the month.&lt;/p>
&lt;p>
I have since moved to using agenda clock reports shortly after that
feature was added. I find this much more convenient. The data isn&amp;amp;rsquo;t
normally for consumption by anyone else so the format of the agenda
clock report format is great for my use-case.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TaskEstimates&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Task Estimates and column view&lt;/p>
&lt;p>
Estimating how long tasks take to complete is a difficult skill to
master. Org-mode makes it easy to practice creating estimates for
tasks and then clock the actual time it takes to complete.&lt;/p>
&lt;p>
By repeatedly estimating tasks and reviewing how your estimate relates
to the actual time clocked you can tune your estimating skills.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CreatingTaskEstimates&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Creating a task estimate with column mode&lt;/p>
&lt;p>
I use `properties` and `column view` to do project estimates.&lt;/p>
&lt;p>
I set up column view globally with the following headlines&lt;/p>
&lt;p>
; Set default column view headings: Task Effort Clock_Summary
(setq org-columns-default-format &amp;#34;%80ITEM(Task) %10Effort(Effort){:} %10CLOCKSUM&amp;#34;)&lt;/p>
&lt;p>
This makes column view show estimated task effort and clocked times
side-by-side which is great for reviewing your project estimates.&lt;/p>
&lt;p>
A property called `Effort` records the estimated amount of time a
given task will take to complete. The estimate times I use are one
of:&lt;/p>
&lt;ul>
&lt;li>10 minutes&lt;/li>
&lt;li>30 minutes&lt;/li>
&lt;li>1 hour&lt;/li>
&lt;li>2 hours&lt;/li>
&lt;li>3 hours&lt;/li>
&lt;li>4 hours&lt;/li>
&lt;li>5 hours&lt;/li>
&lt;li>6 hours&lt;/li>
&lt;li>7 hours&lt;/li>
&lt;li>8 hours&lt;/li>
&lt;/ul>
&lt;p>These are stored for easy use in `column mode` in the global property
`Effort_ALL`.&lt;/p>
&lt;p>
; global Effort estimate values
; global STYLE property values for completion
(setq org-global-properties (quote ((&amp;#34;Effort_ALL&amp;#34; . &amp;#34;0:15 0:30 0:45 1:00 2:00 3:00 4:00 5:00 6:00 0:00&amp;#34;)
(&amp;#34;STYLE_ALL&amp;#34; . &amp;#34;habit&amp;#34;))))&lt;/p>
&lt;p>
To create an estimate for a task or subtree start column mode with
`C-c C-x C-c` and collapse the tree with `c`. This shows a table
overlayed on top of the headlines with the task name, effort estimate,
and clocked time in columns.&lt;/p>
&lt;p>
With the cursor in the `Effort` column for a task you can easily set
the estimated effort value with the quick keys `1` through `9`.&lt;/p>
&lt;p>
After setting the effort values exit `column mode` with `q`.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;SavingEstimate&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Saving your estimate&lt;/p>
&lt;p>
For fixed price jobs where you provide your estimate to a client, then
work to complete the project it is useful to save the original
estimate that is provided to the client.&lt;/p>
&lt;p>
Save your original estimate by creating a dynamic clock report table
at the top of your estimated project subtree. Entering `C-c C-x i RET` inserts a clock table report with your estimated values and any
clocked time to date.&lt;/p>
&lt;p>
Original Estimate&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Task&lt;/th>
&lt;th>Estimated Effort&lt;/th>
&lt;th>CLOCKSUM&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>** TODO Project to estimate&lt;/td>
&lt;td>5:40&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>*&lt;/strong> TODO Step 1&lt;/td>
&lt;td>0:10&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>*&lt;/strong> TODO Step 2&lt;/td>
&lt;td>0:10&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>*&lt;/strong> TODO Step 3&lt;/td>
&lt;td>5:10&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>**&lt;/strong> TODO Step 3.1&lt;/td>
&lt;td>2:00&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>**&lt;/strong> TODO Step 3.2&lt;/td>
&lt;td>3:00&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>**&lt;/strong> TODO Step 3.3&lt;/td>
&lt;td>0:10&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>*&lt;/strong> TODO Step 4&lt;/td>
&lt;td>0:10&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>
I normally delete the `#+BEGIN:` and `#+END:` lines from the original
table after providing the estimate to the client to ensure I don&amp;amp;rsquo;t
accidentally update the table by hitting `C-c C-c` on the `#+BEGIN:`
line.&lt;/p>
&lt;p>
Saving the original estimate data makes it possible to refine the
project tasks into subtasks as you work on the project without losing
the original estimate data.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ReviewingEstimates&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Reviewing your estimate&lt;/p>
&lt;p>
`Column view` is great for reviewing your estimate. This shows your
estimated time value and the total clock time for the project
side-by-side.&lt;/p>
&lt;p>
Creating a dynamic clock table with `C-c C-x i RET` is a great way to
save this project review if you need to make it available to other
applications.&lt;/p>
&lt;p>
`C-c C-x C-d` also provides a quick summary of clocked time for the
current org file.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ProgressReporting&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Providing progress reports to others&lt;/p>
&lt;p>
When someone wants details of what I&amp;amp;rsquo;ve done recently I simple generate a
log report in the agenda with tasks I&amp;amp;rsquo;ve completed and state changes combined
with a clock report for the appropriate time period.&lt;/p>
&lt;p>
The following setting shows closed tasks and state changes in the
agenda. Combined with the agenda clock report (&amp;amp;rsquo;R&amp;amp;rsquo;) I can quickly
generate all of the details required.&lt;/p>
&lt;p>
;; Agenda log mode items to display (closed and state changes by default)
(setq org-agenda-log-mode-items (quote (closed state)))&lt;/p>
&lt;p>
To generate the report I pull up the agenda for the appropriate time frame
(today, yesterday, this week, or last week) and hit the key sequence
`l R` to add the log report (without clocking data lines) and the agenda clock
report at the end.&lt;/p>
&lt;p>
Then it&amp;amp;rsquo;s simply a matter of exporting the resulting agenda in some useful format
to provide to other people. `C-x C-w /tmp/agenda.html RET` exports to HTML
and `C-x C-w /tmp/agenda.txt RET` exports to plain text. Other formats are
available but I use these two the most.&lt;/p>
&lt;p>
Combining this export with tag filters and `C-u R` can limit the
report to exactly the tags that people are interested in.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Tags&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Tasks can have any number of arbitrary tags. Tags are used for:&lt;/p>
&lt;ul>
&lt;li>filtering todo lists and agenda views&lt;/li>
&lt;li>providing context for tasks&lt;/li>
&lt;li>tagging notes&lt;/li>
&lt;li>tagging phone calls&lt;/li>
&lt;li>tagging meetings&lt;/li>
&lt;li>tagging tasks to be refiled&lt;/li>
&lt;li>tagging tasks in a WAITING state because a parent task is WAITING&lt;/li>
&lt;li>tagging cancelled tasks because a parent task is CANCELLED&lt;/li>
&lt;li>preventing export of some subtrees when publishing&lt;/li>
&lt;/ul>
&lt;p>I use tags mostly for filtering in the agenda. This means you can
find tasks with a specific tag easily across your large number of
org-mode files.&lt;/p>
&lt;p>
Some tags are mutually exclusive. These are defined in a group so
that only one of the tags can be applied to a task at a time
(disregarding tag inheritance). I use these types for tags for
applying context to a task. (Work tasks have an `@office` tag, and
are done at the office, Farm tasks have an `@farm` tag and are done at
the farm &amp;amp;#x2013; I can&amp;amp;rsquo;t change the oil on the tractor if I&amp;amp;rsquo;m not at the
farm&amp;amp;#x2026; so I hide these and other tasks by filtering my agenda view to
only `@office` tasks when I&amp;amp;rsquo;m at the office.)&lt;/p>
&lt;p>
Tasks are grouped together in org-files and a `#+FILETAGS:` entry
applies a tag to all tasks in the file. I use this to apply a tag to
all tasks in the file. My norang.org file creates a NORANG file tag
so I can filter tasks in the agenda in the norang.org file easily.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgTagAlist&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Tags&lt;/p>
&lt;p>
Here are my tag definitions with associated keys for filtering in the
agenda views.&lt;/p>
&lt;p>
The startgroup - endgroup (`@XXX`) tags are mutually exclusive -
selecting one removes a similar tag already on the task. These are
the context tags - you can&amp;amp;rsquo;t be in two places at once so if a task is
marked with @farm and you add @office then the @farm tag is removed
automagically.&lt;/p>
&lt;p>
The other tags `WAITING` .. `FLAGGED` are not mutually exclusive and
multiple tags can appear on a single task. Some of those tags are
created by todo state change triggers. The shortcut key is used to
add or remove the tag using `C-c C-q` or to apply the task for
filtering on the agenda.&lt;/p>
&lt;p>
I have both `FARM` and `@farm` tags. `FARM` is set by a `FILETAGS`
entry and just gives me a way to filter anything farm related. The
`@farm` tag signifies that the task as to be done &lt;span style="text-decoration: underline;">at the farm&lt;/span>. If I
have to call someone about something that would have a `FARM` tag but
I can do that at home on my lunch break. I don&amp;amp;rsquo;t physically have to
be at the farm to make the call.&lt;/p>
&lt;p>
; Tags with fast selection keys
(setq org-tag-alist (quote ((:startgroup)
(&amp;#34;@errand&amp;#34; . ?e)
(&amp;#34;@office&amp;#34; . ?o)
(&amp;#34;@home&amp;#34; . ?H)
(&amp;#34;@farm&amp;#34; . ?f)
(:endgroup)
(&amp;#34;WAITING&amp;#34; . ?w)
(&amp;#34;HOLD&amp;#34; . ?h)
(&amp;#34;PERSONAL&amp;#34; . ?P)
(&amp;#34;WORK&amp;#34; . ?W)
(&amp;#34;FARM&amp;#34; . ?F)
(&amp;#34;ORG&amp;#34; . ?O)
(&amp;#34;NORANG&amp;#34; . ?N)
(&amp;#34;crypt&amp;#34; . ?E)
(&amp;#34;NOTE&amp;#34; . ?n)
(&amp;#34;CANCELLED&amp;#34; . ?c)
(&amp;#34;FLAGGED&amp;#34; . ??))))&lt;/p>
&lt;p>
; Allow setting single tags without the menu
(setq org-fast-tag-selection-single-key (quote expert))&lt;/p>
&lt;p>
; For tag searches ignore tasks with scheduled and deadline dates
(setq org-agenda-tags-todo-honor-ignore-options t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;FileTags&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Filetags&lt;/p>
&lt;p>
Filetags are a convenient way to apply one or more tags to all of the
headings in a file.&lt;/p>
&lt;p>
Filetags look like this:&lt;/p>
&lt;p>
I have the following `#+FILETAGS:` entries in my org-mode files:&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TaggingNonWorkFiles&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Non-work related org-mode files&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;File&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Tags&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;todo.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;PERSONAL&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;gsoc2009.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;GSOC PERSONAL&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;git.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;GIT WORK&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;org.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ORG WORK&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;mark.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;MARK PERSONAL&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;farm.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;FARM PERSONAL&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TaggingWorkFiles&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Work related org-mode files&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;File&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Tags&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;norang.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;NORANG @office&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC @office&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;XYZ.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;XYZ @office&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC-DEF.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC DEF @office&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC-KKK.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;ABC KKK @office&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;YYY.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;YYY @office&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;RefileTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Refile tasks&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;File&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Tags&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;refile.org&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;REFILE&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;StateTriggerTags&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## State Trigger Tags&lt;/p>
&lt;p>
The following tags are automatically added or removed by todo state
triggers described previously in [ToDo state triggers](#ToDoStateTriggers)&lt;/p>
&lt;ul>
&lt;li>`WAITING`&lt;/li>
&lt;li>`CANCELLED`&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;a id=&amp;#34;HandlingNotes&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Notes are little gems of knowledge that you come across during your
day. They are just like tasks except there is nothing to do (except
learn and memorize the gem of knowledge). Unfortunately there are way
too many gems to remember and my head explodes just thinking about it.&lt;/p>
&lt;p>
org-mode to the rescue!&lt;/p>
&lt;p>
Often I&amp;amp;rsquo;ll find some cool feature or thing I want to remember while
reading the org-mode and git mailing lists in Gnus. To create a note
I use my note capture template `C-c c n`, type a heading for the note
and `C-c C-c` to save it. The only other thing to do is to refile it
(later) to the appropriate project file.&lt;/p>
&lt;p>
I have an agenda view just to find notes. Notes are refiled to an
appropriate project file and task. If there is no specific task it
belongs to it goes to the catchall `* Notes` task. I generally have a
catchall notes task in every project file. Notes are created with a
`NOTE` tag already applied by the capture template so I&amp;amp;rsquo;m free to
refile the note anywhere. As long as the note is in a project file
that contributes to my agenda (ie. in org-agenda-files) then I can
find the note back easily with my notes agenda view by hitting the key
combination `F12 N`. I&amp;amp;rsquo;m free to limit the agenda view of notes using
standard agenda tag filtering.&lt;/p>
&lt;p>
Short notes with a meaningful headline are a great way to remember
technical details without the need to actually remember anything -
other than how to find them back when you need them using `F12 N`.&lt;/p>
&lt;p>
Notes that are project related and not generally useful can be
archived with the project and removed from the agenda when the project
is removed.&lt;/p>
&lt;p>
So my org notes go in org.org and my git notes go in git.org both
under the `* Notes` task. I&amp;amp;rsquo;ll forever be able to find those. A note
about some work project detail I want to remember with the project is
filed to the project task under the appropriate work org-mode file and
eventually gets removed from the agenda when the project is complete
and archived.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HandlinePhoneCalls&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Phone calls are interruptions and I use capture mode to deal with
these (like all interruptions). Most of the heavy lifting for phone
calls is done by capture mode. I use a special capture template for
phone calls combined with a custom function that replaces text with
information from my `bbdb` addressbook database.&lt;/p>
&lt;p>
`C-c c p` starts a capture task normally and I&amp;amp;rsquo;m free to enter notes
from the call in the template immediately. The cursor starts in the
template normally where the name of the caller would be inserted. I
can use a `bbdb` lookup function to insert the name with `f9-p` or I
can just type in whatever is appropriate. If a `bbdb` entry needs to
be created for the caller I can do that and replace the caller details
with `f9-p` anytime that is convenient for me. I found that
automatically calling the bbdb lookup function would interrupt my
workflow during the call in cases where the information about the
caller was not readily available. Sometimes I want to make notes first
and get the caller details later during the call.&lt;/p>
&lt;p>
The phone call capture template starts the clock as soon as the phone
rings and I&amp;amp;rsquo;m free to lookup and replace the caller in bbdb anytime
during or after the call. Capture mode starts the clock using the
`:clock-in t` setting in the template.&lt;/p>
&lt;p>
When the phone call ends I simple do `C-c C-c` to close the capture
buffer and stop the clock. If I have to close it early and look up
other information during the call I just do `C-c C-c F9-SPC` to close
the capture buffer (which stops the clock) and then immediately switch
back to the last clocked item to continue the clock in the phone call
task. When the phone call ends I clock out which normally clocks in
my default task again (if any).&lt;/p>
&lt;p>
Here is my set up for phone calls. I would like to thank Gregory&lt;/p>
&lt;ol>
&lt;li>Grubbs for the original bbdb lookup functions which this version&lt;/li>
&lt;/ol>
&lt;p>is based on.&lt;/p>
&lt;p>
Below is the partial capture template showing the phone call template
followed by the phone-call related lookup functions.&lt;/p>
&lt;p>
;; Capture templates for: TODO tasks, Notes, appointments, phone calls, and org-protocol
(setq org-capture-templates
(quote (…
(&amp;#34;p&amp;#34; &amp;#34;Phone call&amp;#34; entry (file &amp;#34;~/git/org/refile.org&amp;#34;)
&amp;#34;* PHONE %? :PHONE:\n%U&amp;#34; :clock-in t :clock-resume t)
…)))&lt;/p>
&lt;p>
(require &amp;#39;bbdb)
(require &amp;#39;bbdb-com)&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; p&amp;#34;) &amp;#39;bh/phone-call)&lt;/p>
&lt;p>
;;
;; Phone capture template handling with BBDB lookup
;; Adapted from code by Gregory J. Grubbs
(defun bh/phone-call ()
&amp;#34;Return name and company info for caller from bbdb lookup&amp;#34;
(interactive)
(let* (name rec caller)
(setq name (completing-read &amp;#34;Who is calling? &amp;#34;
(bbdb-hashtable)
&amp;#39;bbdb-completion-predicate
&amp;#39;confirm))
(when (&amp;gt; (length name) 0)
; Something was supplied - look it up in bbdb
(setq rec
(or (first
(or (bbdb-search (bbdb-records) name nil nil)
(bbdb-search (bbdb-records) nil name nil)))
name)))&lt;/p>
&lt;p>
; Build the bbdb link if we have a bbdb record, otherwise just return the name
(setq caller (cond ((and rec (vectorp rec))
(let ((name (bbdb-record-name rec))
(company (bbdb-record-company rec)))
(concat &amp;#34;[[bbdb:&amp;#34;
name &amp;#34;][&amp;#34;
name &amp;#34;]]&amp;#34;
(when company
(concat &amp;#34; - &amp;#34; company)))))
(rec)
(t &amp;#34;NameOfCaller&amp;#34;)))
(insert caller)))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;GTD&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Most of my day is deadline/schedule driven.
I work off of the agenda first and then pick items from the todo lists as
outlined in [What do I work on next?](#WhatDoIWorkOnNext)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;GTDWeeklyReview&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Weekly Review Process&lt;/p>
&lt;p>
The first day of the week (usually Monday) I do my weekly review.
I keep a list like this one to remind me what needs to be done.&lt;/p>
&lt;p>
To keep the agenda fast I set&lt;/p>
&lt;p>
(setq org-agenda-span &amp;#39;day)&lt;/p>
&lt;p>
so only today&amp;amp;rsquo;s date is shown by default. I only need the weekly
view during my weekly review and this keeps my agenda generation
fast.&lt;/p>
&lt;p>
I have a recurring task which keeps my weekly review checklist
handy. This pops up as a reminder on Monday&amp;amp;rsquo;s. This week I&amp;amp;rsquo;m
doing my weekly review on Tuesday since Monday was a holiday.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>NEXT Weekly Review &lt;code class="statistic">[0/6]&lt;/code>
SCHEDULED: &amp;lt;2009-05-18 Mon ++1w&amp;gt;
:LOGBOOK:…
:PROPERTIES:…&lt;/p>
&lt;p>
What to review:&lt;/p>
&lt;ul>
&lt;li class="unchecked">Check follow-up folder&lt;/li>
&lt;li class="unchecked">Review weekly agenda &lt;code class="verbatim">F12 a w //&lt;/code>&lt;/li>
&lt;li class="unchecked">Check clocking data for past week &lt;code class="verbatim">v c&lt;/code>&lt;/li>
&lt;li class="unchecked">
&lt;p>Review clock report for past week &lt;code class="verbatim">R&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Check where we spent time (too much or too little) and rectify this week&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li class="unchecked">Look at entire agenda for today &lt;code class="verbatim">F12 SPC&lt;/code>&lt;/li>
&lt;li class="unchecked">Review projects &lt;code class="verbatim">F12 SPC //&lt;/code> and &lt;code class="verbatim">V&lt;/code> repeatedly to view each project&lt;/li>
&lt;li>
&lt;p>start work&lt;/p>
&lt;ul>
&lt;li>daily agenda first - knock off items&lt;/li>
&lt;li>then work on NEXT tasks&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The first item [ ] Check follow-up folder makes me pull out the paper
file I dump stuff into all week long - things I need to take care of
but are in no particular hurry to deal with. Stuff I get in the mail
etc. that I don&amp;amp;rsquo;t want to deal with now. I just toss it in my
`Follow-Up` folder in the filing cabinet and forget about it until the
weekly review.&lt;/p>
&lt;p>
I go through the folder and weed out anything that needs to be dealt
with. After that everything else is in `org-mode`. I tend to
schedule tasks onto the agenda for the coming week so that I don&amp;amp;rsquo;t
spend lots of time trying to find what needs to be worked on next.&lt;/p>
&lt;p>
This works for me. Your mileage may vary ;)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Projects&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Project definition and finding stuck projects&lt;/p>
&lt;p>
I&amp;amp;rsquo;m using a new lazy project definition to mark tasks as projects.
This requires zero effort from me. Any task with a subtask using a
todo keyword is a project. Period.&lt;/p>
&lt;p>
Projects are &amp;amp;rsquo;stuck&amp;amp;rsquo; if they have no subtask with a `NEXT` todo
keyword task defined.&lt;/p>
&lt;p>
The org-mode stuck projects agenda view lists projects that have no
`NEXT` task defined. Stuck projects show up on my block agenda and I
tend to assign a `NEXT` task so the list remains empty. This helps to
keep projects moving forward.&lt;/p>
&lt;p>
I disable the default org-mode stuck projects agenda view with the
following setting.&lt;/p>
&lt;p>
(setq org-stuck-projects (quote (&amp;#34;&amp;#34; nil nil &amp;#34;&amp;#34;)))&lt;/p>
&lt;p>
This prevents org-mode from trying to show incorrect data if I select
the default stuck project view with `F12 #` from the agenda menu. My
customized stuck projects view is part of my block agenda displayed
with `F12 SPC`.&lt;/p>
&lt;p>
Projects can have subprojects - and these subprojects can also be stuck.
Any project that is stuck shows up on the stuck projects list so I can
indicate or create a `NEXT` task to move that project forward.&lt;/p>
&lt;p>
In the following example `Stuck Project A` is stuck because it has no
subtask which is `NEXT`. `Project C` is not stuck because it has
`NEXT` tasks `SubTask G` and `Task I`. `Stuck Sub Project D` is stuck
because `SubTask E` is not `NEXT` and there are no other tasks
available in this project.&lt;/p>
&lt;ul>
&lt;li>Category&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>* TODO Stuck Project A
**&lt;/strong> TODO Task B
&lt;strong>* TODO Project C
**&lt;/strong> TODO Stuck Sub Project D
&lt;strong>**&lt;/strong> TODO SubTask E
&lt;strong>*&lt;/strong> TODO Sub Project F
&lt;strong>**&lt;/strong> NEXT SubTask G
&lt;strong>**&lt;/strong> TODO SubTask H
&lt;strong>*&lt;/strong> NEXT Task I
&lt;strong>*&lt;/strong> TODO Task J&lt;/p>
&lt;p>
All of the stuck projects and subprojects show up in the stuck
projects list and that is my indication to assign or create `NEXT`
tasks until the stuck projects list is empty. Occasionally some
subtask is `WAITING` for something and the project is stuck until that
condition is satisfied. In this case I leave it on the stuck project
list and just work on something else. This stuck project &amp;amp;rsquo;bugs&amp;amp;rsquo; me
regularly when I see it on the block agenda and this prompts me to
follow up on the thing that I&amp;amp;rsquo;m waiting for.&lt;/p>
&lt;p>
I have the following helper functions defined for projects which are
used by agenda views.&lt;/p>
&lt;p>
(defun bh/is-project-p ()
&amp;#34;Any task with a todo keyword subtask&amp;#34;
(save-restriction
(widen)
(let ((has-subtask)
(subtree-end (save-excursion (org-end-of-subtree t)))
(is-a-task (member (nth 2 (org-heading-components)) org-todo-keywords-1)))
(save-excursion
(forward-line 1)
(while (and (not has-subtask)
(&amp;lt; (point) subtree-end)
(re-search-forward &amp;#34;^\*+ &amp;#34; subtree-end t))
(when (member (org-get-todo-state) org-todo-keywords-1)
(setq has-subtask t))))
(and is-a-task has-subtask))))&lt;/p>
&lt;p>
(defun bh/is-project-subtree-p ()
&amp;#34;Any task with a todo keyword that is in a project subtree.
Callers of this function already widen the buffer view.&amp;#34;
(let ((task (save-excursion (org-back-to-heading &amp;#39;invisible-ok)
(point))))
(save-excursion
(bh/find-project-task)
(if (equal (point) task)
nil
t))))&lt;/p>
&lt;p>
(defun bh/is-task-p ()
&amp;#34;Any task with a todo keyword and no subtask&amp;#34;
(save-restriction
(widen)
(let ((has-subtask)
(subtree-end (save-excursion (org-end-of-subtree t)))
(is-a-task (member (nth 2 (org-heading-components)) org-todo-keywords-1)))
(save-excursion
(forward-line 1)
(while (and (not has-subtask)
(&amp;lt; (point) subtree-end)
(re-search-forward &amp;#34;^\*+ &amp;#34; subtree-end t))
(when (member (org-get-todo-state) org-todo-keywords-1)
(setq has-subtask t))))
(and is-a-task (not has-subtask)))))&lt;/p>
&lt;p>
(defun bh/is-subproject-p ()
&amp;#34;Any task which is a subtask of another project&amp;#34;
(let ((is-subproject)
(is-a-task (member (nth 2 (org-heading-components)) org-todo-keywords-1)))
(save-excursion
(while (and (not is-subproject) (org-up-heading-safe))
(when (member (nth 2 (org-heading-components)) org-todo-keywords-1)
(setq is-subproject t))))
(and is-a-task is-subproject)))&lt;/p>
&lt;p>
(defun bh/list-sublevels-for-projects-indented ()
&amp;#34;Set org-tags-match-list-sublevels so when restricted to a subtree we list all subtasks.
This is normally used by skipping functions where this variable is already local to the agenda.&amp;#34;
(if (marker-buffer org-agenda-restrict-begin)
(setq org-tags-match-list-sublevels &amp;#39;indented)
(setq org-tags-match-list-sublevels nil))
nil)&lt;/p>
&lt;p>
(defun bh/list-sublevels-for-projects ()
&amp;#34;Set org-tags-match-list-sublevels so when restricted to a subtree we list all subtasks.
This is normally used by skipping functions where this variable is already local to the agenda.&amp;#34;
(if (marker-buffer org-agenda-restrict-begin)
(setq org-tags-match-list-sublevels t)
(setq org-tags-match-list-sublevels nil))
nil)&lt;/p>
&lt;p>
(defvar bh/hide-scheduled-and-waiting-next-tasks t)&lt;/p>
&lt;p>
(defun bh/toggle-next-task-display ()
(interactive)
(setq bh/hide-scheduled-and-waiting-next-tasks (not bh/hide-scheduled-and-waiting-next-tasks))
(when (equal major-mode &amp;#39;org-agenda-mode)
(org-agenda-redo))
(message &amp;#34;%s WAITING and SCHEDULED NEXT Tasks&amp;#34; (if bh/hide-scheduled-and-waiting-next-tasks &amp;#34;Hide&amp;#34; &amp;#34;Show&amp;#34;)))&lt;/p>
&lt;p>
(defun bh/skip-stuck-projects ()
&amp;#34;Skip trees that are not stuck projects&amp;#34;
(save-restriction
(widen)
(let ((next-headline (save-excursion (or (outline-next-heading) (point-max)))))
(if (bh/is-project-p)
(let* ((subtree-end (save-excursion (org-end-of-subtree t)))
(has-next ))
(save-excursion
(forward-line 1)
(while (and (not has-next) (&amp;lt; (point) subtree-end) (re-search-forward &amp;#34;^\\*+ NEXT &amp;#34; subtree-end t))
(unless (member &amp;#34;WAITING&amp;#34; (org-get-tags-at))
(setq has-next t))))
(if has-next
nil
next-headline)) ; a stuck project, has subtasks but no next task
nil))))&lt;/p>
&lt;p>
(defun bh/skip-non-stuck-projects ()
&amp;#34;Skip trees that are not stuck projects&amp;#34;
;; (bh/list-sublevels-for-projects-indented)
(save-restriction
(widen)
(let ((next-headline (save-excursion (or (outline-next-heading) (point-max)))))
(if (bh/is-project-p)
(let* ((subtree-end (save-excursion (org-end-of-subtree t)))
(has-next ))
(save-excursion
(forward-line 1)
(while (and (not has-next) (&amp;lt; (point) subtree-end) (re-search-forward &amp;#34;^\\*+ NEXT &amp;#34; subtree-end t))
(unless (member &amp;#34;WAITING&amp;#34; (org-get-tags-at))
(setq has-next t))))
(if has-next
next-headline
nil)) ; a stuck project, has subtasks but no next task
next-headline))))&lt;/p>
&lt;p>
(defun bh/skip-non-projects ()
&amp;#34;Skip trees that are not projects&amp;#34;
;; (bh/list-sublevels-for-projects-indented)
(if (save-excursion (bh/skip-non-stuck-projects))
(save-restriction
(widen)
(let ((subtree-end (save-excursion (org-end-of-subtree t))))
(cond
((bh/is-project-p)
nil)
((and (bh/is-project-subtree-p) (not (bh/is-task-p)))
nil)
(t
subtree-end))))
(save-excursion (org-end-of-subtree t))))&lt;/p>
&lt;p>
(defun bh/skip-non-tasks ()
&amp;#34;Show non-project tasks.
Skip project and sub-project tasks, habits, and project related tasks.&amp;#34;
(save-restriction
(widen)
(let ((next-headline (save-excursion (or (outline-next-heading) (point-max)))))
(cond
((bh/is-task-p)
nil)
(t
next-headline)))))&lt;/p>
&lt;p>
(defun bh/skip-project-trees-and-habits ()
&amp;#34;Skip trees that are projects&amp;#34;
(save-restriction
(widen)
(let ((subtree-end (save-excursion (org-end-of-subtree t))))
(cond
((bh/is-project-p)
subtree-end)
((org-is-habit-p)
subtree-end)
(t
nil)))))&lt;/p>
&lt;p>
(defun bh/skip-projects-and-habits-and-single-tasks ()
&amp;#34;Skip trees that are projects, tasks that are habits, single non-project tasks&amp;#34;
(save-restriction
(widen)
(let ((next-headline (save-excursion (or (outline-next-heading) (point-max)))))
(cond
((org-is-habit-p)
next-headline)
((and bh/hide-scheduled-and-waiting-next-tasks
(member &amp;#34;WAITING&amp;#34; (org-get-tags-at)))
next-headline)
((bh/is-project-p)
next-headline)
((and (bh/is-task-p) (not (bh/is-project-subtree-p)))
next-headline)
(t
nil)))))&lt;/p>
&lt;p>
(defun bh/skip-project-tasks-maybe ()
&amp;#34;Show tasks related to the current restriction.
When restricted to a project, skip project and sub project tasks, habits, NEXT tasks, and loose tasks.
When not restricted, skip project and sub-project tasks, habits, and project related tasks.&amp;#34;
(save-restriction
(widen)
(let* ((subtree-end (save-excursion (org-end-of-subtree t)))
(next-headline (save-excursion (or (outline-next-heading) (point-max))))
(limit-to-project (marker-buffer org-agenda-restrict-begin)))
(cond
((bh/is-project-p)
next-headline)
((org-is-habit-p)
subtree-end)
((and (not limit-to-project)
(bh/is-project-subtree-p))
subtree-end)
((and limit-to-project
(bh/is-project-subtree-p)
(member (org-get-todo-state) (list &amp;#34;NEXT&amp;#34;)))
subtree-end)
(t
nil)))))&lt;/p>
&lt;p>
(defun bh/skip-project-tasks ()
&amp;#34;Show non-project tasks.
Skip project and sub-project tasks, habits, and project related tasks.&amp;#34;
(save-restriction
(widen)
(let* ((subtree-end (save-excursion (org-end-of-subtree t))))
(cond
((bh/is-project-p)
subtree-end)
((org-is-habit-p)
subtree-end)
((bh/is-project-subtree-p)
subtree-end)
(t
nil)))))&lt;/p>
&lt;p>
(defun bh/skip-non-project-tasks ()
&amp;#34;Show project tasks.
Skip project and sub-project tasks, habits, and loose non-project tasks.&amp;#34;
(save-restriction
(widen)
(let* ((subtree-end (save-excursion (org-end-of-subtree t)))
(next-headline (save-excursion (or (outline-next-heading) (point-max)))))
(cond
((bh/is-project-p)
next-headline)
((org-is-habit-p)
subtree-end)
((and (bh/is-project-subtree-p)
(member (org-get-todo-state) (list &amp;#34;NEXT&amp;#34;)))
subtree-end)
((not (bh/is-project-subtree-p))
subtree-end)
(t
nil)))))&lt;/p>
&lt;p>
(defun bh/skip-projects-and-habits ()
&amp;#34;Skip trees that are projects and tasks that are habits&amp;#34;
(save-restriction
(widen)
(let ((subtree-end (save-excursion (org-end-of-subtree t))))
(cond
((bh/is-project-p)
subtree-end)
((org-is-habit-p)
subtree-end)
(t
nil)))))&lt;/p>
&lt;p>
(defun bh/skip-non-subprojects ()
&amp;#34;Skip trees that are not projects&amp;#34;
(let ((next-headline (save-excursion (outline-next-heading))))
(if (bh/is-subproject-p)
nil
next-headline)))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Archiving&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ArchivingSubtrees&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Archiving Subtrees&lt;/p>
&lt;p>
My archiving procedure has changed. I used to move entire subtrees to
a separate archive file for the project. Task subtrees in `FILE.org`
get archived to `FILE.org_archive` using the `a y` command in the
agenda.&lt;/p>
&lt;p>
I still archive to the same archive file as before but now I archive
any done state todo task that is old enough to archive. Tasks to
archive are listed automatically at the end of my block agenda and
these are guaranteed to be old enough that I&amp;amp;rsquo;ve already billed any
time associated with these tasks. This cleans up my project trees and
removes the old tasks that are no longer interesting. The archived
tasks get extra property data created during the archive procedure so
that it is possible to reconstruct exactly where the archived entry
came from in the rare case where you want to unarchive something.&lt;/p>
&lt;p>
My archive files are huge but so far I haven&amp;amp;rsquo;t found a need to split
them by year (or decade) :)&lt;/p>
&lt;p>
Archivable tasks show up in the last section of my block agenda when a
new month starts. Any tasks that are done but have no timestamps this
month or last month (ie. they are over 30 days old) are available to
archive. Timestamps include closed dates, notes, clock data, etc - any
active or inactive timestamp in the task.&lt;/p>
&lt;p>
Archiving is trivial. Just mark all of the entries in the block agenda
using the `m` key and then archive them all to the appropriate place
with `B $`. This normally takes less than 5 minutes once a month.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ArchiveSetup&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Archive Setup&lt;/p>
&lt;p>
I no longer use an `ARCHIVE` property in my subtrees. Tasks can just
archive normally to the `Archived Tasks` heading in the archive file.&lt;/p>
&lt;p>
The following setting ensures that task states are untouched when they
are archived. This makes it possible to archive tasks that are not
marked `DONE`. By default tasks are archived under the heading `* Archived Tasks` in the archive file.&lt;/p>
&lt;p>
This archiving function does not keep your project trees intact. It
archives done state tasks after they are old enough to they are
removed from the main org file. It should be possible to reconstruct
the original tree from the archive detail properties but I&amp;amp;rsquo;ve never
needed to do this yet. The archived detail is very useful the few
times a year I actually need to look for some archived data but most
of the time I just move it out of the way and keep it for historical
purposes.&lt;/p>
&lt;p>
(setq org-archive-mark-done nil)
(setq org-archive-location &amp;#34;%s_archive::* Archived Tasks&amp;#34;)&lt;/p>
&lt;p>
(defun bh/skip-non-archivable-tasks ()
&amp;#34;Skip trees that are not available for archiving&amp;#34;
(save-restriction
(widen)
;; Consider only tasks with done todo headings as archivable candidates
(let ((next-headline (save-excursion (or (outline-next-heading) (point-max))))
(subtree-end (save-excursion (org-end-of-subtree t))))
(if (member (org-get-todo-state) org-todo-keywords-1)
(if (member (org-get-todo-state) org-done-keywords)
(let* ((daynr (string-to-int (format-time-string &amp;#34;%d&amp;#34; (current-time))))
(a-month-ago (* 60 60 24 (+ daynr 1)))
(last-month (format-time-string &amp;#34;%Y-%m-&amp;#34; (time-subtract (current-time) (seconds-to-time a-month-ago))))
(this-month (format-time-string &amp;#34;%Y-%m-&amp;#34; (current-time)))
(subtree-is-current (save-excursion
(forward-line 1)
(and (&amp;lt; (point) subtree-end)
(re-search-forward (concat last-month &amp;#34;\\|&amp;#34; this-month) subtree-end t)))))
(if subtree-is-current
subtree-end ; Has a date in this month or last month, skip it
nil)) ; available to archive
(or subtree-end (point-max)))
next-headline))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ArchiveTagHidesInfo&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Archive Tag - Hiding Information&lt;/p>
&lt;p>
The only time I set the ARCHIVE tag on a task is to prevent it from
opening by default because it has tons of information I don&amp;amp;rsquo;t really
need to look at on a regular basis. I can open the task with C-TAB if
I need to see the gory details (like a huge table of data related to
the task) but normally I don&amp;amp;rsquo;t need that information displayed.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;WhenToArchive&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## When to Archive&lt;/p>
&lt;p>
Archiving monthly works well for me. I keep completed tasks around
for at least 30 days before archiving them. This keeps current
clocking information for the last 30 days out of the archives. This
keeps my files that contribute to the agenda fairly current (this
month, and last month, and anything that is unfinished). I only
rarely visit tasks in the archive when I need to pull up ancient
history for something.&lt;/p>
&lt;p>
Archiving keeps my main working files clutter-free. If I ever need
the detail for the archived tasks they are available in the
appropriate archive file.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Publishing&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
I don&amp;amp;rsquo;t do a lot of publishing for other people but I do keep a set of
private client system documentation online. Most of this
documentation is a collection of notes exported to HTML.&lt;/p>
&lt;p>
Everything at &amp;lt;&lt;a href="http://doc.norang.ca/">http://doc.norang.ca/&lt;/a>&amp;gt; is generated by publishing
org-files. This includes the index pages on this site.&lt;/p>
&lt;p>
Org-mode can export to a variety of publishing formats including (but not limited to)&lt;/p>
&lt;ul>
&lt;li>ASCII
(plain text - but not the original org-mode file)&lt;/li>
&lt;li>HTML&lt;/li>
&lt;li>LaTeX&lt;/li>
&lt;li>Docbook
which enables getting to lots of other formats like ODF, XML, etc&lt;/li>
&lt;li>PDF
via LaTeX or Docbook&lt;/li>
&lt;li>iCal&lt;/li>
&lt;/ul>
&lt;p>I haven&amp;amp;rsquo;t begun the scratch the surface of what org-mode is capable of
doing. My main use case for org-mode publishing is just to create
HTML documents for viewing online conveniently. Someday I&amp;amp;rsquo;ll get time
to try out the other formats when I need them for something.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;orgf6dd355&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## New Exporter Setup&lt;/p>
&lt;p>
The new exporter created by Nicolas Goaziou was introduced in org 8.0.&lt;/p>
&lt;p>
I have the following setup for the exporters I use.&lt;/p>
&lt;p>
Alphabetical listing options need to be set before the exporters are
loaded for filling to work correctly.&lt;/p>
&lt;p>
(setq org-alphabetical-lists t)&lt;/p>
&lt;p>
;; Explicitly load required exporters
(require &amp;#39;ox-html)
(require &amp;#39;ox-latex)
(require &amp;#39;ox-ascii)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;orgf428f2c&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Conversion from the old exporter to the new exporter&lt;/p>
&lt;p>
Here is the list of changes I made to move from the old exporter (pre
org 8.0) to the new exporter.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Explicitly require exporters&lt;/p>
&lt;ul>
&lt;li>Add `ox-html`&lt;/li>
&lt;li>Add `ox-latex`&lt;/li>
&lt;li>Add `ox-ascii`&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Rename variables&lt;/p>
&lt;ul>
&lt;li>`org-export-html-style-extra` to `org-html-head-extra`&lt;/li>
&lt;li>`org-export-html-validation-link` to `org-html-validation-link`&lt;/li>
&lt;li>`org-export-html-inline-images` to `org-html-inline-images`&lt;/li>
&lt;li>`org-export-html-style-include-default` to `org-html-head-include-default-style`&lt;/li>
&lt;li>`org-export-html-xml-declaration` to `org-html-xml-declaration`&lt;/li>
&lt;li>`org-export-latex-listings` to `org-latex-listings`&lt;/li>
&lt;li>`org-export-html-style-include-scripts` to `org-html-head-include-scripts`&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Publishing changes&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Rename `:publishing-function`&lt;/p>
&lt;ul>
&lt;li>`org-publish-org-to-html` to `org-html-publish-to-html`&lt;/li>
&lt;li>`org-publish-org-to-org` to `org-org-publish-to-org`&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Change `:style` to `:html-head`&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Change `bh/is-late-deadline` to handle modified deadline string in agenda&lt;/li>
&lt;li>Reverse agenda sorting for late deadlines
These are no longer reported with negative values on the agenda&lt;/li>
&lt;li>Add a blank line after my inactive timestamps following headings to
prevent them from being exported.&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;a id=&amp;#34;OrgBabel&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Org-babel Setup&lt;/p>
&lt;p>
Org-babel makes it easy to generate decent graphics using external
packages like ditaa, graphviz, PlantUML, and others.&lt;/p>
&lt;p>
The setup is really easy. `ditaa` is provided with the org-mode
source. You&amp;amp;rsquo;ll have to install the `graphviz` and `PlantUML` packages
on your system.&lt;/p>
&lt;p>
(setq org-ditaa-jar-path &amp;#34;~/git/org-mode/contrib/scripts/ditaa.jar&amp;#34;)
(setq org-plantuml-jar-path &amp;#34;~/java/plantuml.jar&amp;#34;)&lt;/p>
&lt;p>
(add-hook &amp;#39;org-babel-after-execute-hook &amp;#39;bh/display-inline-images &amp;#39;append)&lt;/p>
&lt;p>
; Make babel results blocks lowercase
(setq org-babel-results-keyword &amp;#34;results&amp;#34;)&lt;/p>
&lt;p>
(defun bh/display-inline-images ()
(condition-case nil
(org-display-inline-images)
(error nil)))&lt;/p>
&lt;p>
(org-babel-do-load-languages
(quote org-babel-load-languages)
(quote ((emacs-lisp . t)
(dot . t)
(ditaa . t)
(R . t)
(python . t)
(ruby . t)
(gnuplot . t)
(clojure . t)
(sh . t)
(ledger . t)
(org . t)
(plantuml . t)
(latex . t))))&lt;/p>
&lt;p>
; Do not prompt to confirm evaluation
; This may be dangerous - make sure you understand the consequences
; of setting this – see the docstring for details
(setq org-confirm-babel-evaluate nil)&lt;/p>
&lt;p>
; Use fundamental mode when editing plantuml blocks with C-c &amp;#39;
(add-to-list &amp;#39;org-src-lang-modes (quote (&amp;#34;plantuml&amp;#34; . fundamental)))&lt;/p>
&lt;p>
Now you just create a `begin-src` block for the appropriate tool, edit
the text, and build the pictures with `C-c C-c`. After evaluating the
block results are displayed. You can toggle display of inline images
with `C-c C-x C-v`&lt;/p>
&lt;p>
I disable startup with inline images because when I access my
org-files from an SSH session without X this breaks (say from my
Android phone) it fails when trying to display the images on a non-X
session. It&amp;amp;rsquo;s much more important for me to be able to access my
org files from my Android phone remotely than it is to see images on
startup.&lt;/p>
&lt;p>
;; Don&amp;#39;t enable this because it breaks access to emacs from my Android phone
(setq org-startup-with-inline-images nil)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;playingwithditaa&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Playing with ditaa&lt;/p>
&lt;p>
[ditaa](&lt;a href="http://ditaa.sourceforge.net/)">http://ditaa.sourceforge.net/)&lt;/a> is a great tool for quickly generating graphics to convey ideas
and `ditaa` is distributed with org-mode! All of the graphics in this
document are automatically generated by org-mode using plain text
source.&lt;/p>
&lt;p>
Artist mode makes it easy to create boxes and lines for ditaa
graphics.&lt;/p>
&lt;p>
The source for a ditaa graphic looks like this in org-mode:&lt;/p>
&lt;div class="src src-ditaa">
&lt;pre tabindex="0">&lt;code class="language-ditaa" data-lang="ditaa"> &amp;lt;context of ditaa source goes here&amp;gt;&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
Here&amp;amp;rsquo;s an example without the `#+begin_src` and `#+end_src` lines.&lt;/p>
&lt;p>
&lt;del>———–&lt;/del> &lt;del>———&lt;/del>&lt;/p>
&lt;table>
&lt;tbody>
&lt;tr>
&lt;td>PLC&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Network &lt;del>&amp;lt;——&amp;gt;&lt;/del> PLC &lt;del>&amp;lt;—=———&lt;/del>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cRED&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td>c707&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;del>———–&lt;/del> &lt;del>—-&lt;/del>—-+ |
^ |&lt;/p>
&lt;table>
&lt;tbody>
&lt;tr>
&lt;td>+—————-&lt;/td>
&lt;td>—————–+&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>v v v v
&lt;del>———-&lt;/del> &lt;del>—-&lt;/del>–&lt;del>–&lt;/del> &lt;del>——-&lt;/del>—+ &lt;del>—–&lt;/del>—–+ Windows clients&lt;/p>
&lt;table>
&lt;tbody>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;del>—-&lt;/del> &lt;del>—-&lt;/del>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Database &lt;del>&amp;lt;—–&amp;gt;&lt;/del> Shared &lt;del>&amp;lt;—-&amp;gt;&lt;/del> Executive &lt;del>&amp;lt;-=–&amp;gt;&lt;/del> Operator +&amp;lt;—-&amp;gt;&lt;/td>
&lt;td>cYEL&lt;/td>
&lt;td>. . .&lt;/td>
&lt;td>cYEL&lt;/td>
&lt;td>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>c707&lt;/td>
&lt;td>&lt;/td>
&lt;td>Memory&lt;/td>
&lt;td>&lt;/td>
&lt;td>c707&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td>Server&lt;/td>
&lt;td>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;del>–&lt;/del>—-&lt;del>–&lt;/del> |{d} cGRE | &lt;del>——&lt;/del>—-+ | c707 | &lt;del>—-&lt;/del> &lt;del>—-&lt;/del>
^ ^ &lt;del>———-&lt;/del> ^ &lt;del>——-&lt;/del>—+&lt;/p>
&lt;table>
&lt;tbody>
&lt;tr>
&lt;td>&lt;del>——–=————————–&lt;/del>&lt;/td>
&lt;td class="align-right">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>v
&lt;del>——–&lt;/del>——–+&lt;/p>
&lt;table>
&lt;tbody>
&lt;tr>
&lt;td>Millwide System&lt;/td>
&lt;td>——– Data ———&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>cBLU&lt;/td>
&lt;td>–&lt;code class="verbatim">----- Signals ---&lt;/code>–&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;del>—————–&lt;/del>&lt;/p>
&lt;p>
![img](communication.png)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Graphviz&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Playing with graphviz&lt;/p>
&lt;p>
[Graphviz](&lt;a href="http://www.graphviz.org/)">http://www.graphviz.org/)&lt;/a> is another great tool for creating graphics in your documents.&lt;/p>
&lt;p>
The source for a graphviz graphic looks like this in org-mode:&lt;/p>
&lt;div class="src src-dot">
&lt;pre tabindex="0">&lt;code class="language-dot" data-lang="dot"> &amp;lt;context of graphviz source goes here&amp;gt;&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
digraph G {
size=&amp;#34;8,6&amp;#34;
ratio=expand
edge [dir=both]
plcnet [shape=box, label=&amp;#34;PLC Network&amp;#34;]
subgraph cluster_wrapline {
label=&amp;#34;Wrapline Control System&amp;#34;
color=purple
subgraph {
rank=same
exec
sharedmem [style=filled, fillcolor=lightgrey, shape=box]
}
edge[style=dotted, dir=none]
exec -&amp;gt; opserver
exec -&amp;gt; db
plc -&amp;gt; exec
edge [style=line, dir=both]
exec -&amp;gt; sharedmem
sharedmem -&amp;gt; db
plc -&amp;gt; sharedmem
sharedmem -&amp;gt; opserver
}
plcnet -&amp;gt; plc [constraint=false]
millwide [shape=box, label=&amp;#34;Millwide System&amp;#34;]
db -&amp;gt; millwide&lt;/p>
&lt;p>
subgraph cluster_opclients {
color=blue
label=&amp;#34;Operator Clients&amp;#34;
rankdir=LR
labelloc=b
node[label=client]
opserver -&amp;gt; client1
opserver -&amp;gt; client2
opserver -&amp;gt; client3
}
}&lt;/p>
&lt;p>
![img](gv01.png)&lt;/p>
&lt;p>
The `-Kdot` is optional (defaults to `dot`) but you can substitute other graphviz
types instead here (ie. `twopi`, `neato`, `circo`, etc).&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PlantUML&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Playing with PlantUML&lt;/p>
&lt;p>
I have just started using [PlantUML](&lt;a href="http://plantuml.sourceforge.net/)">http://plantuml.sourceforge.net/)&lt;/a> which is built on top of [Graphviz](&lt;a href="http://www.graphviz.org/).">http://www.graphviz.org/).&lt;/a>
I&amp;amp;rsquo;m still experimenting with this but so far I like it a lot. The
todo state change diagrams in this document are created with PlantUML.&lt;/p>
&lt;p>
The source for a PlantUML graphic looks like this in org-mode:&lt;/p>
&lt;div class="src src-plantuml">
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml"> &amp;lt;context of PlantUML source goes here&amp;gt;&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
&amp;lt;a id=&amp;#34;PlantUMLSequence&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Sequence Diagram&lt;/p>
&lt;p>
title Example Sequence Diagram
activate Client
Client -&amp;gt; Server: Session Initiation
note right: Client requests new session
activate Server
Client &amp;lt;– Server: Authorization Request
note left: Server requires authentication
Client -&amp;gt; Server: Authorization Response
note right: Client provides authentication details
Server –&amp;gt; Client: Session Token
note left: Session established
deactivate Server
Client -&amp;gt; Client: Saves token
deactivate Client&lt;/p>
&lt;p>
![img](sequence.png)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PlantUMLActivity&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Activity Diagram&lt;/p>
&lt;p>
title Example Activity Diagram
note right: Example Function
(*)–&amp;gt; &amp;#34;Step 1&amp;#34;
–&amp;gt; &amp;#34;Step 2&amp;#34;
-&amp;gt; &amp;#34;Step 3&amp;#34;
–&amp;gt; &amp;#34;Step 4&amp;#34;
–&amp;gt; &lt;code class="verbatim">=&lt;/code> STARTLOOP &lt;code class="verbatim">=&lt;/code>
note top: For each element in the array
if &amp;#34;Are we done?&amp;#34; then
-&amp;gt; [no] &amp;#34;Do this&amp;#34;
-&amp;gt; &amp;#34;Do that&amp;#34;
note bottom: Important note\ngoes here
-up-&amp;gt; &amp;#34;Increment counters&amp;#34;
–&amp;gt; &lt;code class="verbatim">=&lt;/code> STARTLOOP &lt;code class="verbatim">=&lt;/code>
else
–&amp;gt; [yes] &lt;code class="verbatim">=&lt;/code> ENDLOOP &lt;code class="verbatim">=&lt;/code>
endif
–&amp;gt; &amp;#34;Last Step&amp;#34;
–&amp;gt; (*)&lt;/p>
&lt;p>
![img](activity.png)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PlantUMLUseCase&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Usecase Diagram&lt;/p>
&lt;p>
LabUser –&amp;gt; (Runs Simulation)
LabUser –&amp;gt; (Analyses Results)&lt;/p>
&lt;p>
![img](usecase.png)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PlantUMLObject&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Object Diagram&lt;/p>
&lt;p>
Object1 &amp;lt;|– Object2
Object1: someVar
Object1: execute()
Object2: getState()
Object2: setState()
Object2: state&lt;/p>
&lt;p>
![img](object.png)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PlantUMLState&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### State Diagram&lt;/p>
&lt;p>
[*] –&amp;gt; Start
Start -&amp;gt; State2
State2 -&amp;gt; State3
note right of State3: Notes can be\nattached to states
State2 –&amp;gt; State4
State4 -&amp;gt; Finish
State3 –&amp;gt; Finish
Finish –&amp;gt; [*]&lt;/p>
&lt;p>
![img](plantuml_example_states.png)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PublishingSingleFiles&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Publishing Single Files&lt;/p>
&lt;p>
Org-mode exports the current file to one of the standard formats by
invoking an export function. The standard key binding for this is
`C-c C-e` followed by the key for the type of export you want.&lt;/p>
&lt;p>
This works great for single files or parts of files &amp;amp;#x2013; if you narrow
the buffer to only part of the org-mode file then you only get the
narrowed detail in the export.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PublishingProjects&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Publishing Projects&lt;/p>
&lt;p>
I mainly use publishing for publishing multiple files or projects. I
don&amp;amp;rsquo;t want to remember where the created export file needs to move to
and org-mode projects are a great solution to this.&lt;/p>
&lt;p>
The &amp;lt;&lt;a href="http://doc.norang.ca">http://doc.norang.ca&lt;/a>&amp;gt; website (and a bunch of other files that are
not publicly available) are all created by editing org-mode files and
publishing the project the file is contained in. This is great for
people like me who want to figure out the details once and forget
about it. I love stuff that Just Works(tm).&lt;/p>
&lt;p>
I have 5 main projects I use org-mode publishing for currently:&lt;/p>
&lt;ul>
&lt;li>norang (website)&lt;/li>
&lt;li>doc.norang.ca (website, published documents)&lt;/li>
&lt;li>doc.norang.ca/private (website, non-published documents)&lt;/li>
&lt;li>www.norang.ca/tmp (temporary publishing site for testing org-mode stuff)&lt;/li>
&lt;li>org files (which are selectively included by other websites)&lt;/li>
&lt;/ul>
&lt;p>Here&amp;amp;rsquo;s my publishing setup:&lt;/p>
&lt;p>
; experimenting with docbook exports - not finished
(setq org-export-docbook-xsl-fo-proc-command &amp;#34;fop %s %s&amp;#34;)
(setq org-export-docbook-xslt-proc-command &amp;#34;xsltproc –output %s /usr/share/xml/docbook/stylesheet/nwalsh/fo/docbook.xsl %s&amp;#34;)
;
; Inline images in HTML instead of producting links to the image
(setq org-html-inline-images t)
; Do not use sub or superscripts - I currently don&amp;#39;t need this functionality in my documents
(setq org-export-with-sub-superscripts nil)
; Use org.css from the norang website for export document stylesheets
(setq org-html-head-extra &amp;#34;&amp;lt;link rel=\&amp;#34;stylesheet\&amp;#34; href=\&amp;#34;&lt;a href="http://doc.norang.ca/org.css">http://doc.norang.ca/org.css&lt;/a>\&amp;#34; type=\&amp;#34;text/css\&amp;#34; /&amp;gt;&amp;#34;)
(setq org-html-head-include-default-style nil)
; Do not generate internal css formatting for HTML exports
(setq org-export-htmlize-output-type (quote css))
; Export with LaTeX fragments
(setq org-export-with-LaTeX-fragments t)
; Increase default number of headings to export
(setq org-export-headline-levels 6)&lt;/p>
&lt;p>
; List of projects
; norang - &lt;a href="http://www.norang.ca/">http://www.norang.ca/&lt;/a>
; doc - &lt;a href="http://doc.norang.ca/">http://doc.norang.ca/&lt;/a>
; org-mode-doc - &lt;a href="http://doc.norang.ca/org-mode.html">http://doc.norang.ca/org-mode.html&lt;/a> and associated files
; org - miscellaneous todo lists for publishing
(setq org-publish-project-alist
;
; &lt;a href="http://www.norang.ca/">http://www.norang.ca/&lt;/a> (norang website)
; norang-org are the org-files that generate the content
; norang-extra are images and css files that need to be included
; norang is the top-level project that gets published
(quote ((&amp;#34;norang-org&amp;#34;
:base-directory &amp;#34;~/git/www.norang.ca&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/www.norang.ca/htdocs&amp;#34;
:recursive t
:table-of-contents nil
:base-extension &amp;#34;org&amp;#34;
:publishing-function org-html-publish-to-html
:style-include-default nil
:section-numbers nil
:table-of-contents nil
:html-head &amp;#34;&amp;lt;link rel=\&amp;#34;stylesheet\&amp;#34; href=\&amp;#34;norang.css\&amp;#34; type=\&amp;#34;text/css\&amp;#34; /&amp;gt;&amp;#34;
:author-info nil
:creator-info nil)
(&amp;#34;norang-extra&amp;#34;
:base-directory &amp;#34;~/git/www.norang.ca/&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/www.norang.ca/htdocs&amp;#34;
:base-extension &amp;#34;css\\|pdf\\|png\\|jpg\\|gif&amp;#34;
:publishing-function org-publish-attachment
:recursive t
:author nil)
(&amp;#34;norang&amp;#34;
:components (&amp;#34;norang-org&amp;#34; &amp;#34;norang-extra&amp;#34;))
;
; &lt;a href="http://doc.norang.ca/">http://doc.norang.ca/&lt;/a> (norang website)
; doc-org are the org-files that generate the content
; doc-extra are images and css files that need to be included
; doc is the top-level project that gets published
(&amp;#34;doc-org&amp;#34;
:base-directory &amp;#34;~/git/doc.norang.ca/&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/doc.norang.ca/htdocs&amp;#34;
:recursive nil
:section-numbers nil
:table-of-contents nil
:base-extension &amp;#34;org&amp;#34;
:publishing-function (org-html-publish-to-html org-org-publish-to-org)
:style-include-default nil
:html-head &amp;#34;&amp;lt;link rel=\&amp;#34;stylesheet\&amp;#34; href=\&amp;#34;/org.css\&amp;#34; type=\&amp;#34;text/css\&amp;#34; /&amp;gt;&amp;#34;
:author-info nil
:creator-info nil)
(&amp;#34;doc-extra&amp;#34;
:base-directory &amp;#34;~/git/doc.norang.ca/&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/doc.norang.ca/htdocs&amp;#34;
:base-extension &amp;#34;css\\|pdf\\|png\\|jpg\\|gif&amp;#34;
:publishing-function org-publish-attachment
:recursive nil
:author nil)
(&amp;#34;doc&amp;#34;
:components (&amp;#34;doc-org&amp;#34; &amp;#34;doc-extra&amp;#34;))
(&amp;#34;doc-private-org&amp;#34;
:base-directory &amp;#34;~/git/doc.norang.ca/private&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/doc.norang.ca/htdocs/private&amp;#34;
:recursive nil
:section-numbers nil
:table-of-contents nil
:base-extension &amp;#34;org&amp;#34;
:publishing-function (org-html-publish-to-html org-org-publish-to-org)
:style-include-default nil
:html-head &amp;#34;&amp;lt;link rel=\&amp;#34;stylesheet\&amp;#34; href=\&amp;#34;/org.css\&amp;#34; type=\&amp;#34;text/css\&amp;#34; /&amp;gt;&amp;#34;
:auto-sitemap t
:sitemap-filename &amp;#34;index.html&amp;#34;
:sitemap-title &amp;#34;Norang Private Documents&amp;#34;
:sitemap-style &amp;#34;tree&amp;#34;
:author-info nil
:creator-info nil)
(&amp;#34;doc-private-extra&amp;#34;
:base-directory &amp;#34;~/git/doc.norang.ca/private&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/doc.norang.ca/htdocs/private&amp;#34;
:base-extension &amp;#34;css\\|pdf\\|png\\|jpg\\|gif&amp;#34;
:publishing-function org-publish-attachment
:recursive nil
:author nil)
(&amp;#34;doc-private&amp;#34;
:components (&amp;#34;doc-private-org&amp;#34; &amp;#34;doc-private-extra&amp;#34;))
;
; Miscellaneous pages for other websites
; org are the org-files that generate the content
(&amp;#34;org-org&amp;#34;
:base-directory &amp;#34;~/git/org/&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/org&amp;#34;
:recursive t
:section-numbers nil
:table-of-contents nil
:base-extension &amp;#34;org&amp;#34;
:publishing-function org-html-publish-to-html
:style-include-default nil
:html-head &amp;#34;&amp;lt;link rel=\&amp;#34;stylesheet\&amp;#34; href=\&amp;#34;/org.css\&amp;#34; type=\&amp;#34;text/css\&amp;#34; /&amp;gt;&amp;#34;
:author-info nil
:creator-info nil)
;
; &lt;a href="http://doc.norang.ca/">http://doc.norang.ca/&lt;/a> (norang website)
; org-mode-doc-org this document
; org-mode-doc-extra are images and css files that need to be included
; org-mode-doc is the top-level project that gets published
; This uses the same target directory as the &amp;#39;doc&amp;#39; project
(&amp;#34;org-mode-doc-org&amp;#34;
:base-directory &amp;#34;~/git/org-mode-doc/&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/doc.norang.ca/htdocs&amp;#34;
:recursive t
:section-numbers nil
:table-of-contents nil
:base-extension &amp;#34;org&amp;#34;
:publishing-function (org-html-publish-to-html)
:plain-source t
:htmlized-source t
:style-include-default nil
:html-head &amp;#34;&amp;lt;link rel=\&amp;#34;stylesheet\&amp;#34; href=\&amp;#34;/org.css\&amp;#34; type=\&amp;#34;text/css\&amp;#34; /&amp;gt;&amp;#34;
:author-info nil
:creator-info nil)
(&amp;#34;org-mode-doc-extra&amp;#34;
:base-directory &amp;#34;~/git/org-mode-doc/&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/doc.norang.ca/htdocs&amp;#34;
:base-extension &amp;#34;css\\|pdf\\|png\\|jpg\\|gif\\|org&amp;#34;
:publishing-function org-publish-attachment
:recursive t
:author nil)
(&amp;#34;org-mode-doc&amp;#34;
:components (&amp;#34;org-mode-doc-org&amp;#34; &amp;#34;org-mode-doc-extra&amp;#34;))
;
; &lt;a href="http://doc.norang.ca/">http://doc.norang.ca/&lt;/a> (norang website)
; org-mode-doc-org this document
; org-mode-doc-extra are images and css files that need to be included
; org-mode-doc is the top-level project that gets published
; This uses the same target directory as the &amp;#39;doc&amp;#39; project
(&amp;#34;tmp-org&amp;#34;
:base-directory &amp;#34;&lt;em>tmp/publish&lt;/em>&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/www.norang.ca/htdocs/tmp&amp;#34;
:recursive t
:section-numbers nil
:table-of-contents nil
:base-extension &amp;#34;org&amp;#34;
:publishing-function (org-html-publish-to-html org-org-publish-to-org)
:html-head &amp;#34;&amp;lt;link rel=\&amp;#34;stylesheet\&amp;#34; href=\&amp;#34;&lt;a href="http://doc.norang.ca/org.css">http://doc.norang.ca/org.css&lt;/a>\&amp;#34; type=\&amp;#34;text/css\&amp;#34; /&amp;gt;&amp;#34;
:plain-source t
:htmlized-source t
:style-include-default nil
:auto-sitemap t
:sitemap-filename &amp;#34;index.html&amp;#34;
:sitemap-title &amp;#34;Test Publishing Area&amp;#34;
:sitemap-style &amp;#34;tree&amp;#34;
:author-info t
:creator-info t)
(&amp;#34;tmp-extra&amp;#34;
:base-directory &amp;#34;&lt;em>tmp/publish&lt;/em>&amp;#34;
:publishing-directory &amp;#34;/ssh:www-data@www:~/www.norang.ca/htdocs/tmp&amp;#34;
:base-extension &amp;#34;css\\|pdf\\|png\\|jpg\\|gif&amp;#34;
:publishing-function org-publish-attachment
:recursive t
:author nil)
(&amp;#34;tmp&amp;#34;
:components (&amp;#34;tmp-org&amp;#34; &amp;#34;tmp-extra&amp;#34;)))))&lt;/p>
&lt;p>
; I&amp;#39;m lazy and don&amp;#39;t want to remember the name of the project to publish when I modify
; a file that is part of a project. So this function saves the file, and publishes
; the project that includes this file
;
; It&amp;#39;s bound to C-S-F12 so I just edit and hit C-S-F12 when I&amp;#39;m done and move on to the next thing
(defun bh/save-then-publish (&amp;amp;optional force)
(interactive &amp;#34;P&amp;#34;)
(save-buffer)
(org-save-all-org-buffers)
(let ((org-html-head-extra)
(org-html-validation-link &amp;#34;&amp;lt;a href=\&amp;#34;&lt;a href="http://validator.w3.org/check?uri=referer">http://validator.w3.org/check?uri=referer&lt;/a>\&amp;#34;&amp;gt;Validate XHTML 1.0&amp;lt;/a&amp;gt;&amp;#34;))
(org-publish-current-project force)))&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;C-s-&amp;lt;f12&amp;gt;&amp;#34;) &amp;#39;bh/save-then-publish)&lt;/p>
&lt;p>
The main projects are `norang`, `doc`, `doc-private`, `org-mode-doc`,
and `tmp`. These projects publish directly to the webserver directory
on a remote web server that serves the site. Publishing one of these
projects exports all modified pages, generates images, and copies the
resulting files to the webserver so that they are immediately
available for viewing.&lt;/p>
&lt;p>
The &amp;lt;&lt;a href="http://doc.norang.ca/">http://doc.norang.ca/&lt;/a>&amp;gt; site contains subdirectories with client and
private documentation that are restricted by using Apache Basic
authentication. I don&amp;amp;rsquo;t create links to these sites from the publicly
viewable pages. &amp;lt;&lt;a href="http://doc.norang.ca/someclient/">http://doc.norang.ca/someclient/&lt;/a>&amp;gt; would show the index
for any org files under `~/git/doc.norang.ca/someclient/` if that is
set up as a viewable website. I use most of the information myself
but give access to clients if they are interested in the
information/notes that I keep about their systems.&lt;/p>
&lt;p>
This works great for me - I know where my notes are and I can access
them from anywhere on the internet. I&amp;amp;rsquo;m also free to share notes with
other people by simply giving them the link to the appropriate site.&lt;/p>
&lt;p>
All I need to remember to do is edit the appropriate org file and
publish it with C-S-F12 &amp;amp;#x2013; not exactly hard :)&lt;/p>
&lt;p>
I added a temporary publishing site for testing exports and
validation. This is the `tmp` site which takes files from
`/tmp/publish` and exports those files to a website publishing
directory. This makes it easy to try new throw-away things on a live
server.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;MiscBabelExportSettings&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Miscellaneous Export Settings&lt;/p>
&lt;p>
This is a collection of export and publishing related settings that I
use.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;FontifyLatexListings&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Fontify Latex listings for source blocks&lt;/p>
&lt;p>
For export to latex I use the following setting to get fontified
listings from source blocks:&lt;/p>
&lt;p>
(setq org-latex-listings t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ExportHTMLWithoutXMLHeader&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Export HTML without XML header&lt;/p>
&lt;p>
I use the following setting to remove the xml header line for HTML
exports. This xml line was confusing Open Office when opening the
HTML to convert to ODT.&lt;/p>
&lt;p>
(setq org-html-xml-declaration (quote ((&amp;#34;html&amp;#34; . &amp;#34;&amp;#34;)
(&amp;#34;was-html&amp;#34; . &amp;#34;&amp;lt;?xml version=\&amp;#34;1.0\&amp;#34; encoding=\&amp;#34;%s\&amp;#34;?&amp;gt;&amp;#34;)
(&amp;#34;php&amp;#34; . &amp;#34;&amp;lt;?php echo \&amp;#34;&amp;lt;?xml version=\\\&amp;#34;1.0\\\&amp;#34; encoding=\\\&amp;#34;%s\\\&amp;#34; ?&amp;gt;\&amp;#34;; ?&amp;gt;&amp;#34;))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AllowVariableBindingForExport&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Allow binding variables on export without confirmation&lt;/p>
&lt;p>
The following setting allows #+BIND: variables to be set on export
without confirmation. In rare situations where I want to override
some org-mode variable for export this allows exporting the document
without a prompt.&lt;/p>
&lt;p>
(setq org-export-allow-BIND t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Reminders&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
I use appt for reminders. It&amp;amp;rsquo;s simple and unobtrusive &amp;amp;#x2013; putting
pending appointments in the status bar and beeping as 12, 9, 6, 3,
and 0 minutes before the appointment is due.&lt;/p>
&lt;p>
Everytime the agenda is displayed (and that&amp;amp;rsquo;s lots for me) the
appointment list is erased and rebuilt from the current agenda
details for today. This means everytime I reschedule something, add
or remove tasks that are time related the appointment list is
automatically updated the next time I look at the agenda.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ReminderSetup&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Reminder Setup&lt;/p>
&lt;p>
; Erase all reminders and rebuilt reminders for today from the agenda
(defun bh/org-agenda-to-appt ()
(interactive)
(setq appt-time-msg-list nil)
(org-agenda-to-appt))&lt;/p>
&lt;p>
; Rebuild the reminders everytime the agenda is displayed
(add-hook &amp;#39;org-finalize-agenda-hook &amp;#39;bh/org-agenda-to-appt &amp;#39;append)&lt;/p>
&lt;p>
; This is at the end of my .emacs - so appointments are set up when Emacs starts
(bh/org-agenda-to-appt)&lt;/p>
&lt;p>
; Activate appointments so we get notifications
(appt-activate t)&lt;/p>
&lt;p>
; If we leave Emacs running overnight - reset the appointments one minute after midnight
(run-at-time &amp;#34;24:01&amp;#34; nil &amp;#39;bh/org-agenda-to-appt)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ProductivityTools&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
This section is a miscellaneous collection of Emacs customizations that I use
with org-mode so that it Works-For-Me(tm).&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AbbrevMode&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Abbrev-mode and Skeletons&lt;/p>
&lt;p>
I use skeletons with abbrev-mode to quickly add preconfigured blocks to my
Emacs edit buffers.&lt;/p>
&lt;p>
I have blocks for creating:&lt;/p>
&lt;ul>
&lt;li>generic blocks in org-mode&lt;/li>
&lt;li>
&lt;p>plantuml blocks in org-mode&lt;/p>
&lt;ul>
&lt;li>plantuml activity diagram block in org-mode&lt;/li>
&lt;li>plantuml sequence diagram block in org-mode&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>graphviz dot blocks in org-mode&lt;/li>
&lt;li>ditaa blocks in org-mode&lt;/li>
&lt;li>elisp source blocks in org-mode&lt;/li>
&lt;/ul>
&lt;p>I still use `&amp;lt; e TAB` and `&amp;lt; s TAB` for creating example blocks and
simple shell script blocks that need no further parameters.&lt;/p>
&lt;p>
Here&amp;amp;rsquo;s my current setup for org-mode related skeletons. Each one
defines an abbrev-mode shortcut so I can type `splantumlRET` to create
a Plantuml block. This prompts for the filename (without extension) for
the generated image file.&lt;/p>
&lt;p>
At work I add a `:tangle` header to the skeleton and explicitly
include the `@startuml` and `@enduml` marker lines in the skeleton so
I can tangle the source file and share it with my colleagues. This
makes the tangled source useable in Notepad and the `PlantUML` jar
file running standalone.&lt;/p>
&lt;p>
I have put the `s` (src) prefix on the shortcuts to prevent
abbrev-mode from trying to expand `PlantUML` when I&amp;amp;rsquo;m typing it in a
sentence.&lt;/p>
&lt;p>
For convenience in activity diagrams I added `sif` and `sfor` and just
change the labels for the synchronization bars.&lt;/p>
&lt;p>
;; Enable abbrev-mode
(add-hook &amp;#39;org-mode-hook (lambda () (abbrev-mode 1)))&lt;/p>
&lt;p>
;; Skeletons
;;
;; sblk - Generic block #+begin_FOO .. #+end_FOO
(define-skeleton skel-org-block
&amp;#34;Insert an org block, querying for type.&amp;#34;
&amp;#34;Type: &amp;#34;
&amp;#34;#+begin_&amp;#34; str &amp;#34;\n&amp;#34;
_ - \n
&amp;#34;#+end_&amp;#34; str &amp;#34;\n&amp;#34;)&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;sblk&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block)&lt;/p>
&lt;p>
;; splantuml - PlantUML Source block
(define-skeleton skel-org-block-plantuml
&amp;#34;Insert a org plantuml block, querying for filename.&amp;#34;
&amp;#34;File (no extension): &amp;#34;
&amp;#34;#+begin_src plantuml :file &amp;#34; str &amp;#34;.png :cache yes\n&amp;#34;
_ - \n
&amp;#34;#+end_src\n&amp;#34;)&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;splantuml&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block-plantuml)&lt;/p>
&lt;p>
(define-skeleton skel-org-block-plantuml-activity
&amp;#34;Insert a org plantuml block, querying for filename.&amp;#34;
&amp;#34;File (no extension): &amp;#34;
&amp;#34;#+begin_src plantuml :file &amp;#34; str &amp;#34;-act.png :cache yes :tangle &amp;#34; str &amp;#34;-act.txt\n&amp;#34;
(bh/plantuml-reset-counters)
&amp;#34;@startuml\n&amp;#34;
&amp;#34;skinparam activity {\n&amp;#34;
&amp;#34;BackgroundColor&amp;lt;&amp;lt;New&amp;gt;&amp;gt; Cyan\n&amp;#34;
&amp;#34;}\n\n&amp;#34;
&amp;#34;title &amp;#34; str &amp;#34; - \n&amp;#34;
&amp;#34;note left: &amp;#34; str &amp;#34;\n&amp;#34;
&amp;#34;(&lt;strong>) –&amp;gt; \&amp;#34;&amp;#34; str &amp;#34;\&amp;#34;\n&amp;#34;
&amp;#34;–&amp;gt; (&lt;/strong>)\n&amp;#34;
_ - \n
&amp;#34;@enduml\n&amp;#34;
&amp;#34;#+end_src\n&amp;#34;)&lt;/p>
&lt;p>
(defvar bh/plantuml-if-count 0)&lt;/p>
&lt;p>
(defun bh/plantuml-if ()
(incf bh/plantuml-if-count)
(number-to-string bh/plantuml-if-count))&lt;/p>
&lt;p>
(defvar bh/plantuml-loop-count 0)&lt;/p>
&lt;p>
(defun bh/plantuml-loop ()
(incf bh/plantuml-loop-count)
(number-to-string bh/plantuml-loop-count))&lt;/p>
&lt;p>
(defun bh/plantuml-reset-counters ()
(setq bh/plantuml-if-count 0
bh/plantuml-loop-count 0)
&amp;#34;&amp;#34;)&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;sact&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block-plantuml-activity)&lt;/p>
&lt;p>
(define-skeleton skel-org-block-plantuml-activity-if
&amp;#34;Insert a org plantuml block activity if statement&amp;#34;
&amp;#34;&amp;#34;
&amp;#34;if \&amp;#34;\&amp;#34; then\n&amp;#34;
&amp;#34; -&amp;gt; [condition] ==IF&amp;#34; (setq ifn (bh/plantuml-if)) &amp;#34;==\n&amp;#34;
&amp;#34; –&amp;gt; ==IF&amp;#34; ifn &amp;#34;M1==\n&amp;#34;
&amp;#34; -left-&amp;gt; ==IF&amp;#34; ifn &amp;#34;M2==\n&amp;#34;
&amp;#34;else\n&amp;#34;
&amp;#34;end if\n&amp;#34;
&amp;#34;–&amp;gt; &lt;code class="verbatim">=IF&amp;#34; ifn &amp;#34;M2=&lt;/code>&amp;#34;)&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;sif&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block-plantuml-activity-if)&lt;/p>
&lt;p>
(define-skeleton skel-org-block-plantuml-activity-for
&amp;#34;Insert a org plantuml block activity for statement&amp;#34;
&amp;#34;Loop for each: &amp;#34;
&amp;#34;–&amp;gt; ==LOOP&amp;#34; (setq loopn (bh/plantuml-loop)) &amp;#34;==\n&amp;#34;
&amp;#34;note left: Loop&amp;#34; loopn &amp;#34;: For each &amp;#34; str &amp;#34;\n&amp;#34;
&amp;#34;–&amp;gt; ==ENDLOOP&amp;#34; loopn &amp;#34;==\n&amp;#34;
&amp;#34;note left: Loop&amp;#34; loopn &amp;#34;: End for each &amp;#34; str &amp;#34;\n&amp;#34; )&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;sfor&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block-plantuml-activity-for)&lt;/p>
&lt;p>
(define-skeleton skel-org-block-plantuml-sequence
&amp;#34;Insert a org plantuml activity diagram block, querying for filename.&amp;#34;
&amp;#34;File appends (no extension): &amp;#34;
&amp;#34;#+begin_src plantuml :file &amp;#34; str &amp;#34;-seq.png :cache yes :tangle &amp;#34; str &amp;#34;-seq.txt\n&amp;#34;
&amp;#34;@startuml\n&amp;#34;
&amp;#34;title &amp;#34; str &amp;#34; - \n&amp;#34;
&amp;#34;actor CSR as \&amp;#34;Customer Service Representative\&amp;#34;\n&amp;#34;
&amp;#34;participant CSMO as \&amp;#34;CSM Online\&amp;#34;\n&amp;#34;
&amp;#34;participant CSMU as \&amp;#34;CSM Unix\&amp;#34;\n&amp;#34;
&amp;#34;participant NRIS\n&amp;#34;
&amp;#34;actor Customer&amp;#34;
_ - \n
&amp;#34;@enduml\n&amp;#34;
&amp;#34;#+end_src\n&amp;#34;)&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;sseq&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block-plantuml-sequence)&lt;/p>
&lt;p>
;; sdot - Graphviz DOT block
(define-skeleton skel-org-block-dot
&amp;#34;Insert a org graphviz dot block, querying for filename.&amp;#34;
&amp;#34;File (no extension): &amp;#34;
&amp;#34;#+begin_src dot :file &amp;#34; str &amp;#34;.png :cache yes :cmdline -Kdot -Tpng\n&amp;#34;
&amp;#34;graph G {\n&amp;#34;
_ - \n
&amp;#34;}\n&amp;#34;
&amp;#34;#+end_src\n&amp;#34;)&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;sdot&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block-dot)&lt;/p>
&lt;p>
;; sditaa - Ditaa source block
(define-skeleton skel-org-block-ditaa
&amp;#34;Insert a org ditaa block, querying for filename.&amp;#34;
&amp;#34;File (no extension): &amp;#34;
&amp;#34;#+begin_src ditaa :file &amp;#34; str &amp;#34;.png :cache yes\n&amp;#34;
_ - \n
&amp;#34;#+end_src\n&amp;#34;)&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;sditaa&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block-ditaa)&lt;/p>
&lt;p>
;; selisp - Emacs Lisp source block
(define-skeleton skel-org-block-elisp
&amp;#34;Insert a org emacs-lisp block&amp;#34;
&amp;#34;&amp;#34;
&amp;#34;#+begin_src emacs-lisp\n&amp;#34;
_ - \n
&amp;#34;#+end_src\n&amp;#34;)&lt;/p>
&lt;p>
(define-abbrev org-mode-abbrev-table &amp;#34;selisp&amp;#34; &amp;#34;&amp;#34; &amp;#39;skel-org-block-elisp)&lt;/p>
&lt;p>
I also use abbrev-mode when taking notes at work. I tend to write
first names for people which get expanded to their complete name in my
notes. So if I write `mickey` it gets automatically expanded to
`Mickey Mouse` as I type. To create an abbreviation just type in the
short form followed by `C-x a i l` to create an abbreviation for the
current mode I&amp;amp;rsquo;m in.&lt;/p>
&lt;p>
The only thing you have to be careful with is not to use a common word for your
abbreviation since abbrev-mode will try to expand it everytime you enter it.
I found this annoying when I used `plantuml` as one of my abbreviations.&lt;/p>
&lt;p>
I also use skeletons and abbrev-mode for C source files at work.
This works really well for me.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ActivityDiagramExample&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Example PlantUml Activity Diagram Generation&lt;/p>
&lt;p>
When creating activity diagrams I can use &amp;amp;rsquo;sif&amp;amp;rsquo; and &amp;amp;rsquo;sfor&amp;amp;rsquo; to add
IF and FOR blocks to the diagram with unique numbering automatically
generated.&lt;/p>
&lt;p>
Example: Create a new diagram and enter 2 IFs and 2 FOR blocks&lt;/p>
&lt;p>
Create diagram: &amp;amp;ldquo;sact RET test RET&amp;amp;rdquo;&lt;/p>
&lt;p>
gives&lt;/p>
&lt;p>
@startuml
skinparam activity {
BackgroundColor&amp;lt;&amp;lt;New&amp;gt;&amp;gt; Cyan
}&lt;/p>
&lt;p>
title test -
note left: test
(&lt;strong>) –&amp;gt; &amp;#34;test&amp;#34;
–&amp;gt; (&lt;/strong>)&lt;/p>
&lt;p>
@enduml&lt;/p>
&lt;p>
![img](test-act.png)&lt;/p>
&lt;p>
Put cursor on &amp;amp;#x2013;&amp;gt; (\*) and enter &amp;amp;ldquo;sif RET&amp;amp;rdquo;&lt;/p>
&lt;p>
gives&lt;/p>
&lt;p>
@startuml
skinparam activity {
BackgroundColor&amp;lt;&amp;lt;New&amp;gt;&amp;gt; Cyan
}&lt;/p>
&lt;p>
title test -
note left: test
(*) –&amp;gt; &amp;#34;test&amp;#34;
if &amp;#34;&amp;#34; then
-&amp;gt; [condition] &lt;code class="verbatim">=IF1=&lt;/code>
–&amp;gt; &lt;code class="verbatim">=IF1M1=&lt;/code>
-left-&amp;gt; &lt;code class="verbatim">=IF1M2=&lt;/code>
else
end if
–&amp;gt; &lt;code class="verbatim">=IF1M2=&lt;/code>
–&amp;gt; (*)&lt;/p>
&lt;p>
@enduml&lt;/p>
&lt;p>
![img](test-act2.png)&lt;/p>
&lt;p>
repeat on &amp;amp;#x2013;&amp;gt; (\*) line&lt;/p>
&lt;p>
gives&lt;/p>
&lt;p>
@startuml
skinparam activity {
BackgroundColor&amp;lt;&amp;lt;New&amp;gt;&amp;gt; Cyan
}&lt;/p>
&lt;p>
title test -
note left: test
(*) –&amp;gt; &amp;#34;test&amp;#34;
if &amp;#34;&amp;#34; then
-&amp;gt; [condition] &lt;code class="verbatim">=IF1=&lt;/code>
–&amp;gt; &lt;code class="verbatim">=IF1M1=&lt;/code>
-left-&amp;gt; &lt;code class="verbatim">=IF1M2=&lt;/code>
else
end if
–&amp;gt; &lt;code class="verbatim">=IF1M2=&lt;/code>
if &amp;#34;&amp;#34; then
-&amp;gt; [condition] &lt;code class="verbatim">=IF2=&lt;/code>
–&amp;gt; &lt;code class="verbatim">=IF2M1=&lt;/code>
-left-&amp;gt; &lt;code class="verbatim">=IF2M2=&lt;/code>
else
end if
–&amp;gt; &lt;code class="verbatim">=IF2M2=&lt;/code>
–&amp;gt; (*)&lt;/p>
&lt;p>
@enduml&lt;/p>
&lt;p>
![img](test-act3.png)&lt;/p>
&lt;p>
and add two for loops at the end with &amp;amp;ldquo;sfor RET line in file RET&amp;amp;rdquo; and
&amp;amp;ldquo;sfor RET address in addressbook RET&amp;amp;rdquo;&lt;/p>
&lt;p>
gives&lt;/p>
&lt;p>
@startuml
skinparam activity {
BackgroundColor&amp;lt;&amp;lt;New&amp;gt;&amp;gt; Cyan
}&lt;/p>
&lt;p>
title test -
note left: test
(*) –&amp;gt; &amp;#34;test&amp;#34;
if &amp;#34;&amp;#34; then
-&amp;gt; [condition] &lt;code class="verbatim">=IF1=&lt;/code>
–&amp;gt; &lt;code class="verbatim">=IF1M1=&lt;/code>
-left-&amp;gt; &lt;code class="verbatim">=IF1M2=&lt;/code>
else
end if
–&amp;gt; &lt;code class="verbatim">=IF1M2=&lt;/code>
if &amp;#34;&amp;#34; then
-&amp;gt; [condition] &lt;code class="verbatim">=IF2=&lt;/code>
–&amp;gt; &lt;code class="verbatim">=IF2M1=&lt;/code>
-left-&amp;gt; &lt;code class="verbatim">=IF2M2=&lt;/code>
else
end if
–&amp;gt; &lt;code class="verbatim">=IF2M2=&lt;/code>
–&amp;gt; &lt;code class="verbatim">=LOOP1=&lt;/code>
note left: Loop1: For each line in file
–&amp;gt; &lt;code class="verbatim">=ENDLOOP1=&lt;/code>
note left: Loop1: End for each line in file
–&amp;gt; &lt;code class="verbatim">=LOOP2=&lt;/code>
note left: Loop2: For each address in addressbook
–&amp;gt; &lt;code class="verbatim">=ENDLOOP2=&lt;/code>
note left: Loop2: End for each address in addressbook&lt;/p>
&lt;p>
–&amp;gt; (*)&lt;/p>
&lt;p>
@enduml&lt;/p>
&lt;p>
![img](test-act4.png)&lt;/p>
&lt;p>
I use rectangular cut and paste if I need to indent generated blocks.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;FocusOnCurrentWork&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Focus On Current Work&lt;/p>
&lt;p>
There is more than one way to do this. Use what works for you.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;NarrowToSubtree&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Narrowing to a subtree with `bh/org-todo`&lt;/p>
&lt;p>
`f5` and `S-f5` are bound the functions for narrowing and widening the
emacs buffer as defined below.&lt;/p>
&lt;p>
We now use:&lt;/p>
&lt;ul>
&lt;li>T (tasks) for C-c / t on the current buffer&lt;/li>
&lt;li>N (narrow) narrows to this task subtree&lt;/li>
&lt;li>U (up) narrows to the immediate parent task subtree without moving&lt;/li>
&lt;li>P (project) narrows to the parent project subtree without moving&lt;/li>
&lt;li>F (file) narrows to the current file or file of the existing restriction&lt;/li>
&lt;/ul>
&lt;p>The agenda keeps widening the org buffer so this gives a convenient
way to focus on what we are doing.&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;f5&amp;gt;&amp;#34;) &amp;#39;bh/org-todo)&lt;/p>
&lt;p>
(defun bh/org-todo (arg)
(interactive &amp;#34;p&amp;#34;)
(if (equal arg 4)
(save-restriction
(bh/narrow-to-org-subtree)
(org-show-todo-tree nil))
(bh/narrow-to-org-subtree)
(org-show-todo-tree nil)))&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;S-f5&amp;gt;&amp;#34;) &amp;#39;bh/widen)&lt;/p>
&lt;p>
(defun bh/widen ()
(interactive)
(if (equal major-mode &amp;#39;org-agenda-mode)
(progn
(org-agenda-remove-restriction-lock)
(when org-agenda-sticky
(org-agenda-redo)))
(widen)))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-agenda-mode-hook
&amp;#39;(lambda () (org-defkey org-agenda-mode-map &amp;#34;W&amp;#34; (lambda () (interactive) (setq bh/hide-scheduled-and-waiting-next-tasks t) (bh/widen))))
&amp;#39;append)&lt;/p>
&lt;p>
(defun bh/restrict-to-file-or-follow (arg)
&amp;#34;Set agenda restriction to &amp;#39;file or with argument invoke follow mode.
I don&amp;#39;t use follow mode very often but I restrict to file all the time
so change the default &amp;#39;F&amp;#39; binding in the agenda to allow both&amp;#34;
(interactive &amp;#34;p&amp;#34;)
(if (equal arg 4)
(org-agenda-follow-mode)
(widen)
(bh/set-agenda-restriction-lock 4)
(org-agenda-redo)
(beginning-of-buffer)))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-agenda-mode-hook
&amp;#39;(lambda () (org-defkey org-agenda-mode-map &amp;#34;F&amp;#34; &amp;#39;bh/restrict-to-file-or-follow))
&amp;#39;append)&lt;/p>
&lt;p>
(defun bh/narrow-to-org-subtree ()
(widen)
(org-narrow-to-subtree)
(save-restriction
(org-agenda-set-restriction-lock)))&lt;/p>
&lt;p>
(defun bh/narrow-to-subtree ()
(interactive)
(if (equal major-mode &amp;#39;org-agenda-mode)
(progn
(org-with-point-at (org-get-at-bol &amp;#39;org-hd-marker)
(bh/narrow-to-org-subtree))
(when org-agenda-sticky
(org-agenda-redo)))
(bh/narrow-to-org-subtree)))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-agenda-mode-hook
&amp;#39;(lambda () (org-defkey org-agenda-mode-map &amp;#34;N&amp;#34; &amp;#39;bh/narrow-to-subtree))
&amp;#39;append)&lt;/p>
&lt;p>
(defun bh/narrow-up-one-org-level ()
(widen)
(save-excursion
(outline-up-heading 1 &amp;#39;invisible-ok)
(bh/narrow-to-org-subtree)))&lt;/p>
&lt;p>
(defun bh/get-pom-from-agenda-restriction-or-point ()
(or (and (marker-position org-agenda-restrict-begin) org-agenda-restrict-begin)
(org-get-at-bol &amp;#39;org-hd-marker)
(and (equal major-mode &amp;#39;org-mode) (point))
org-clock-marker))&lt;/p>
&lt;p>
(defun bh/narrow-up-one-level ()
(interactive)
(if (equal major-mode &amp;#39;org-agenda-mode)
(progn
(org-with-point-at (bh/get-pom-from-agenda-restriction-or-point)
(bh/narrow-up-one-org-level))
(org-agenda-redo))
(bh/narrow-up-one-org-level)))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-agenda-mode-hook
&amp;#39;(lambda () (org-defkey org-agenda-mode-map &amp;#34;U&amp;#34; &amp;#39;bh/narrow-up-one-level))
&amp;#39;append)&lt;/p>
&lt;p>
(defun bh/narrow-to-org-project ()
(widen)
(save-excursion
(bh/find-project-task)
(bh/narrow-to-org-subtree)))&lt;/p>
&lt;p>
(defun bh/narrow-to-project ()
(interactive)
(if (equal major-mode &amp;#39;org-agenda-mode)
(progn
(org-with-point-at (bh/get-pom-from-agenda-restriction-or-point)
(bh/narrow-to-org-project)
(save-excursion
(bh/find-project-task)
(org-agenda-set-restriction-lock)))
(org-agenda-redo)
(beginning-of-buffer))
(bh/narrow-to-org-project)
(save-restriction
(org-agenda-set-restriction-lock))))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-agenda-mode-hook
&amp;#39;(lambda () (org-defkey org-agenda-mode-map &amp;#34;P&amp;#34; &amp;#39;bh/narrow-to-project))
&amp;#39;append)&lt;/p>
&lt;p>
(defvar bh/project-list nil)&lt;/p>
&lt;p>
(defun bh/view-next-project ()
(interactive)
(let (num-project-left current-project)
(unless (marker-position org-agenda-restrict-begin)
(goto-char (point-min))
; Clear all of the existing markers on the list
(while bh/project-list
(set-marker (pop bh/project-list) nil))
(re-search-forward &amp;#34;Tasks to Refile&amp;#34;)
(forward-visible-line 1))&lt;/p>
&lt;p>
; Build a new project marker list
(unless bh/project-list
(while (&amp;lt; (point) (point-max))
(while (and (&amp;lt; (point) (point-max))
(or (not (org-get-at-bol &amp;#39;org-hd-marker))
(org-with-point-at (org-get-at-bol &amp;#39;org-hd-marker)
(or (not (bh/is-project-p))
(bh/is-project-subtree-p)))))
(forward-visible-line 1))
(when (&amp;lt; (point) (point-max))
(add-to-list &amp;#39;bh/project-list (copy-marker (org-get-at-bol &amp;#39;org-hd-marker)) &amp;#39;append))
(forward-visible-line 1)))&lt;/p>
&lt;p>
; Pop off the first marker on the list and display
(setq current-project (pop bh/project-list))
(when current-project
(org-with-point-at current-project
(setq bh/hide-scheduled-and-waiting-next-tasks nil)
(bh/narrow-to-project))
; Remove the marker
(setq current-project nil)
(org-agenda-redo)
(beginning-of-buffer)
(setq num-projects-left (length bh/project-list))
(if (&amp;gt; num-projects-left 0)
(message &amp;#34;%s projects left to view&amp;#34; num-projects-left)
(beginning-of-buffer)
(setq bh/hide-scheduled-and-waiting-next-tasks t)
(error &amp;#34;All projects viewed.&amp;#34;)))))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-agenda-mode-hook
&amp;#39;(lambda () (org-defkey org-agenda-mode-map &amp;#34;V&amp;#34; &amp;#39;bh/view-next-project))
&amp;#39;append)&lt;/p>
&lt;p>
This makes it easy to hide all of the other details in your org-file
temporarily by limiting your view to this task subtree. Tasks are
folded and hilighted so that only tasks which are incomplete are
shown.&lt;/p>
&lt;p>
I hit `f5` (or the `T` speed key) a lot. This basically does a
`org-narrow-to-subtree` and `C-c / t` combination leaving the buffer
in a narrowed state. I use `S-f5` (or some other widening speed key
like `U`, `W`, `F`) to widen back to the normal view.&lt;/p>
&lt;p>
I also have the following setting to force showing the next headline.&lt;/p>
&lt;p>
(setq org-show-entry-below (quote ((default))))&lt;/p>
&lt;p>
This prevents too many headlines from being folded together when I&amp;amp;rsquo;m
working with collapsed trees.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AgendaNarrowToSubtree&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Limiting the agenda to a subtree&lt;/p>
&lt;p>
`C-c C-x &amp;lt;` turns on the agenda restriction lock for the current
subtree. This keeps your agenda focused on only this subtree. Alarms
and notifications are still active outside the agenda restriction.
`C-c C-x &amp;gt;` turns off the agenda restriction lock returning your
agenda view back to normal.&lt;/p>
&lt;p>
I have added key bindings for the agenda to allow using `C-c C-x &amp;lt;` in
the agenda to set the restriction lock to the current task directly.
The following elisp accomplishes this.&lt;/p>
&lt;p>
(add-hook &amp;#39;org-agenda-mode-hook
&amp;#39;(lambda () (org-defkey org-agenda-mode-map &amp;#34;\C-c\C-x&amp;lt;&amp;#34; &amp;#39;bh/set-agenda-restriction-lock))
&amp;#39;append)&lt;/p>
&lt;p>
(defun bh/set-agenda-restriction-lock (arg)
&amp;#34;Set restriction lock to current task subtree or file if prefix is specified&amp;#34;
(interactive &amp;#34;p&amp;#34;)
(let* ((pom (bh/get-pom-from-agenda-restriction-or-point))
(tags (org-with-point-at pom (org-get-tags-at))))
(let ((restriction-type (if (equal arg 4) &amp;#39;file &amp;#39;subtree)))
(save-restriction
(cond
((and (equal major-mode &amp;#39;org-agenda-mode) pom)
(org-with-point-at pom
(org-agenda-set-restriction-lock restriction-type))
(org-agenda-redo))
((and (equal major-mode &amp;#39;org-mode) (org-before-first-heading-p))
(org-agenda-set-restriction-lock &amp;#39;file))
(pom
(org-with-point-at pom
(org-agenda-set-restriction-lock restriction-type))))))))&lt;/p>
&lt;p>
This allows me to set the restriction lock from agenda to task directly.
I work from the agenda a lot and I find this very convenient.&lt;/p>
&lt;p>
Setting the restriction directly to the task is less surprising than
automatically moving up the tree to the project level task &amp;amp;#x2013; which is
what I was doing before. If the select task is too restrictive it&amp;amp;rsquo;s
easy to move the restriction lock up a level by visiting the task in
the org file and going up and resetting the lock - in case you want to
see move of the project.&lt;/p>
&lt;p>
Selecting the entire project sometimes has too many tasks in it and I
want to limit the view to part of the subtree. This is why I keep the `N` and
`U` key bindings for adjusting the narrowed region.&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve added new convenience keys for restricting the agenda and org-buffer to
subtree, parent task, and project task, as well as removing the restriction.
These keys work both in the agenda and as speed commands on a headline in the
org-file.&lt;/p>
&lt;ul>
&lt;li>`N` narrows to the current task subtree
This is the same as same as `C-c C-x &amp;lt;`&lt;/li>
&lt;li>`U` narrows to the parent subtree of this task
This goes up one level and narrows to that subtree.&lt;/li>
&lt;li>`P` narrows to the entire project containing this task
This goes up the tree to the top-level `TODO` keyword and selects
that as the subtree to narrow to&lt;/li>
&lt;li>`W` removes the restriction, widening the buffer&lt;/li>
&lt;/ul>
&lt;p>I like the highlighting for a restriction to only affect the headline
and not the entire body of the agenda restriction. I use the
following setting to keep the highlight on the heading only (as was
the case for pre-8.0 versions of org-mode)&lt;/p>
&lt;p>
;; Limit restriction lock highlighting to the headline only
(setq org-agenda-restriction-lock-highlight-subtree nil)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AgendaNarrowToFile&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Limiting the agenda to a file&lt;/p>
&lt;p>
You can limit the agenda view to a single file in multiple ways.&lt;/p>
&lt;p>
You can use the agenda restriction lock `C-c C-x &amp;lt;` on the any
line before the first heading to set the agenda restriction lock
to this file only. This is equivalent using a prefix argumment
(`C-u C-c C-x &amp;lt;`) anywhere in the file. This lock stays in
effect until you remove it with `C-c C-x &amp;gt;`.&lt;/p>
&lt;p>
This also works in the agenda with my `C-u C-c c-x &amp;lt;` key binding.&lt;/p>
&lt;p>
Another way is to invoke the agenda with `F12 &amp;lt; a` while visiting an
org-mode file. This limits the agenda view to just this file. I
occasionally use this to view a file not in my `org-agenda-files` in
the agenda.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TuningAgendaViews&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Tuning the Agenda Views&lt;/p>
&lt;p>
Various customizations affect how the agenda views show task details.
This section shows each of the customizations I use in my workflow.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HighlightCurrentAgendaLine&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Highlight the current agenda line&lt;/p>
&lt;p>
The following code in my `.emacs` file keeps the current agenda line
highlighted. This makes it obvious what task will be affected by
commands issued in the agenda. No more acting on the wrong task by
mistake!&lt;/p>
&lt;p>
The clock modeline time is also shown with a reverse background.&lt;/p>
&lt;p>
;; Always hilight the current agenda line
(add-hook &amp;#39;org-agenda-mode-hook
&amp;#39;(lambda () (hl-line-mode 1))
&amp;#39;append)&lt;/p>
&lt;p>
;; The following custom-set-faces create the highlights
(custom-set-faces
;; custom-set-faces was added by Custom.
;; If you edit it by hand, you could mess it up, so be careful.
;; Your init file should contain only one such instance.
;; If there is more than one, they won&amp;#39;t work right.
&amp;#39;(org-mode-line-clock ((t (:background &amp;#34;grey75&amp;#34; :foreground &amp;#34;red&amp;#34; :box (:line-width -1 :style released-button)))) t))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;GlobalTodoListsShowAllTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Keep tasks with timestamps visible on the global todo lists&lt;/p>
&lt;p>
Tasks with dates (`SCHEDULED:`, `DEADLINE:`, or active dates) show up
in the agenda when appropriate. The block agenda view (`F12 a`) tries
to keep tasks showing up only in one location (either in the calendar
or other todo lists in later sections of the block agenda.) I now
rarely use the global todo list search in org-mode (`F12 t`, `F12 m`)
and when I do I&amp;amp;rsquo;m trying to find a specific task quickly. These lists
now include &amp;lt;span class=&amp;#34;underline&amp;#34;&amp;gt;everything&amp;lt;/span&amp;gt; so I can just search for the item I want and
move on.&lt;/p>
&lt;p>
The block agenda prevents display of tasks with deadlines or scheduled
dates in the future so you can safely ignore these until the
appropriate time.&lt;/p>
&lt;p>
;; Keep tasks with dates on the global todo lists
(setq org-agenda-todo-ignore-with-date nil)&lt;/p>
&lt;p>
;; Keep tasks with deadlines on the global todo lists
(setq org-agenda-todo-ignore-deadlines nil)&lt;/p>
&lt;p>
;; Keep tasks with scheduled dates on the global todo lists
(setq org-agenda-todo-ignore-scheduled nil)&lt;/p>
&lt;p>
;; Keep tasks with timestamps on the global todo lists
(setq org-agenda-todo-ignore-timestamp nil)&lt;/p>
&lt;p>
;; Remove completed deadline tasks from the agenda view
(setq org-agenda-skip-deadline-if-done t)&lt;/p>
&lt;p>
;; Remove completed scheduled tasks from the agenda view
(setq org-agenda-skip-scheduled-if-done t)&lt;/p>
&lt;p>
;; Remove completed items from search results
(setq org-agenda-skip-timestamp-if-done t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;DiaryForAppointments&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Use the Diary for Holidays and Appointments&lt;/p>
&lt;p>
I don&amp;amp;rsquo;t use the emacs Diary for anything but I like seeing the
holidays on my agenda. This helps with planning for those days when
you&amp;amp;rsquo;re not supposed to be working.&lt;/p>
&lt;p>
(setq org-agenda-include-diary nil)
(setq org-agenda-diary-file &amp;#34;~/git/org/diary.org&amp;#34;)&lt;/p>
&lt;p>
The diary file keeps `date-tree` entries created by the capture mode
&amp;amp;rsquo;appointment&amp;amp;rsquo; template. I use this also for miscellaneous tasks I
want to clock during interruptions.&lt;/p>
&lt;p>
I don&amp;amp;rsquo;t use a `~/diary` file anymore. That is just there as a
zero-length file to keep Emacs happy. I use org-mode&amp;amp;rsquo;s diary
functions instead. Inserting entries with `i` in the emacs agenda
creates date entries in the `~/git/org/diary.org` file.&lt;/p>
&lt;p>
I include holidays from the calendar in my `todo.org` file as follows:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Appointments&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>** Holidays&lt;/p>
&lt;p>%%(org-calendar-holiday)
** Some other Appointment
…&lt;/p>
&lt;p>
I use the following setting so any time strings in the heading are
shown in the agenda.&lt;/p>
&lt;p>
(setq org-agenda-insert-diary-extract-time t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;SearchesIncludeArchiveFiles&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Searches include archive files&lt;/p>
&lt;p>
I keep a single archive file for each of my org-mode project files.
This allows me to search the current file and the archive when I need
to dig up old information from the archives.&lt;/p>
&lt;p>
I don&amp;amp;rsquo;t need this often but it sure is handy on the occasions that
I do need it.&lt;/p>
&lt;p>
;; Include agenda archive files when searching for things
(setq org-agenda-text-search-extra-files (quote (agenda-archives)))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AgendaViewTweaks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Agenda view tweaks&lt;/p>
&lt;p>
The following agenda customizations control&lt;/p>
&lt;ul>
&lt;li>display of repeating tasks&lt;/li>
&lt;li>display of empty dates on the agenda&lt;/li>
&lt;li>task sort order&lt;/li>
&lt;li>start the agenda weekly view with Sunday&lt;/li>
&lt;li>display of the grid&lt;/li>
&lt;li>habits at the bottom&lt;/li>
&lt;/ul>
&lt;p>I use a custom sorting function so that my daily agenda lists tasks in
order of importance. Tasks on the daily agenda are listed in the
following order:&lt;/p>
&lt;ol>
&lt;li>tasks with times at the top so they are hard to miss&lt;/li>
&lt;li>entries for today (active timestamp headlines that are not scheduled or deadline tasks)&lt;/li>
&lt;li>deadlines due today&lt;/li>
&lt;li>late deadline tasks&lt;/li>
&lt;li>scheduled items for today&lt;/li>
&lt;li>pending deadlines (due soon)&lt;/li>
&lt;li>late scheduled items&lt;/li>
&lt;li>habits&lt;/li>
&lt;/ol>
&lt;p>The lisp for this isn&amp;amp;rsquo;t particularly pretty but it works.&lt;/p>
&lt;p>
Here are the `.emacs` settings:&lt;/p>
&lt;p>
;; Show all future entries for repeating tasks
(setq org-agenda-repeating-timestamp-show-all t)&lt;/p>
&lt;p>
;; Show all agenda dates - even if they are empty
(setq org-agenda-show-all-dates t)&lt;/p>
&lt;p>
;; Sorting order for tasks on the agenda
(setq org-agenda-sorting-strategy
(quote ((agenda habit-down time-up user-defined-up effort-up category-keep)
(todo category-up effort-up)
(tags category-up effort-up)
(search category-up))))&lt;/p>
&lt;p>
;; Start the weekly agenda on Monday
(setq org-agenda-start-on-weekday 1)&lt;/p>
&lt;p>
;; Enable display of the time grid so we can see the marker for the current time
(setq org-agenda-time-grid (quote ((daily today remove-match)
#(&amp;#34;—————-&amp;#34; 0 16 (org-heading t))
(0900 1100 1300 1500 1700))))&lt;/p>
&lt;p>
;; Display tags farther right
(setq org-agenda-tags-column -102)&lt;/p>
&lt;p>
;;
;; Agenda sorting functions
;;
(setq org-agenda-cmp-user-defined &amp;#39;bh/agenda-sort)&lt;/p>
&lt;p>
(defun bh/agenda-sort (a b)
&amp;#34;Sorting strategy for agenda items.
Late deadlines first, then scheduled, then non-late deadlines&amp;#34;
(let (result num-a num-b)
(cond
; time specific items are already sorted first by org-agenda-sorting-strategy&lt;/p>
&lt;p>
; non-deadline and non-scheduled items next
((bh/agenda-sort-test &amp;#39;bh/is-not-scheduled-or-deadline a b))&lt;/p>
&lt;p>
; deadlines for today next
((bh/agenda-sort-test &amp;#39;bh/is-due-deadline a b))&lt;/p>
&lt;p>
; late deadlines next
((bh/agenda-sort-test-num &amp;#39;bh/is-late-deadline &amp;#39;&amp;gt; a b))&lt;/p>
&lt;p>
; scheduled items for today next
((bh/agenda-sort-test &amp;#39;bh/is-scheduled-today a b))&lt;/p>
&lt;p>
; late scheduled items next
((bh/agenda-sort-test-num &amp;#39;bh/is-scheduled-late &amp;#39;&amp;gt; a b))&lt;/p>
&lt;p>
; pending deadlines last
((bh/agenda-sort-test-num &amp;#39;bh/is-pending-deadline &amp;#39;&amp;lt; a b))&lt;/p>
&lt;p>
; finally default to unsorted
(t (setq result nil)))
result))&lt;/p>
&lt;p>
(defmacro bh/agenda-sort-test (fn a b)
&amp;#34;Test for agenda sort&amp;#34;
`(cond
; if both match leave them unsorted
((and (apply ,fn (list ,a))
(apply ,fn (list ,b)))
(setq result nil))
; if a matches put a first
((apply ,fn (list ,a))
(setq result -1))
; otherwise if b matches put b first
((apply ,fn (list ,b))
(setq result 1))
; if none match leave them unsorted
(t nil)))&lt;/p>
&lt;p>
(defmacro bh/agenda-sort-test-num (fn compfn a b)
`(cond
((apply ,fn (list ,a))
(setq num-a (string-to-number (match-string 1 ,a)))
(if (apply ,fn (list ,b))
(progn
(setq num-b (string-to-number (match-string 1 ,b)))
(setq result (if (apply ,compfn (list num-a num-b))
-1
1)))
(setq result -1)))
((apply ,fn (list ,b))
(setq result 1))
(t nil)))&lt;/p>
&lt;p>
(defun bh/is-not-scheduled-or-deadline (date-str)
(and (not (bh/is-deadline date-str))
(not (bh/is-scheduled date-str))))&lt;/p>
&lt;p>
(defun bh/is-due-deadline (date-str)
(string-match &amp;#34;Deadline:&amp;#34; date-str))&lt;/p>
&lt;p>
(defun bh/is-late-deadline (date-str)
(string-match &amp;#34;\\([0-9]*\\) d\. ago:&amp;#34; date-str))&lt;/p>
&lt;p>
(defun bh/is-pending-deadline (date-str)
(string-match &amp;#34;In \\([^-]*\\)d\.:&amp;#34; date-str))&lt;/p>
&lt;p>
(defun bh/is-deadline (date-str)
(or (bh/is-due-deadline date-str)
(bh/is-late-deadline date-str)
(bh/is-pending-deadline date-str)))&lt;/p>
&lt;p>
(defun bh/is-scheduled (date-str)
(or (bh/is-scheduled-today date-str)
(bh/is-scheduled-late date-str)))&lt;/p>
&lt;p>
(defun bh/is-scheduled-today (date-str)
(string-match &amp;#34;Scheduled:&amp;#34; date-str))&lt;/p>
&lt;p>
(defun bh/is-scheduled-late (date-str)
(string-match &amp;#34;Sched\.\\(.*\\)x:&amp;#34; date-str))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;StickyAgendas&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Sticky Agendas&lt;/p>
&lt;p>
Sticky agendas allow you to have more than one agenda view created simultaneously.
You can quickly switch to the view without incurring an agenda rebuild by invoking
the agenda custom command key that normally generates the agenda. If it already
exists it will display the existing view. `g` forces regeneration of the agenda view.&lt;/p>
&lt;p>
I normally have two views displayed (`F12 a` for the daily/weekly
agenda and `F12 SPC` for my project management view)&lt;/p>
&lt;p>
;; Use sticky agenda&amp;#39;s so they persist
(setq org-agenda-sticky t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ChecklistHandling&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Checklist handling&lt;/p>
&lt;p>
Checklists are great for repeated tasks with lots of things that need
to be done. For a long time I was manually resetting the check boxes
to unchecked when marking the repeated task `DONE` but no more!
There&amp;amp;rsquo;s a contributed `org-checklist` that can uncheck the boxes
automagically when the task is marked done.&lt;/p>
&lt;p>
Add the following to your `.emacs`&lt;/p>
&lt;p>
(add-to-list &amp;#39;load-path (expand-file-name &amp;#34;~/git/org-mode/contrib/lisp&amp;#34;))&lt;/p>
&lt;p>
(require &amp;#39;org-checklist)&lt;/p>
&lt;p>
and then to use it in a task you simply set the property `RESET_CHECK_BOXES` to `t`
like this&lt;/p>
&lt;ul>
&lt;li>
&lt;p>TODO Invoicing and Archive Tasks &lt;code class="statistic">[0/7]&lt;/code>
DEADLINE: &amp;lt;2009-07-01 Wed +1m -0d&amp;gt;&lt;/p>
&lt;ul>
&lt;li class="unchecked">Do task 1&lt;/li>
&lt;li class="unchecked">Do task 2&lt;/li>
&lt;/ul>
&lt;p>…&lt;/p>
&lt;ul>
&lt;li class="unchecked">Do task 7&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;a id=&amp;#34;Backups&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Backups&lt;/p>
&lt;p>
`Backups that you have to work hard at don&amp;#39;t get done`.&lt;/p>
&lt;p>
I lost a bunch of data over 10 years ago due to not having a working
backup solution. At the time I said `I&amp;#39;m not going to lose any important data ever again`. So far so good :)&lt;/p>
&lt;p>
My backups get done religiously. What does this have to do with
org-mode? Not much really, other than I don&amp;amp;rsquo;t spend time doing
backups &amp;amp;#x2013; they just happen &amp;amp;#x2013; which saves me time for other more
interesting things.&lt;/p>
&lt;p>
My backup philosophy is to make it possible to recover your data &amp;amp;#x2013;
not necessarily easy. It doesn&amp;amp;rsquo;t have to be easy/fast to do the
recovery because I&amp;amp;rsquo;ll rarely have to recover data from the backups.
Saving time for recovery doesn&amp;amp;rsquo;t make sense to me. I want the backup
to be fast and painless since I do those all the time.&lt;/p>
&lt;p>
I set up an automated network backup over 10 years ago that is still
serving me well today. All of my systems gets daily backups to a
network drive. These are collected monthly and written to an external
removable USB disk.&lt;/p>
&lt;p>
Once a month my task for backups prompts me to move the current
collection of montly backups to the USB drive for external storage.
Backups take minimal effort currently and I&amp;amp;rsquo;m really happy about that.&lt;/p>
&lt;p>
Since then `git` came into my life, so backups of `git` repositories
that are on multiple machines is much less critical than it used to
be. There is an automatic backup of everything pushed to the remote
repository.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HandlingBlockedTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Handling blocked tasks&lt;/p>
&lt;p>
Blocked tasks are tasks that have subtasks which are not in a done
todo state. Blocked tasks show up in a grayed font by default in the
agenda.&lt;/p>
&lt;p>
To enable task blocking set the following variable:&lt;/p>
&lt;p>
(setq org-enforce-todo-dependencies t)&lt;/p>
&lt;p>
This setting prevents tasks from changing to `DONE` if any subtasks
are still open. This works pretty well except for repeating tasks. I
find I&amp;amp;rsquo;m regularly adding `TODO` tasks under repeating tasks and not
all of the subtasks need to be complete before the next repeat cycle.&lt;/p>
&lt;p>
You can override the setting temporarily by changing the task with
`C-u C-u C-u C-c C-t` but I never remember that. I set a permanent
property on the repeated tasks as follows:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>TODO New Repeating Task
SCHEDULED: &lt;span class="timestamp">&amp;lt;2009-06-16 Tue +1w&amp;gt;&lt;/span>&lt;/p>
&lt;p>…&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>** TODO Subtask&lt;/p>
&lt;p>
This prevents the `New Repeating Task` from being blocked if some of
the items under it are not complete.&lt;/p>
&lt;p>
Occassionally I need to complete tasks in a given order. Org-mode has
a property `ORDERED` that enforces this for subtasks.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>TODO Some Task&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>* TODO Step 1
*&lt;/strong> TODO Step 2
** TODO Step 3&lt;/p>
&lt;p>
In this case you need to complete `Step 1` before you can complete
`Step 2`, etc. and org-mode prevents the state change to a done task
until the preceding tasks are complete.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgTaskStructureAndPresentation&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Org Task structure and presentation&lt;/p>
&lt;p>
This section describes various org-mode settings I use to control how
tasks are displayed while I work on my org mode files.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;DisplayLeadingStars&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Controlling display of leading stars on headlines&lt;/p>
&lt;p>
Org-mode has the ability to show or hide the leading stars on task
headlines. It&amp;amp;rsquo;s also possible to have headlines at odd levels only so
that the stars and heading task names line up in sublevels.&lt;/p>
&lt;p>
To make org show leading stars use&lt;/p>
&lt;p>
(setq org-hide-leading-stars nil)&lt;/p>
&lt;p>
I now use org-indent mode which hides leading stars.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgIndentMode&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### org-indent mode&lt;/p>
&lt;p>
I recently started using org-indent mode. I like this setting a lot.
It removes the indentation in the org-file but displays it as if it
was indented while you are working on the org file buffer.&lt;/p>
&lt;p>
org-indent mode displays as if org-odd-levels-only is true but it has
a really clean look that I prefer over my old setup.&lt;/p>
&lt;p>
I have org-indent mode on by default at startup with the following
setting:&lt;/p>
&lt;p>
(setq org-startup-indented t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HandlingBlankLines&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Handling blank lines&lt;/p>
&lt;p>
Blank lines are evil :). They keep getting inserted in between
headlines and I don&amp;amp;rsquo;t want to see them in collapsed (contents) views.
When I use `TAB` to fold (cycle) tasks I don&amp;amp;rsquo;t want to see any blank
lines between headings.&lt;/p>
&lt;p>
The following setting hides blank lines between headings which keeps
folded view nice and compact.&lt;/p>
&lt;p>
(setq org-cycle-separator-lines 0)&lt;/p>
&lt;p>
I find extra blank lines in lists and headings a bit of a nuisance.
To get a body after a list you need to include a blank line between
the list entry and the body &amp;amp;#x2013; and indent the body appropriately.
Most of my lists have no body detail so I like the look of collapsed
lists with no blank lines better.&lt;/p>
&lt;p>
The following setting prevents creating blank lines before headings
but allows list items to adapt to existing blank lines around the items:&lt;/p>
&lt;p>
(setq org-blank-before-new-entry (quote ((heading)
(plain-list-item . auto))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AddingNewTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Adding new tasks quickly without disturbing the current task content&lt;/p>
&lt;p>
To create new headings in a project file it is really convenient to
use `C-RET`, `C-S-RET`, `M-RET`, and `M-S-RET`. This inserts a new headline
possibly with a `TODO` keyword. With the following setting&lt;/p>
&lt;p>
(setq org-insert-heading-respect-content nil)&lt;/p>
&lt;p>
org inserts the heading at point for the `M-` versions and respects
content for the `C-` versions. The respect content setting is
temporarily turned on for the `C-` versions which adds the new heading
after the content of the current item. This lets you hit `C-S-RET` in
the middle of an entry and the new heading is added after the body of
the current entry but still allow you to split an entry in the middle
with `M-S-RET`.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;NotesAtTop&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Notes at the top&lt;/p>
&lt;p>
I enter notes for tasks with `C-c C-z` (or just `z` in the agenda).
Changing tasks states also sometimes prompt for a note (e.g. moving to
`WAITING` prompts for a note and I enter a reason for why it is
waiting). These notes are saved at the top of the task so unfolding
the task shows the note first.&lt;/p>
&lt;p>
(setq org-reverse-note-order nil)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;SearchingResults&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Searching and showing results&lt;/p>
&lt;p>
Org-mode&amp;amp;rsquo;s searching capabilities are really effective at finding data
in your org files. `C-c / /` does a regular expression search on the
current file and shows matching results in a collapsed view of the
org-file.&lt;/p>
&lt;p>
I have org-mode show the hierarchy of tasks above the matched entries
and also the immediately following sibling task (but not all siblings)
with the following settings:&lt;/p>
&lt;p>
(setq org-show-following-heading t)
(setq org-show-hierarchy-above t)
(setq org-show-siblings (quote ((default))))&lt;/p>
&lt;p>
This keeps the results of the search relatively compact and mitigates
accidental errors by cutting too much data from your org file with
`C-k`. Cutting folded data (including the &amp;amp;#x2026;) can be really
dangerous since it cuts text (including following subtrees) which you
can&amp;amp;rsquo;t see. For this reason I always show the following headline when
displaying search results.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;SpecialKeyHandling&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Editing and Special key handling&lt;/p>
&lt;p>
Org-mode allows special handling of the C-a, C-e, and C-k keys while
editing headlines. I also use the setting that pastes (yanks)
subtrees and adjusts the levels to match the task I am pasting to.
See the docstring (`C-h v org-yank-adjust-subtrees`) for more details
on each variable and what it does.&lt;/p>
&lt;p>
I have `org-special-ctrl-a/e` set to enable easy access to the
beginning and end of headlines. I use `M-m` or `C-a C-a` to get to the
beginning of the line so the speed commands work and `C-a` to give
easy access to the beginning of the heading text when I need that.&lt;/p>
&lt;p>
(setq org-special-ctrl-a/e t)
(setq org-special-ctrl-k t)
(setq org-yank-adjusted-subtrees t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Attachments&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Attachments&lt;/p>
&lt;p>
Attachments are great for getting large amounts of data related to
your project out of your org-mode files. Before attachments came
along I was including huge blocks of SQL code in my org files to keep
track of changes I made to project databases. This bloated my org
file sizes badly.&lt;/p>
&lt;p>
Now I can create the data in a separate file and attach it to my
project task so it&amp;amp;rsquo;s easily located again in the future.&lt;/p>
&lt;p>
I set up org-mode to generate unique attachment IDs with
`org-id-method` as follows:&lt;/p>
&lt;p>
(setq org-id-method (quote uuidgen))&lt;/p>
&lt;p>
Say you want to attach a file `x.sql` to your current task. Create
the file data in `/tmp/x.sql` and save it.&lt;/p>
&lt;p>
Attach the file with `C-c C-a a` and enter the filename: `x.sql`.
This generates a unique ID for the task and adds the file in the
attachment directory.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Attachments :ATTACH:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The attached file is saved in
`data/f1/d38e9a-ff70-4cc4-ab50-e8b58b2aaa7b/`. Where it goes exactly
isn&amp;amp;rsquo;t important for me &amp;amp;#x2013; as long as it is saved and retrievable
easily. Org-mode copies the original file `/tmp/x.sql` into the
appropriate attachment directory.&lt;/p>
&lt;p>
Tasks with attachments automatically get an `ATTACH` tag so you can
easily find tasks with attachments with a tag search.&lt;/p>
&lt;p>
To open the attachment for a task use `C-c C-a o`. This prompts for
the attachment to open and `TAB` completion works here.&lt;/p>
&lt;p>
The `ID` changes for every task header when a new `ID` is generated.&lt;/p>
&lt;p>
It&amp;amp;rsquo;s possible to use named directories for attachments but I haven&amp;amp;rsquo;t
needed this functionality yet &amp;amp;#x2013; it&amp;amp;rsquo;s there if you need it.&lt;/p>
&lt;p>
I store my org-mode attachments with my org files in a subdirectory
`data`. These are automatically added to my `git` repository along
with any other org-mode changes I&amp;amp;rsquo;ve made.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;DeadlinesAndAgendaVisibility&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Deadlines and Agenda Visibility&lt;/p>
&lt;p>
Deadlines and due dates are a fact or life. By default I want to see
deadlines in the agenda 30 days before the due date.&lt;/p>
&lt;p>
The following setting accomplishes this:&lt;/p>
&lt;p>
(setq org-deadline-warning-days 30)&lt;/p>
&lt;p>
This gives me plenty of time to deal with the task so that it is
completed on or before the due date.&lt;/p>
&lt;p>
I also use deadlines for repeating tasks. If the task repeats more
often than once per month it would be always bugging me on the agenda
view. For these types of tasks I set an explicit deadline warning
date as follows:&lt;/p>
&lt;ul>
&lt;li>TODO Pay Wages
DEADLINE: &amp;lt;2009-07-01 Wed +1m -0d&amp;gt;&lt;/li>
&lt;/ul>
&lt;p>This example repeats monthly and shows up in the agenda on the day it
is due (with no prior warning). You can set any number of lead days
you want on DEADLINES using -Nd where N is the number of days in
advance the task should show up in the agenda. If no value is
specified the default `org-deadline-warning-days` is used.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TableExportToCSV&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Exporting Tables to CSV&lt;/p>
&lt;p>
I generate org-mode tables with details of task specifications and
record structures for some of my projects. My clients like to use
spreadsheets for this type of detail.&lt;/p>
&lt;p>
It&amp;amp;rsquo;s easy to share the details of the org-mode table by exporting in
HTML but that isn&amp;amp;rsquo;t easy for anyone else to work with if they need to
edit data.&lt;/p>
&lt;p>
To solve this problem I export my table as comma delimited values
(CSV) and then send that to the client (or read it into a spreadsheet
and email the resulting spreadsheet file).&lt;/p>
&lt;p>
Org-mode can export tables as TAB or comma delimited formats. I set
the default format to CSV with:&lt;/p>
&lt;p>
(setq org-table-export-default-format &amp;#34;orgtbl-to-csv&amp;#34;)&lt;/p>
&lt;p>
Exporting to CSV format is the only one I use and this provides the
default so I can just hit RETURN when prompted for the format.&lt;/p>
&lt;p>
To export the following table I put the cursor inside the table and
hit `M-x org-table-export` which prompts for a filename and the format
which defaults to orgtbl-to-csv from the setting above.&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-right&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-right&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-right&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-right&amp;#34;&amp;gt;One&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-right&amp;#34;&amp;gt;Two&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-right&amp;#34;&amp;gt;Three&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;1&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;1&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;2&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;3&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;6&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;5&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;fred&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;kpe&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;mary&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;234.5&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;432.12&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-right&amp;#34;&amp;gt;324.3&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
This creates the file with the following data&lt;/p>
&lt;p>
One,Two,Three
1,1,2
3,6,5
fred,kpe,mary
234.5,432.12,324.3&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;MinimizeFrames&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Minimize Emacs Frames&lt;/p>
&lt;p>
Links to emails, web pages, and other files are sprinkled all over my
org files. The following setting control how org-mode handles opening
the link.&lt;/p>
&lt;p>
(setq org-link-frame-setup (quote ((vm . vm-visit-folder)
(gnus . org-gnus-no-new-news)
(file . find-file))))&lt;/p>
&lt;p>
; Use the current window for C-c &amp;#39; source editing
(setq org-src-window-setup &amp;#39;current-window)&lt;/p>
&lt;p>
I like to keep links in the same window so that I don&amp;amp;rsquo;t end up with a
ton of frames in my window manager. I normally work in a full-screen
window and having links open in the same window just works better for
me.&lt;/p>
&lt;p>
If I need to work in multiple files I&amp;amp;rsquo;ll manually create the second
frame with `C-x 5 2` or split the window with `C-x 4 2` or `C-X 4 3`.
When I visit files in Emacs I normally want to replace the current
window with the new content.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;LoggingStuff&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Logging stuff&lt;/p>
&lt;p>
Most of my logging is controlled by the global `org-todo-keywords`&lt;/p>
&lt;p>
My logging settings are set as follows:&lt;/p>
&lt;p>
(setq org-log-done (quote time))
(setq org-log-into-drawer t)
(setq org-log-state-notes-insert-after-drawers nil)&lt;/p>
&lt;p>
My `org-todo-keywords` are set as follows:&lt;/p>
&lt;p>
(setq org-todo-keywords
(quote ((sequence &amp;#34;TODO(t)&amp;#34; &amp;#34;NEXT(n)&amp;#34; &amp;#34;|&amp;#34; &amp;#34;DONE(d)&amp;#34;)
(sequence &amp;#34;WAITING(w@/!)&amp;#34; &amp;#34;HOLD(h@/!)&amp;#34; &amp;#34;|&amp;#34; &amp;#34;CANCELLED(c@/!)&amp;#34; &amp;#34;PHONE&amp;#34; &amp;#34;MEETING&amp;#34;))))&lt;/p>
&lt;p>
This adds a log entry whenever a task moves to any of the following states:&lt;/p>
&lt;ul>
&lt;li>to or out of `DONE` status&lt;/li>
&lt;li>to `WAITING` status (with a note) or out of `WAITING` status&lt;/li>
&lt;li>to `HOLD` status&lt;/li>
&lt;li>to `CANCELLED` status (with a note) or out of `CANCELLED` status&lt;/li>
&lt;/ul>
&lt;p>I keep clock times and states in the `LOGBOOK` drawer to keep my tasks
uncluttered. If a task is WAITING then the reason for why it is
waiting is near the top of the LOGBOOK and unfolding the LOGBOOK
drawer provides that information. From the agenda simply hitting
`SPC` on the task will reveal the LOGBOOK drawer.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;LimitingTimeSpentOnTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Limiting time spent on tasks&lt;/p>
&lt;p>
Org-mode has this great new feature for signalling alarms when the
estimated time for a task is reached. I use this to limit the amount
of time I spend on a task during the day.&lt;/p>
&lt;p>
As an example, I&amp;amp;rsquo;ve been working on this document for over two months
now. I want to get it finished but I can&amp;amp;rsquo;t just work on it solely
until it&amp;amp;rsquo;s done because then nothing else gets done. I want to do a
little bit every day but limit the total amount of time I spend
documenting org-mode to an hour a day.&lt;/p>
&lt;p>
To this end I have a task&lt;/p>
&lt;ul>
&lt;li>
&lt;p>NEXT Document my use of org-mode
:LOGBOOK:…&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The task has an estimated effort of 1 hour and when I clock in the
task it gives me a total in the mode-line like this&lt;/p>
&lt;p>
–:** org-mode.org 91% (2348,73) Git:master (Org Fly yas Font)—–[0:35/1:00 (Document my use of org-mode)]——-&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve spent 35 minutes of my 1 hour so far today on this document and
other help on IRC.&lt;/p>
&lt;p>
I set up an alarm so the Star Trek door chime goes off when the
total estimated time is hit. (Yes I&amp;amp;rsquo;m a Trekkie :) )&lt;/p>
&lt;p>
(setq org-clock-sound &amp;#34;/usr/local/lib/tngchime.wav&amp;#34;)&lt;/p>
&lt;p>
When the one hour time limit is hit the alarm sound goes off and a
message states that I should be done working on this task. If I
switch tasks and try to clock in this task again I get the sound each
and every time I clock in the task. This nags me to go work on
something else :)&lt;/p>
&lt;p>
You can use similar setups for repeated tasks. By default the last
repeat time is recorded as a property when a repeating task is marked
done. For repeating tasks the mode-line clock total counts since the
last repeat time by default. This lets you accumulate time over
multiple days and counts towards your estimated effort limit.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HabitTracking&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Habit Tracking&lt;/p>
&lt;p>
John Wiegley recently added support for Habit tracking to org-mode.&lt;/p>
&lt;p>
I have lots of habits (some bad) but I&amp;amp;rsquo;d still like to improve and
build new good habits. This is what habit tracking is for. It shows
a graph on the agenda of how well you have been doing on developing
your habits.&lt;/p>
&lt;p>
I have habits like:&lt;/p>
&lt;ul>
&lt;li>Hand wash the dishes&lt;/li>
&lt;li>30 minute brisk walk&lt;/li>
&lt;li>Clean the house&lt;/li>
&lt;/ul>
&lt;p>etc. and most of these need a push to get done regularly. Logging of
the done state needs to be enabled for habit tracking to work.&lt;/p>
&lt;p>
A habit is just like a regular task except it has a special `PROPERTY`
value setting and a special `SCHEDULED` date entry like this:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>TODO Update Org Mode Doc
SCHEDULED: &amp;lt;2009-11-21 Sat .+7d/30d&amp;gt;
[2009-11-14 Sat 11:45]&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>This marks the task as a habit and separates it from the regular task
display on the agenda. When you mark a habit done it shows up on your
daily agenda the next time based on the first interval in the
SCHEDULED entry (`.+7d`)&lt;/p>
&lt;p>
The special `SCHEDULED` entry states that I want to do this every day
but at least every 2 days. If I go 3 days without marking it DONE it
shows up RED on the agenda indicating that I have been neglecting this
habit.&lt;/p>
&lt;p>
The world isn&amp;amp;rsquo;t going to end if you neglect your habits. You can hide
and display habits quickly using the `K` key on the agenda.&lt;/p>
&lt;p>
These are my settings for habit tracking.&lt;/p>
&lt;p>
; Enable habit tracking (and a bunch of other modules)
(setq org-modules (quote (org-bbdb
org-bibtex
org-crypt
org-gnus
org-id
org-info
org-jsinfo
org-habit
org-inlinetask
org-irc
org-mew
org-mhe
org-protocol
org-rmail
org-vm
org-wl
org-w3m)))&lt;/p>
&lt;p>
; position the habit graph on the agenda to the right of the default
(setq org-habit-graph-column 50)&lt;/p>
&lt;p>
During the day I&amp;amp;rsquo;ll turn off the habit display in the agenda with `K`.
This is a persistent setting and since I leave my Emacs running for
days at a time my habit display doesn&amp;amp;rsquo;t come back. To make sure I
look at the habits daily I have the following settings to redisplay
the habits in the agenda each day. This turns the habit display on
again at 6AM each morning.&lt;/p>
&lt;p>
(run-at-time &amp;#34;06:00&amp;#34; 86400 &amp;#39;(lambda () (setq org-habit-show-habits t)))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HabitsLogDone&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Habits only log DONE state changes&lt;/p>
&lt;p>
I tend to keep habits under a level 1 task `* Habits` with a special
logging property that only logs changes to the `DONE` state. This
allows me to cancel a habit and not record a timestamp for it since
that messes up the habit graph. Cancelling a habit just to get it off
my agenda because it&amp;amp;rsquo;s undoable (like get up before 6AM) should not
mark the habit as done today. I only cancel habits that repeat every
day.&lt;/p>
&lt;p>
My habit tasks look as follows - and I tend to have one in every org
file that can have habits defined&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Habits&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&amp;lt;a id=&amp;#34;AutoRevertMode&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Auto revert mode&lt;/p>
&lt;p>
I use git to synchronize my org-mode files between my laptop and my
workstation. This normally requires saving all the current changes,
pushing to a bare repo, and fetching on the other system. After that
I need to revert all of my org-mode files to get the updated
information.&lt;/p>
&lt;p>
I used to use `org-revert-all-org-buffers` but have since discovered
`global-auto-revert-mode`. With this setting any files that change on
disk where there are no changes in the buffer automatically revert to
the on-disk version.&lt;/p>
&lt;p>
This is perfect for synchronizing my org-mode files between systems.&lt;/p>
&lt;p>
(global-auto-revert-mode t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HandlingEncryption&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Handling Encryption&lt;/p>
&lt;p>
I used to keep my encrypted data like account passwords in a separate
GPG encrypted file. Now I keep them in my org-mode files with a
special tag instead. Encrypted data is kept in the org-mode file that
it is associated with.&lt;/p>
&lt;p>
`org-crypt` allows you to tag headings with a special tag `crypt` and
org-mode can keep data in these headings encrypted when saved to disk.
You decrypt the heading temporarily when you need access to the data
and org-mode re-encrypts the heading as soon as you save the file.&lt;/p>
&lt;p>
I use the following setup for encryption:&lt;/p>
&lt;p>
(require &amp;#39;org-crypt)
; Encrypt all entries before saving
(org-crypt-use-before-save-magic)
(setq org-tags-exclude-from-inheritance (quote (&amp;#34;crypt&amp;#34;)))
; GPG key to use for encryption
(setq org-crypt-key &amp;#34;F0B66B40&amp;#34;)&lt;/p>
&lt;p>
`M-x org-decrypt-entry` will prompt for the passphrase associated with
your encryption key and replace the encrypted data where the point is
with the plaintext details for your encrypted entry. As soon as you
save the file the data is re-encrypted for your key. Encrypting does
not require prompting for the passphrase - that&amp;amp;rsquo;s only for looking at
the plain text version of the data.&lt;/p>
&lt;p>
I tend to have a single level 1 encrypted entry per file (like `* Passwords`). I prevent the `crypt` tag from using inheritance so that
I don&amp;amp;rsquo;t have encrypted data inside encrypted data. I found `M-x org-decrypt-entries` prompting for the passphrase to decrypt data over
and over again (once per entry to decrypt) too inconvenient.&lt;/p>
&lt;p>
I leave my entries encrypted unless I have to look up data - I decrypt
on demand and then save the file again to re-encrypt the data. This
keeps the data in plain text as short as possible.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AutoSaveFiles&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### Auto Save Files&lt;/p>
&lt;p>
Emacs temporarily saves your buffer in an autosave file while you are
editing your org buffer and a sufficient number of changes have
accumulated. If you have decrypted subtrees in your buffer these will
be written to disk in plain text which possibly leaks sensitive information.
To combat this org-mode now asks if you want to disable the autosave
functionality in this buffer.&lt;/p>
&lt;p>
Personally I really like the autosave feature. 99% of the time my encrypted
entries are perfectly safe to write to the autosave file since they are
still encrypted. I tend to decrypt an entry, read the details for what
I need to look up and then immediately save the file again with `C-x C-s`
which re-encrypts the entry immediately. This pretty much guarantees that
my autosave files never have decrypted data stored in them.&lt;/p>
&lt;p>
I disable the default org crypt auto-save setting as follows:&lt;/p>
&lt;p>
(setq org-crypt-disable-auto-save nil)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;SpeedCommands&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Speed Commands&lt;/p>
&lt;p>
There&amp;amp;rsquo;s an exciting feature called `org-speed-commands` in the
org-mode.&lt;/p>
&lt;p>
Speed commands allow access to frequently used commands when on the
beginning of a headline - similar to one-key agenda commands. Speed
commands are user configurable and org-mode provides a good set of
default commands.&lt;/p>
&lt;p>
I have the following speed commands set up in addition to the
defaults. I don&amp;amp;rsquo;t use priorities so I override the default settings
for the 1, 2, and 3 keys. I also disable cycling with &amp;amp;rsquo;c&amp;amp;rsquo; and add &amp;amp;rsquo;q&amp;amp;rsquo;
as a quick way to get back to the agenda and update the current view.&lt;/p>
&lt;p>
(setq org-use-speed-commands t)
(setq org-speed-commands-user (quote ((&amp;#34;0&amp;#34; . ignore)
(&amp;#34;1&amp;#34; . ignore)
(&amp;#34;2&amp;#34; . ignore)
(&amp;#34;3&amp;#34; . ignore)
(&amp;#34;4&amp;#34; . ignore)
(&amp;#34;5&amp;#34; . ignore)
(&amp;#34;6&amp;#34; . ignore)
(&amp;#34;7&amp;#34; . ignore)
(&amp;#34;8&amp;#34; . ignore)
(&amp;#34;9&amp;#34; . ignore)&lt;/p>
&lt;p>
(&amp;#34;a&amp;#34; . ignore)
(&amp;#34;d&amp;#34; . ignore)
(&amp;#34;h&amp;#34; . bh/hide-other)
(&amp;#34;i&amp;#34; progn
(forward-char 1)
(call-interactively &amp;#39;org-insert-heading-respect-content))
(&amp;#34;k&amp;#34; . org-kill-note-or-show-branches)
(&amp;#34;l&amp;#34; . ignore)
(&amp;#34;m&amp;#34; . ignore)
(&amp;#34;q&amp;#34; . bh/show-org-agenda)
(&amp;#34;r&amp;#34; . ignore)
(&amp;#34;s&amp;#34; . org-save-all-org-buffers)
(&amp;#34;w&amp;#34; . org-refile)
(&amp;#34;x&amp;#34; . ignore)
(&amp;#34;y&amp;#34; . ignore)
(&amp;#34;z&amp;#34; . org-add-note)&lt;/p>
&lt;p>
(&amp;#34;A&amp;#34; . ignore)
(&amp;#34;B&amp;#34; . ignore)
(&amp;#34;E&amp;#34; . ignore)
(&amp;#34;F&amp;#34; . bh/restrict-to-file-or-follow)
(&amp;#34;G&amp;#34; . ignore)
(&amp;#34;H&amp;#34; . ignore)
(&amp;#34;J&amp;#34; . org-clock-goto)
(&amp;#34;K&amp;#34; . ignore)
(&amp;#34;L&amp;#34; . ignore)
(&amp;#34;M&amp;#34; . ignore)
(&amp;#34;N&amp;#34; . bh/narrow-to-org-subtree)
(&amp;#34;P&amp;#34; . bh/narrow-to-org-project)
(&amp;#34;Q&amp;#34; . ignore)
(&amp;#34;R&amp;#34; . ignore)
(&amp;#34;S&amp;#34; . ignore)
(&amp;#34;T&amp;#34; . bh/org-todo)
(&amp;#34;U&amp;#34; . bh/narrow-up-one-org-level)
(&amp;#34;V&amp;#34; . ignore)
(&amp;#34;W&amp;#34; . bh/widen)
(&amp;#34;X&amp;#34; . ignore)
(&amp;#34;Y&amp;#34; . ignore)
(&amp;#34;Z&amp;#34; . ignore))))&lt;/p>
&lt;p>
(defun bh/show-org-agenda ()
(interactive)
(if org-agenda-sticky
(switch-to-buffer &amp;#34;&lt;strong>Org Agenda( )&lt;/strong>&amp;#34;)
(switch-to-buffer &amp;#34;&lt;strong>Org Agenda&lt;/strong>&amp;#34;))
(delete-other-windows))&lt;/p>
&lt;p>
The variable `org-speed-commands-default` sets a lot of useful
defaults for speed command keys. The default keys I use the most are
`I` and `O` for clocking in and out and `t` to change todo state.&lt;/p>
&lt;p>
`J` jumps to the current or last clocking task.&lt;/p>
&lt;p>
`c` and `C` are disabled so they self insert. I use `TAB` and `S-TAB`
for cycling - I don&amp;amp;rsquo;t need `c` and `C` as well. `TAB` works
everywhere while `c` and `C` only works on the headline and sometimes
I accidentally cycle when I don&amp;amp;rsquo;t intend to.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgProtocol&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Org Protocol&lt;/p>
&lt;p>
[Org protocol](&lt;a href="http://orgmode.org/worg/org-contrib/org-protocol.php)">http://orgmode.org/worg/org-contrib/org-protocol.php)&lt;/a> is a great way to create capture notes in org-mode from
other applications. I use this to create tasks to review interesting
web pages I visit in Firefox.&lt;/p>
&lt;p>
I have a special capture template set up for org-protocol to use (set
up with the `w` key).&lt;/p>
&lt;p>
My org-mode setup for org-protocol is really simple. It enables
org-protocol and creates a single org-protocol capture template as
described in [Capture Templates](#CaptureTemplates).&lt;/p>
&lt;p>
(require &amp;#39;org-protocol)&lt;/p>
&lt;p>
The bulk of the setup is in the Firefox application so that C-c c on a
page in Firefox will trigger the org-protocol capture template with
details of the page I&amp;amp;rsquo;m currently viewing in firefox.&lt;/p>
&lt;p>
I set up org-protocol in firefox as described in [Keybindings for Firefox](&lt;a href="http://orgmode.org/worg/org-contrib/org-protocol.php#sec-9).">http://orgmode.org/worg/org-contrib/org-protocol.php#sec-9).&lt;/a>&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;RequireFinalNewline&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Require a final newline when saving files&lt;/p>
&lt;p>
The following setting was mainly for editing yasnippets where I want to
be able to expand a snippet but stay on the same line. I used this
mainly for replacing short strings or initials with full names for
people during meeting notes. I now use `abbrev-mode-` for this and
no longer need this setting.&lt;/p>
&lt;p>
(setq require-final-newline nil)&lt;/p>
&lt;p>
When I save a file in Emacs I want a final newline - this fits better
with the source code projects I work on. This is the setting I use now:&lt;/p>
&lt;p>
(setq require-final-newline t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;InsertInactiveTimestamps&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Insert inactive timestamps and exclude from export&lt;/p>
&lt;p>
I insert inactive timestamps when working on org-mode files.&lt;/p>
&lt;p>
For remember tasks the timestamp is in the remember template but for regular
structure editing I want the timestamp automatically added when I create the headline.&lt;/p>
&lt;p>
I have a function that is run by an org-mode hook to automatically insert the inactive
timestamp whenever a headline is created.&lt;/p>
&lt;p>
Adding the timestamp can be controlled by `f9 T` which toggles the
creation of the timestamp on and off for new headlines.&lt;/p>
&lt;p>
(defvar bh/insert-inactive-timestamp t)&lt;/p>
&lt;p>
(defun bh/toggle-insert-inactive-timestamp ()
(interactive)
(setq bh/insert-inactive-timestamp (not bh/insert-inactive-timestamp))
(message &amp;#34;Heading timestamps are %s&amp;#34; (if bh/insert-inactive-timestamp &amp;#34;ON&amp;#34; &amp;#34;OFF&amp;#34;)))&lt;/p>
&lt;p>
(defun bh/insert-inactive-timestamp ()
(interactive)
(org-insert-time-stamp nil t t nil nil nil))&lt;/p>
&lt;p>
(defun bh/insert-heading-inactive-timestamp ()
(save-excursion
(when bh/insert-inactive-timestamp
(org-return)
(org-cycle)
(bh/insert-inactive-timestamp))))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-insert-heading-hook &amp;#39;bh/insert-heading-inactive-timestamp &amp;#39;append)&lt;/p>
&lt;p>
Everytime I create a heading with `M-RET` or `M-S-RET` the hook invokes the function
and it inserts an inactive timestamp like this&lt;/p>
&lt;ul>
&lt;li>&amp;lt;point here&amp;gt;
[2009-11-22 Sun 18:45]&lt;/li>
&lt;/ul>
&lt;p>This keeps an automatic record of when tasks are created which I find very useful.&lt;/p>
&lt;p>
I also have a short cut key defined to invoke this function on demand so that I can
insert the inactive timestamp anywhere on demand.&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;&amp;lt;f9&amp;gt; t&amp;#34;) &amp;#39;bh/insert-inactive-timestamp)&lt;/p>
&lt;p>
To prevent the timestamps from being exported in documents I use the following setting&lt;/p>
&lt;p>
(setq org-export-with-timestamps nil)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ReturnFollowsLink&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Return follows links&lt;/p>
&lt;p>
The following setting make `RET` insert a new line instead of opening
links. This setting is a love-hate relationship for me. When it
first came out I immediately turned it off because I wanted to insert
new lines in front of my links and `RET` would open the link instead
which at the time I found extremely annoying. Since then I&amp;amp;rsquo;ve
retrained my fingers to hit RET at the end of the previous line.&lt;/p>
&lt;p>
(setq org-return-follows-link t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HighlightClockOvertime&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Highlight clock when running overtime&lt;/p>
&lt;p>
The current clocking task is displayed on the modeline. If this has
an estimated time and we run over the limit I make this stand out on
the modeline by changing the background to red as follows&lt;/p>
&lt;p>
(custom-set-faces
;; custom-set-faces was added by Custom.
;; If you edit it by hand, you could mess it up, so be careful.
;; Your init file should contain only one such instance.
;; If there is more than one, they won&amp;#39;t work right.
&amp;#39;(org-mode-line-clock ((t (:foreground &amp;#34;red&amp;#34; :box (:line-width -1 :style released-button)))) t))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;MeetingNotes&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Meeting Notes&lt;/p>
&lt;p>
I take meeting notes with org-mode. I record meeting conversations in
point-form using org-mode lists. If action items are decided on in
the meeting I&amp;amp;rsquo;ll denote them with a bullet and a TODO: or DONE: flag.&lt;/p>
&lt;p>
A meeting is a task and it is complete when the meeting is over. The
body of the task records all of the interesting meeting details. If
TODO items are created in the meeting I make separate TODO tasks from
those.&lt;/p>
&lt;p>
I use the function `bh/prepare-meeting-notes` to prepare the meeting
notes for emailing to the participants (in a fixed-width font like
&amp;amp;ldquo;Courier New&amp;amp;rdquo;). As soon as the meeting is over the notes are
basically ready for distribution &amp;amp;#x2013; there&amp;amp;rsquo;s not need to waste lots of
time rewriting the minutes before they go out. I haven&amp;amp;rsquo;t bothered
with fancy HTML output &amp;amp;#x2013; the content is more important than the
style.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>TODO Sample Meeting&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Attendees&lt;/p>
&lt;ul>
&lt;li class="unchecked">Joe&lt;/li>
&lt;li class="checked">Larry&lt;/li>
&lt;li class="checked">Mary&lt;/li>
&lt;li class="checked">Fred&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Joe is on vacation this week&lt;/li>
&lt;li>
&lt;p>Status Updates&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Larry&lt;/p>
&lt;ul>
&lt;li>did this&lt;/li>
&lt;li>and that&lt;/li>
&lt;li>TODO: Needs to follow up on this&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Mary&lt;/p>
&lt;ul>
&lt;li>got a promotion for her recent efforts&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Fred&lt;/p>
&lt;ul>
&lt;li>completed all his tasks 2 days early&lt;/li>
&lt;li>needs more work&lt;/li>
&lt;li>DONE: everything&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>TODO Sample Meeting&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Attendees&lt;/p>
&lt;ul>
&lt;li class="unchecked">Joe&lt;/li>
&lt;li class="checked">Larry&lt;/li>
&lt;li class="checked">Mary&lt;/li>
&lt;li class="checked">Fred&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Joe is on vacation this week&lt;/li>
&lt;li>
&lt;p>Status Updates&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Larry&lt;/p>
&lt;ul>
&lt;li>did this&lt;/li>
&lt;li>and that&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; TODO: Needs to follow up on this&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Mary&lt;/p>
&lt;ul>
&lt;li>got a promotion for her recent efforts&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Fred&lt;/p>
&lt;ul>
&lt;li>completed all his tasks 2 days early&lt;/li>
&lt;li>needs more work&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; DONE: everything&lt;/p>
&lt;p>
Here is the formatting function. Just highlight the region for the
notes and it turns tabs into spaces, and highlights todo items. The
resulting notes are in the kill buffer ready to paste to another
application.&lt;/p>
&lt;p>
(defun bh/prepare-meeting-notes ()
&amp;#34;Prepare meeting notes for email
Take selected region and convert tabs to spaces, mark TODOs with leading &amp;gt;&amp;gt;&amp;gt;, and copy to kill ring for pasting&amp;#34;
(interactive)
(let (prefix)
(save-excursion
(save-restriction
(narrow-to-region (region-beginning) (region-end))
(untabify (point-min) (point-max))
(goto-char (point-min))
(while (re-search-forward &amp;#34;^\\( *-\\\) \\(TODO\\|DONE\\): &amp;#34; (point-max) t)
(replace-match (concat (make-string (length (match-string 1)) ?&amp;gt;) &amp;#34; &amp;#34; (match-string 2) &amp;#34;: &amp;#34;)))
(goto-char (point-min))
(kill-ring-save (point-min) (point-max))))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HighlightPersistAfterEdit&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Remove Highlights after changes&lt;/p>
&lt;p>
I&amp;amp;rsquo;m finding I use org-occur `C-c / /` a lot when trying to find
details in my org-files. The following setting keeps the highlighted
results of the search even after modifying the text. This allows me
to edit the file without having to reissue the org-occur command to
find the other matches in my file. `C-c C-c` removes the highlights.&lt;/p>
&lt;p>
(setq org-remove-highlights-with-change nil)&lt;/p>
&lt;p>
Setting this variable to t will automatically remove the yellow
highlights as soon as the buffer is modified.&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve gone back to automatically removing the highlights with change
which is the default setting. I&amp;amp;rsquo;ve been using regular `M-x occur` a
lot more lately to find things in any Emacs buffer.&lt;/p>
&lt;p>
(setq org-remove-highlights-with-change t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgModeInfoDocumentation&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Getting up to date org-mode info documentation&lt;/p>
&lt;p>
I use the org-mode info documentation from the git repository so I set
up emacs to find the info files from git before the regular (out of
date) system versions.&lt;/p>
&lt;p>
(add-to-list &amp;#39;Info-default-directory-list &amp;#34;~/git/org-mode/doc&amp;#34;)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;FutureDates&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Prefer future dates or not?&lt;/p>
&lt;p>
By default org-mode prefers dates in the future. This means that if
today&amp;amp;rsquo;s date is May 2 and you enter a date for April 30th (2 days ago)
org-mode will jump to April 30th of next year. I used to find this
annoying when I wanted to look at what happened last Friday since I have
to specify the year. Now I&amp;amp;rsquo;ve trained my fingers to go back relatively
in the agenda with `b` so this isn&amp;amp;rsquo;t really an issue for me anymore.&lt;/p>
&lt;p>
To make org-mode prefer the current year when entering dates set
the following variable&lt;/p>
&lt;p>
(setq org-read-date-prefer-future nil)&lt;/p>
&lt;p>
I now have this variable set to `&amp;#39;time` so times before now (with no
date specified) will default to tomorrow..&lt;/p>
&lt;p>
(setq org-read-date-prefer-future &amp;#39;time)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ListBullets&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Automatically change list bullets&lt;/p>
&lt;p>
I take point-form notes during meetings. Having the same list bullet
for every list level makes it hard to read the details when lists are
indented more than 3 levels.&lt;/p>
&lt;p>
Org-mode has a way to automatically change the list bullets when you
change list levels.&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Current List Bullet&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Next indented list bullet&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;+&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;\*&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;1.&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;1)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;A)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;B)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;a)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;b)&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;A.&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;B.&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;a.&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;b.&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;-&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
(setq org-list-demote-modify-bullet (quote ((&amp;#34;+&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;*&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;1.&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;1)&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;A)&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;B)&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;a)&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;b)&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;A.&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;B.&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;a.&amp;#34; . &amp;#34;-&amp;#34;)
(&amp;#34;b.&amp;#34; . &amp;#34;-&amp;#34;))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;IndentationOnTagsView&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Remove indentation on agenda tags view&lt;/p>
&lt;p>
I don&amp;amp;rsquo;t like the indented view for sublevels on a tags match in the
agenda but I want to see all matching tasks (including sublevels) when
I do a agenda tag search (`F12 m`).&lt;/p>
&lt;p>
To make all of the matched headings for a tag show at the same level
in the agenda set the following variable:&lt;/p>
&lt;p>
(setq org-tags-match-list-sublevels t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;FontifySrcBlocksNatively&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Fontify source blocks natively&lt;/p>
&lt;p>
I use babel for including source blocks in my documents with&lt;/p>
&lt;div class="src src-lang">
&lt;pre tabindex="0">&lt;code class="language-lang" data-lang="lang">, ...&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
where LANG specifies the language to use (ditaa, dot, sh, emacs-lisp,
etc) This displays the language contents fontified in both the
org-mode source buffer and the exported document.&lt;/p>
&lt;p>
See this [Git Repository synchronization](#git-sync) in this document for an example..&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AgendaPersistentFilters&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Agenda persistent filters&lt;/p>
&lt;p>
This is a great feature! Persistent agenda filters means if you limit
a search with `/ TAB SomeTag` the agenda remembers this filter until
you change it.&lt;/p>
&lt;p>
Enable persistent filters with the following variable&lt;/p>
&lt;p>
(setq org-agenda-persistent-filter t)&lt;/p>
&lt;p>
The current filter is displayed in the modeline as `{+SomeTag}` so you
can easily see what filter currently applies to your agenda view.&lt;/p>
&lt;p>
I use this with `FILETAGS` to limit the displayed results to a single
client or context.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TagFlaggedEntries&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Add tags for flagged entries&lt;/p>
&lt;p>
Everyone so often something will come along that is really important
and you know you want to be able to find it back fast sometime in the
future.&lt;/p>
&lt;p>
For these types of notes and tasks I add a special `:FLAGGED:` tag.
This tag gets a special fast-key `?` which matches the search key in
the agenda for flagged items. See [Tags](#OrgTagAlist) for the setup of
`org-tag-alist` for the `FLAGGED` entry.&lt;/p>
&lt;p>
Finding flagged entries is then simple - just `F12 ?` and you get them all.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;MailLinksOpenComposeMail&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Mail links open compose-mail&lt;/p>
&lt;p>
The following setting makes org-mode open `mailto:` links
using compose-mail.&lt;/p>
&lt;p>
(setq org-link-mailto-program (quote (compose-mail &amp;#34;%a&amp;#34; &amp;#34;%s&amp;#34;)))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;MailingSubtrees&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Composing mail from org mode subtrees&lt;/p>
&lt;p>
It&amp;amp;rsquo;s possible to create mail from an org-mode subtree. I use `C-c M-o` to start an email message with the details filled in from the
current subtree. I use this for repeating reminder tasks where I need
to send an email to someone else. The email contents are already
contained in the org-mode subtree and all I need to do is `C-c M-o`
and any minor edits before sending it off.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;SmexAndIdo&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Use smex for M-x ido-completion&lt;/p>
&lt;p>
I discovered smex for IDO-completion for M-x commands after reading a
post of the org-mode mailing list. I actually use M-x a lot now
because IDO completion is so easy.&lt;/p>
&lt;p>
Here&amp;amp;rsquo;s the smex setup I use&lt;/p>
&lt;p>
(add-to-list &amp;#39;load-path (expand-file-name &amp;#34;~/.emacs.d&amp;#34;))
(require &amp;#39;smex)
(smex-initialize)&lt;/p>
&lt;p>
(global-set-key (kbd &amp;#34;M-x&amp;#34;) &amp;#39;smex)
(global-set-key (kbd &amp;#34;C-x x&amp;#34;) &amp;#39;smex)
(global-set-key (kbd &amp;#34;M-X&amp;#34;) &amp;#39;smex-major-mode-commands)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;BookmarksFastNavigation&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Use Emacs bookmarks for fast navigation&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve started using emacs bookmarks to save a location and return to it easily.
Normally I want to get back to my currently clocking task and that&amp;amp;rsquo;s easy - just hit `F11`.
When I&amp;amp;rsquo;m working down a long checklist I find it convenient to set a bookmark on the next
item to check, then go away and work on it, and return to the checkbox to mark it done.&lt;/p>
&lt;p>
I use Emacs bookmarks for this setup as follows:&lt;/p>
&lt;p>
;; Bookmark handling
;;
(global-set-key (kbd &amp;#34;&amp;lt;C-f6&amp;gt;&amp;#34;) &amp;#39;(lambda () (interactive) (bookmark-set &amp;#34;SAVED&amp;#34;)))
(global-set-key (kbd &amp;#34;&amp;lt;f6&amp;gt;&amp;#34;) &amp;#39;(lambda () (interactive) (bookmark-jump &amp;#34;SAVED&amp;#34;)))&lt;/p>
&lt;p>
When I want to save the current location I just hit `C-f6` and then I
can return to it with `f6` anytime. I overwrite the same bookmark
each time I set a new position.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgMimeMail&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Using org-mime to email&lt;/p>
&lt;p>
I&amp;amp;rsquo;m experimenting with sending mime mail from org. I&amp;amp;rsquo;ve added `C-c M=o` key bindings
in the `org-mode-hook` to generate mail from an org-mode subtree.&lt;/p>
&lt;p>
(require &amp;#39;org-mime)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;StateChangeDetailsInAgenda&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Remove multiple state change log details from the agenda&lt;/p>
&lt;p>
I skip multiple timestamps for the same entry in the agenda view with the following setting.&lt;/p>
&lt;p>
(setq org-agenda-skip-additional-timestamps-same-entry t)&lt;/p>
&lt;p>
This removes the clutter of extra state change log details when multiple timestamps
exist in a single entry.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OldTableReferences&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Drop old style references in tables&lt;/p>
&lt;p>
I drop the old A3/B4 style references from tables when editing with the
following setting.&lt;/p>
&lt;p>
(setq org-table-use-standard-references (quote from))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;SystemSettingsForApplicationSelection&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Use system settings for file-application selection&lt;/p>
&lt;p>
To get consistent applications for opening tasks I set the `org-file-apps` variable as follows:&lt;/p>
&lt;p>
(setq org-file-apps (quote ((auto-mode . emacs)
(&amp;#34;\\.mm\\&amp;#39;&amp;#34; . system)
(&amp;#34;\\.x?html?\\&amp;#39;&amp;#34; . system)
(&amp;#34;\\.pdf\\&amp;#39;&amp;#34; . system))))&lt;/p>
&lt;p>
This uses the entries defined in my system `mailcap` settings when
opening file extensions. This gives me consistent behaviour when
opening an link to some HTML file with `C-c C-o` or when previewing an export.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CurrentWindowForAgenda&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Use the current window for the agenda&lt;/p>
&lt;p>
; Overwrite the current window with the agenda
(setq org-agenda-window-setup &amp;#39;current-window)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;DeleteIdsWhenCloning&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Delete IDs when cloning&lt;/p>
&lt;p>
(setq org-clone-delete-id t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;CyclePlainLists&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Cycling plain lists&lt;/p>
&lt;p>
Org mode can fold (cycle) plain lists.&lt;/p>
&lt;p>
(setq org-cycle-include-plain-lists t)&lt;/p>
&lt;p>
I find this setting useful when I have repeating tasks with lots of sublists with
checkboxes. I can fold the completed list entries and focus on what is remaining easily.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ShowSrcBlockSyntax&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Showing source block syntax highlighting&lt;/p>
&lt;p>
It is possible to display org-mode source blocks fontified in their
native mode. This allows colourization of keywords for C and shell
script source etc. If I edit the source I use `C-c &amp;#39;` (control-c single
quote) to bring up the source window which is then rendered with
syntax highlighting in the native mode. This setting also shows the
syntax highlighting when viewing in the org-mode buffer.&lt;/p>
&lt;p>
(setq org-src-fontify-natively t)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;StructureTemplateBlocks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Inserting Structure Template Blocks&lt;/p>
&lt;p>
There is a shortcut key sequence in org-mode to insert structure templates
quickly into your org files.&lt;/p>
&lt;p>
I use example and source blocks often in my org files.&lt;/p>
&lt;p>
&amp;lt;table border=&amp;#34;2&amp;#34; cellspacing=&amp;#34;0&amp;#34; cellpadding=&amp;#34;6&amp;#34; rules=&amp;#34;groups&amp;#34; frame=&amp;#34;hsides&amp;#34;&amp;gt;&lt;/p>
&lt;p>
&amp;lt;colgroup&amp;gt;
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;&lt;/p>
&lt;p>
&amp;lt;col class=&amp;#34;org-left&amp;#34; /&amp;gt;
&amp;lt;/colgroup&amp;gt;
&amp;lt;thead&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Key Sequence&amp;lt;/th&amp;gt;
&amp;lt;th scope=&amp;#34;col&amp;#34; class=&amp;#34;org-left&amp;#34;&amp;gt;Expands to&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/thead&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;&amp;lt; s TAB&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;#+begin\_src &amp;amp;#x2026; #+end\_src&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;&lt;/p>
&lt;p>
&amp;lt;tr&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;&amp;lt; e TAB&amp;lt;/td&amp;gt;
&amp;lt;td class=&amp;#34;org-left&amp;#34;&amp;gt;#+begin\_example &amp;amp;#x2026; #+end\_example&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve added a block for saving email text which I copy from MS Outlook at work so I have context
associated with my org-mode tasks.&lt;/p>
&lt;p>
The following lisp makes the blocks lowercase instead of the default upper case in
org-mode.&lt;/p>
&lt;p>
(setq org-structure-template-alist
(quote ((&amp;#34;s&amp;#34; &amp;#34;#+begin_src ?\n\n#+end_src&amp;#34; &amp;#34;&amp;lt;src lang=\&amp;#34;?\&amp;#34;&amp;gt;\n\n&amp;lt;/src&amp;gt;&amp;#34;)
(&amp;#34;e&amp;#34; &amp;#34;#+begin_example\n?\n#+end_example&amp;#34; &amp;#34;&amp;lt;example&amp;gt;\n?\n&amp;lt;/example&amp;gt;&amp;#34;)
(&amp;#34;q&amp;#34; &amp;#34;#+begin_quote\n?\n#+end_quote&amp;#34; &amp;#34;&amp;lt;quote&amp;gt;\n?\n&amp;lt;/quote&amp;gt;&amp;#34;)
(&amp;#34;v&amp;#34; &amp;#34;#+begin_verse\n?\n#+end_verse&amp;#34; &amp;#34;&amp;lt;verse&amp;gt;\n?\n&amp;lt;/verse&amp;gt;&amp;#34;)
(&amp;#34;c&amp;#34; &amp;#34;#+begin_center\n?\n#+end_center&amp;#34; &amp;#34;&amp;lt;center&amp;gt;\n?\n&amp;lt;/center&amp;gt;&amp;#34;)
(&amp;#34;l&amp;#34; &amp;#34;#+begin_latex\n?\n#+end_latex&amp;#34; &amp;#34;&amp;lt;literal style=\&amp;#34;latex\&amp;#34;&amp;gt;\n?\n&amp;lt;/literal&amp;gt;&amp;#34;)
(&amp;#34;L&amp;#34; &amp;#34;#+latex: &amp;#34; &amp;#34;&amp;lt;literal style=\&amp;#34;latex\&amp;#34;&amp;gt;?&amp;lt;/literal&amp;gt;&amp;#34;)
(&amp;#34;h&amp;#34; &amp;#34;#+begin_html\n?\n#+end_html&amp;#34; &amp;#34;&amp;lt;literal style=\&amp;#34;html\&amp;#34;&amp;gt;\n?\n&amp;lt;/literal&amp;gt;&amp;#34;)
(&amp;#34;H&amp;#34; &amp;#34;#+html: &amp;#34; &amp;#34;&amp;lt;literal style=\&amp;#34;html\&amp;#34;&amp;gt;?&amp;lt;/literal&amp;gt;&amp;#34;)
(&amp;#34;a&amp;#34; &amp;#34;#+begin_ascii\n?\n#+end_ascii&amp;#34;)
(&amp;#34;A&amp;#34; &amp;#34;#+ascii: &amp;#34;)
(&amp;#34;i&amp;#34; &amp;#34;#+index: ?&amp;#34; &amp;#34;#+index: ?&amp;#34;)
(&amp;#34;I&amp;#34; &amp;#34;#+include %file ?&amp;#34; &amp;#34;&amp;lt;include file=%file markup=\&amp;#34;?\&amp;#34;&amp;gt;&amp;#34;))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;NextTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## NEXT is for tasks&lt;/p>
&lt;p>
`NEXT` keywords are for &lt;strong>&lt;strong>tasks&lt;/strong>&lt;/strong> and not &lt;strong>&lt;strong>projects&lt;/strong>&lt;/strong>. I&amp;amp;rsquo;ve added a
function to the todo state change hook and clock in hook so that any
parent tasks marked `NEXT` automagically change from `NEXT` to `TODO`
since they are now projects and not tasks.&lt;/p>
&lt;p>
(defun bh/mark-next-parent-tasks-todo ()
&amp;#34;Visit each parent task and change NEXT states to TODO&amp;#34;
(let ((mystate (or (and (fboundp &amp;#39;org-state)
state)
(nth 2 (org-heading-components)))))
(when mystate
(save-excursion
(while (org-up-heading-safe)
(when (member (nth 2 (org-heading-components)) (list &amp;#34;NEXT&amp;#34;))
(org-todo &amp;#34;TODO&amp;#34;)))))))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-after-todo-state-change-hook &amp;#39;bh/mark-next-parent-tasks-todo &amp;#39;append)
(add-hook &amp;#39;org-clock-in-hook &amp;#39;bh/mark-next-parent-tasks-todo &amp;#39;append)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;StartupView&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Startup in folded view&lt;/p>
&lt;p>
Startup in folded view.&lt;/p>
&lt;p>
(setq org-startup-folded t)&lt;/p>
&lt;p>
I used to use content view by default so I could review org subtrees
before archiving but my archiving workflow has changed so I no longer
need this manual step.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AlphabeticalLists&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Allow alphabetical list entries&lt;/p>
&lt;p>
The following setting adds alphabetical lists like&lt;/p>
&lt;ol>
&lt;li>item one&lt;/li>
&lt;li>item two&lt;/li>
&lt;/ol>
&lt;p>(setq org-alphabetical-lists t)&lt;/p>
&lt;p>
In order for filling to work correctly this needs to be set before the
exporters are loaded.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgStructModeForMail&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Using orgstruct mode for mail&lt;/p>
&lt;p>
`orgstruct++-mode` is enabled in `Gnus` message buffers to aid in
creating structured email messages.&lt;/p>
&lt;p>
(add-hook &amp;#39;message-mode-hook &amp;#39;orgstruct++-mode &amp;#39;append)
(add-hook &amp;#39;message-mode-hook &amp;#39;turn-on-auto-fill &amp;#39;append)
(add-hook &amp;#39;message-mode-hook &amp;#39;bbdb-define-all-aliases &amp;#39;append)
(add-hook &amp;#39;message-mode-hook &amp;#39;orgtbl-mode &amp;#39;append)
(add-hook &amp;#39;message-mode-hook &amp;#39;turn-on-flyspell &amp;#39;append)
(add-hook &amp;#39;message-mode-hook
&amp;#39;(lambda () (setq fill-column 72))
&amp;#39;append)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;FlySpellModeChecksSpelling&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Using flyspell mode to reduce spelling errors&lt;/p>
&lt;p>
`flyspell-mode` is enabled for almost everything to help prevent
creating documents with spelling errors.&lt;/p>
&lt;p>
;; flyspell mode for spell checking everywhere
(add-hook &amp;#39;org-mode-hook &amp;#39;turn-on-flyspell &amp;#39;append)&lt;/p>
&lt;p>
;; Disable keys in org-mode
;; C-c [
;; C-c ]
;; C-c ;
;; C-c C-x C-q cancelling the clock (we never want this)
(add-hook &amp;#39;org-mode-hook
&amp;#39;(lambda ()
;; Undefine C-c [ and C-c ] since this breaks my
;; org-agenda files when directories are include It
;; expands the files in the directories individually
(org-defkey org-mode-map &amp;#34;\C-c[&amp;#34; &amp;#39;undefined)
(org-defkey org-mode-map &amp;#34;\C-c]&amp;#34; &amp;#39;undefined)
(org-defkey org-mode-map &amp;#34;\C-c;&amp;#34; &amp;#39;undefined)
(org-defkey org-mode-map &amp;#34;\C-c\C-x\C-q&amp;#34; &amp;#39;undefined))
&amp;#39;append)&lt;/p>
&lt;p>
(add-hook &amp;#39;org-mode-hook
(lambda ()
(local-set-key (kbd &amp;#34;C-c M-o&amp;#34;) &amp;#39;bh/mail-subtree))
&amp;#39;append)&lt;/p>
&lt;p>
(defun bh/mail-subtree ()
(interactive)
(org-mark-subtree)
(org-mime-subtree))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PreserveSourceIndentations&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Preserving source block indentation&lt;/p>
&lt;p>
I do not preserve indentation for source blocks mainly because this doesn&amp;amp;rsquo;t look
nice with indented org-files. The only reason I&amp;amp;rsquo;ve found to preserve indentation is
when TABs in files need to be preserved (e.g. Makefiles). I don&amp;amp;rsquo;t normally edit
these files in org-mode so I leave this setting turned off.&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve changed the default block indentation so that it is not indented
from the text in the org file. This allows editing source blocks in
place without requiring use of `C-c &amp;#39;` so that code lines up correctly.&lt;/p>
&lt;p>
(setq org-src-preserve-indentation nil)
(setq org-edit-src-content-indentation 0)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PreventInvisibleEdits&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Prevent editing invisible text&lt;/p>
&lt;p>
The following setting prevents accidentally editing hidden text when the point is inside a folded region.
This can happen if you are in the body of a heading and globally fold the org-file with `S-TAB`&lt;/p>
&lt;p>
I find invisible edits (and undo&amp;amp;rsquo;s) hard to deal with so now I can&amp;amp;rsquo;t edit invisible text.
`C-c C-r` (org-reveal) will display where the point is if it is buried in invisible text
to allow editing again.&lt;/p>
&lt;p>
(setq org-catch-invisible-edits &amp;#39;error)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;DefaultCodingSystem&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Use utf-8 as default coding system&lt;/p>
&lt;p>
I use `utf-8` as the default coding system for all of my org files.&lt;/p>
&lt;p>
(setq org-export-coding-system &amp;#39;utf-8)
(prefer-coding-system &amp;#39;utf-8)
(set-charset-priority &amp;#39;unicode)
(setq default-process-coding-system &amp;#39;(utf-8-unix . utf-8-unix))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ClockDurationsNoDays&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Keep clock durations in hours&lt;/p>
&lt;p>
The default for clock durations has changed to include days which is
24 hours. At work I like to think of a day as 6 hours of work (the
rest of the time is lost in meetings and other overhead on average) so
displaying clock durations in days doesn&amp;amp;rsquo;t make sense to me.&lt;/p>
&lt;p>
The following setting displays clock durations (from `C-c C-x C-d` in
hours and minutes.&lt;/p>
&lt;p>
(setq org-time-clocksum-format
&amp;#39;(:hours &amp;#34;%d&amp;#34; :require-hours t :minutes &amp;#34;:%02d&amp;#34; :require-minutes t))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;LinkingToTaskCreatesId&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Create unique IDs for tasks when linking&lt;/p>
&lt;p>
The following setting creates a unique task ID for the heading in the
`PROPERTY` drawer when I use `C-c l`. This allows me to move the task
around arbitrarily in my org files and the link to it still works.&lt;/p>
&lt;p>
(setq org-id-link-to-org-use-id &amp;#39;create-if-interactive-and-no-custom-id)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Unused&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
This is a partial list of things I know about but do not use.
`org-mode` is huge with tons of features. There are features out
there that I don&amp;amp;rsquo;t know about yet or haven&amp;amp;rsquo;t explored so this list is
not going to be complete.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;ArchiveSibling&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Archive Sibling&lt;/p>
&lt;p>
This was a cute idea but I find archiving entire complete subtrees
better. I don&amp;amp;rsquo;t mind having a bunch of tasks marked `DONE` (but not
archived)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;StrikeThroughEmphasis&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Strike-through emphasis&lt;/p>
&lt;p>
Strike-through emphasis is just unreadable and tends to only show up
when pasting data from other files into org-mode. This just removes
the strike-through completely which I find a lot nicer.&lt;/p>
&lt;p>
(setq org-emphasis-alist (quote ((&amp;#34;*&amp;#34; bold &amp;#34;&amp;lt;b&amp;gt;&amp;#34; &amp;#34;&amp;lt;/b&amp;gt;&amp;#34;)
(&amp;#34;/&amp;#34; italic &amp;#34;&amp;lt;i&amp;gt;&amp;#34; &amp;#34;&amp;lt;/i&amp;gt;&amp;#34;)
(&amp;#34;_&amp;#34; underline &amp;#34;&amp;lt;span style=\&amp;#34;text-decoration:underline;\&amp;#34;&amp;gt;&amp;#34; &amp;#34;&amp;lt;/span&amp;gt;&amp;#34;)
(&amp;#34;=&amp;#34; org-code &amp;#34;&amp;lt;code&amp;gt;&amp;#34; &amp;#34;&amp;lt;/code&amp;gt;&amp;#34; verbatim)
(&amp;#34;~&amp;#34; org-verbatim &amp;#34;&amp;lt;code&amp;gt;&amp;#34; &amp;#34;&amp;lt;/code&amp;gt;&amp;#34; verbatim))))&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;SubscriptsAndSuperscripts&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Subscripts and Superscripts&lt;/p>
&lt;p>
I don&amp;amp;rsquo;t currently write documents that need subscripts and superscript
support. I disable handling of `_` and `^` for subscript and
superscripts with&lt;/p>
&lt;p>
(setq org-use-sub-superscripts nil)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;Yasnippets&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Yasnippet&lt;/p>
&lt;p>
[Yasnippet](&lt;a href="http://code.google.com/p/yasnippet/)">http://code.google.com/p/yasnippet/)&lt;/a> is cool but I don&amp;amp;rsquo;t use this anymore. I&amp;amp;rsquo;ve replaced
yasnippet with a combination of `abbrev-mode` and `skeletons` which
are available by default in Emacs.&lt;/p>
&lt;p>
The following description applies to yasnippet version 0.5.10. The setup
requirements may have changed with newer versions.&lt;/p>
&lt;p>
You type the snippet name and `TAB` and yasnippet expands the name
with the contents of the snippet text - substituting snippet variables
as appropriate.&lt;/p>
&lt;p>
Yasnippet comes with lots of snippets for programming languages. I
used a few babel related snippets with `org-mode`.&lt;/p>
&lt;p>
I downloaded and installed the unbundled version of yasnippet so that
I can edit the predefined snippets. I unpacked the yasnippet software
in my `~/.emacs.d/plugins` directory, renamed `yasnippet0.5.10` to
`yasnippet` and added the following setup in my `.emacs`:&lt;/p>
&lt;p>
(add-to-list &amp;#39;load-path (expand-file-name &amp;#34;~/.emacs.d/plugins&amp;#34;))&lt;/p>
&lt;p>
(require &amp;#39;yasnippet)
(yas/initialize)
(yas/load-directory &amp;#34;~/.emacs.d/plugins/yasnippet/snippets&amp;#34;)&lt;/p>
&lt;p>
;; Make TAB the yas trigger key in the org-mode-hook and enable flyspell mode and autofill
(add-hook &amp;#39;org-mode-hook
(lambda ()
;; yasnippet
(make-variable-buffer-local &amp;#39;yas/trigger-key)
(org-set-local &amp;#39;yas/trigger-key [tab])
(define-key yas/keymap [tab] &amp;#39;yas/next-field-group)
;; flyspell mode for spell checking everywhere
(flyspell-mode 1)
;; auto-fill mode on
(auto-fill-mode 1)))&lt;/p>
&lt;p>
I used snippets for the following:&lt;/p>
&lt;ul>
&lt;li>`begin` for generic `#+begin_` blocks&lt;/li>
&lt;li>`dot` for graphviz&lt;/li>
&lt;li>`uml` for PlantUML graphics&lt;/li>
&lt;li>`sh` for bash shell scripts&lt;/li>
&lt;li>`elisp` for emacs lisp code&lt;/li>
&lt;li>initials of a person converts to their full name
I used this while taking meeting notes&lt;/li>
&lt;/ul>
&lt;p>Here is the definition for the `begin` snippet:&lt;/p>
&lt;p>
org-mode Yasnippet: ~/.emacs.d/plugins/yasnippet/snippets/text-mode/org-mode/begin&lt;/p>
&lt;p>
#name : #+begin_…#+end_&lt;/p>
&lt;p>#+begin_$1 $2
$0
#+end_$1&lt;/p>
&lt;p>
I used this to create `#+begin_*` blocks like&lt;/p>
&lt;ul>
&lt;li>`#+begin_example`&lt;/li>
&lt;li>`#+begin_src`&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;p>Simply type `begin` and then `TAB` it replaces the `begin` text with
the snippet contents. Then type `src TAB emacs-lisp TAB` and your
snippet block is done. I&amp;amp;rsquo;ve shortened this specific sequence to just
`elisp TAB` since I use it fairly often.&lt;/p>
&lt;p>
Hit `C-c SingeQuote(&amp;#39;)` and insert whatever emacs-lisp code you need.
While in this block you&amp;amp;rsquo;re in a mode that knows how to format and
colourize emacs lisp code as you enter it which is really nice. `C-c SingleQuote(&amp;#39;)` exits back to org-mode. This recognizes any emacs
editing mode so all you have to do is enter the appropriate mode name
for the block.&lt;/p>
&lt;p>
`dot`&lt;/p>
&lt;p>
#dot : #+begin_src dot … #+end_src&lt;/p>
&lt;div class="src src-dot">
&lt;pre tabindex="0">&lt;code class="language-dot" data-lang="dot">$0&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
`uml`&lt;/p>
&lt;p>
#uml : #+begin_src plantuml … #+end_src&lt;/p>
&lt;div class="src src-plantuml">
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">$0&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>
`sh`&lt;/p>
&lt;p>
#sh: #+begin_src sh … #+end_src&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
`elisp`&lt;/p>
&lt;p>
#elisp : #+begin_src emacs-lisp …#+end_src emacs-lisp&lt;/p>
&lt;div class="src src-emacs-lisp">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>$0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This is a great time saver.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HeadingLevelsOddEven&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Show headings at odd levels only or odd-even levels&lt;/p>
&lt;p>
This has been replaced by org-indent-mode&lt;/p>
&lt;p>
I&amp;amp;rsquo;ve converted my files between odd-levels-only and odd-even using the
functions `org-convert-to-odd-levels` and
`org-convert-to-oddeven-levels` functions a number of times. I ended
up going back to odd-even levels to reduce the amount of leading
whitespace on tasks. I didn&amp;amp;rsquo;t find that lining up the headlines and
tasks in odd-levels-only to be all that helpful.&lt;/p>
&lt;p>
(setq org-odd-levels-only nil)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;PropagateStartedToParent&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Propagate STARTED to parent tasks&lt;/p>
&lt;p>
I used to have a `STARTED` and `NEXT` task state. These were
basically the same except `STARTED` indicated that I&amp;amp;rsquo;ve clocked some
time on the task. Since then I&amp;amp;rsquo;ve just moved to using `NEXT` for
this.&lt;/p>
&lt;p>
The following code used to propagate the `STARTED` task up the project
tree but I don&amp;amp;rsquo;t use this anymore.&lt;/p>
&lt;p>
When a task is marked `STARTED` (either manually or by clocking it in) the `STARTED`
state propagates up the tree to any parent tasks of this task that are `TODO` or `NEXT`.
As soon as I work on the first `NEXT` task in a tree the project is also marked `STARTED`.
This helps me keep track of things that are in progress.&lt;/p>
&lt;p>
Here&amp;amp;rsquo;s the setup I use to propagate `STARTED` to parent tasks:&lt;/p>
&lt;p>
;; Mark parent tasks as started
(defvar bh/mark-parent-tasks-started nil)&lt;/p>
&lt;p>
(defun bh/mark-parent-tasks-started ()
&amp;#34;Visit each parent task and change TODO states to STARTED&amp;#34;
(unless bh/mark-parent-tasks-started
(when (equal org-state &amp;#34;STARTED&amp;#34;)
(let ((bh/mark-parent-tasks-started t))
(save-excursion
(while (org-up-heading-safe)
(when (member (nth 2 (org-heading-components)) (list &amp;#34;TODO&amp;#34; &amp;#34;NEXT&amp;#34;))
(org-todo &amp;#34;STARTED&amp;#34;))))))))&lt;/p>
&lt;p>
(add-hook &amp;#39;org-after-todo-state-change-hook &amp;#39;bh/mark-parent-tasks-started &amp;#39;append)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;AutomaticallyClockingTasks&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Automatically clocking tasks&lt;/p>
&lt;p>
I used to spend time on an open source project called BZFlag. During
work for releases I want to clock the time I spend testing the new
BZFlag client. I have a key binding in my window manager that runs a
script which starts the clock on my testing task, runs the BZFlag
client, and on exit resumes the clock on the previous clocking task.&lt;/p>
&lt;p>
The testing task has an ID property of
`dcf55180-2a18-460e-8abb-a9f02f0893be` and the following elisp code
starts the clock on this task.&lt;/p>
&lt;p>
(defun bh/clock-in-bzflagt-task ()
(interactive)
(bh/clock-in-task-by-id &amp;#34;dcf55180-2a18-460e-8abb-a9f02f0893be&amp;#34;))&lt;/p>
&lt;p>
This is invoked by a bash shell script as follows:&lt;/p>
&lt;p>
#!/bin/sh
emacsclient -e &amp;#39;(bh/clock-in-bzflagt-task)&amp;#39;
~/git/bzflag/trunk/bzflag/src/bzflag/bzflag -directory ~/git/bzflag/trunk/bzflag/data $*
emacsclient -e &amp;#39;(bh/resume-clock)&amp;#39;&lt;/p>
&lt;p>
The resume clock function just returns the clock to the previous clocking task&lt;/p>
&lt;p>
(defun bh/resume-clock ()
(interactive)
(if (marker-buffer org-clock-interrupted-task)
(org-with-point-at org-clock-interrupted-task
(org-clock-in))
(org-clock-out)))&lt;/p>
&lt;p>
If no task was clocking `bh/resume-clock` just stops the clock.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;QBuriesAgenda&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## q buries the agenda view buffer&lt;/p>
&lt;p>
With [Sticky Agendas](#StickyAgendas) burying the buffer is the default behaviour for
the `q` key so this is not needed anymore.&lt;/p>
&lt;p>
I change the `q` key in the agenda so instead of killing the agenda buffer
it merely buries it to the end of the buffer list. This allows me to
pull it back up quickly with the `q` speed key or `f9 f9` and regenerate
the results with `g`.&lt;/p>
&lt;p>
(add-hook &amp;#39;org-agenda-mode-hook
(lambda ()
(define-key org-agenda-mode-map &amp;#34;q&amp;#34; &amp;#39;bury-buffer))
&amp;#39;append)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;TaskPriorities&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Task Priorities&lt;/p>
&lt;p>
I use the agenda to figure out what to do work on next. I don&amp;amp;rsquo;t use
priorities at all normally but at work I occasionally get priorities
from my manager. In this case I mark my tasks with the priorities
from the external source just to track the values and force the agenda
to display tasks in the priority order.&lt;/p>
&lt;p>
I use priorities A-E where tasks without a specific priority are lowest priority E.&lt;/p>
&lt;p>
(setq org-enable-priority-commands t)
(setq org-default-priority ?E)
(setq org-lowest-priority ?E)&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;GitSync&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
Editing folded regions of your org-mode file can be hazardous to your
data. My method for dealing with this is to put my org files in a
`Git` source repository.&lt;/p>
&lt;p>
My setup saves all of my org-files every hour and creates a commit
with my changes automatically. This lets me go back in time and view
the state of my org files for any given hour over the lifetime of the
document. I&amp;amp;rsquo;ve used this once or twice to recover data I accidentally
removed while editing folded regions.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;HourlyCommits&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Automatic Hourly Commits&lt;/p>
&lt;p>
My Emacs setup saves all org buffers at 1 minute before the hour using
the following code in my `.emacs`&lt;/p>
&lt;p>
(run-at-time &amp;#34;00:59&amp;#34; 3600 &amp;#39;org-save-all-org-buffers)&lt;/p>
&lt;p>
A `cron` job runs at the top of the hour to commit any changes just
saved by the call to `org-save-all-org-buffers` above. I use a script
to create the commits so that I can run it on demand to easily commit
all modified work when moving from one machine to another.&lt;/p>
&lt;p>
`crontab` details:&lt;/p>
&lt;p>
0 * * * * ~/bin/org-git-sync.sh &amp;gt;/dev/null&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;OrgGitSyncSh&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
### ~/bin/org-git-sync.sh&lt;/p>
&lt;p>
Here is the shell script I use to create a `git` commit for each of my
org-repositories. This loops through multiple repositories and
commits any modified files. I have the following org-mode
repositories:&lt;/p>
&lt;ul>
&lt;li>org
for all of my organization project files and todo lists&lt;/li>
&lt;li>doc-norang.ca
for any changes to documents under &amp;lt;&lt;a href="http://doc.norang.ca/">http://doc.norang.ca/&lt;/a>&amp;gt;&lt;/li>
&lt;li>www.norang.ca
for any changes to my other website &amp;lt;&lt;a href="http://www.norang.ca/">http://www.norang.ca/&lt;/a>&amp;gt;&lt;/li>
&lt;/ul>
&lt;p>This script does not create empty commits - `git` only creates a commit
if something was modified.&lt;/p>
&lt;p>
#!/bin/sh&lt;/p>
&lt;p>REPOS=&amp;#34;org doc.norang.ca www.norang.ca&amp;#34;&lt;/p>
&lt;p>
for REPO in $REPOS
do
echo &amp;#34;Repository: $REPO&amp;#34;
cd ~/git/$REPO&lt;/p>
&lt;p>git ls-files –deleted -z | xargs -0 git rm &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&lt;/p>
&lt;p>git add . &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
git commit -m &amp;#34;$(date)&amp;#34;
done&lt;/p>
&lt;p>
I use the following `.gitignore` file in my org-mode `git`
repositories to keep export generated files out of my `git`
repositories. If I include a graphic from some other source than
ditaa or graphviz then I&amp;amp;rsquo;ll add it to the repository manually. By
default all PNG graphic files are ignored (since I assume they are
produced by ditaa during export)&lt;/p>
&lt;p>
core
core.*
*.html
&lt;strong>~
.#&lt;/strong>
\#*\#
*.txt
*.tex
*.aux
*.dvi
*.log
*.out
*.ics
*.pdf
*.xml
*.org-source
*.png
*.toc&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;GitEditWithConfidence&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Git - Edit files with confidence&lt;/p>
&lt;p>
I use `git` in all of my directories where editing a file should be
tracked.&lt;/p>
&lt;p>
This means I can edit files with confidence. I&amp;amp;rsquo;m free to change stuff
and break things because it won&amp;amp;rsquo;t matter. It&amp;amp;rsquo;s easy to go back to a
previous working version or to see exactly what changed since the last
commit. This is great when editing configuration files (such as
apache webserver, bind9 DNS configurations, etc.)&lt;/p>
&lt;p>
I find this extremely useful where your edits might break things and
having `git` tracking the changes means if you break it you can just
go back to the previous working version easily. This is also true for
package upgrades for software where the upgrade modifies the
configuration files.&lt;/p>
&lt;p>
I have every version of my edits in a local `git` repository.&lt;/p>
&lt;p>
&amp;lt;a id=&amp;#34;git-sync&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;&lt;/p>
&lt;p>
## Git Repository synchronization&lt;/p>
&lt;p>
I acquired a Eee PC 1000 HE which now serves as my main road-warrior
laptop replacing my 6 year old Toshiba Tecra S1.&lt;/p>
&lt;p>
I have a server on my LAN that hosts bare git repositories for all of
my projects. The problem I was facing is I have to leave in 5 minutes
and want to make sure I have up-to-date copies of everything I work on
when I take it on the road (without Internet access).&lt;/p>
&lt;p>
To solve this I use a server with bare git repositories on it. This
includes my org-mode repositories as well as any other git
repositories I&amp;amp;rsquo;m interested in.&lt;/p>
&lt;p>
Just before I leave I run the `git-sync` script on my workstation to
update the bare git repositories and then I run it again on my Eee PC
to update all my local repositories on the laptop. For any
repositories that give errors due to non-fast-forward merges I
manually merge as required and rerun `git-sync` until it reports no
errors. This normally takes a minute or two to do. Then I grab my
Eee PC and leave. When I&amp;amp;rsquo;m on the road I have full up-to-date history
of all my git repositories.&lt;/p>
&lt;p>
The `git-sync` script replaces my previous scripts with an all-in-one
tool that basically does this:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>for each repository on the current system&lt;/p>
&lt;ul>
&lt;li>fetch objects from the remote&lt;/li>
&lt;li>
&lt;p>for each branch that tracks a remote branch&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Check if the ref can be moved&lt;/p>
&lt;ul>
&lt;li>fast-forwards if behind the remote repository and is fast-forwardable&lt;/li>
&lt;li>Does nothing if ref is up to date&lt;/li>
&lt;li>Pushes ref to remote repository if ref is ahead of remote repository and fast-forwardable&lt;/li>
&lt;li>Fails if ref and remote have diverged&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>This automatically advances changes on my 35+ git repositories with
minimal manual intervention. The only time I need to manually do
something in a repository is when I make changes on my Eee PC and my
workstation at the same time - so that a merge is required.&lt;/p>
&lt;p>
Here is the `git-sync` script&lt;/p>
&lt;p>
#!/bin/sh
#&lt;/p>
&lt;p>syncrepo=norang
reporoot=~/git&lt;/p>
&lt;p>log_repo() {
[ &amp;#34;x$lastrepo&amp;#34; == &amp;#34;x$repo&amp;#34; ] || {
printf &amp;#34;\nREPO: ${repo}\n&amp;#34;
lastrepo=&amp;#34;$repo&amp;#34;
}
}&lt;/p>
&lt;p>log_msg() {
log_repo
printf &amp;#34; $1\n&amp;#34;
}&lt;/p>
&lt;p>fast_forward_ref() {
log_msg &amp;#34;fast-forwarding ref $1&amp;#34;
current_ref=$(cat .git/HEAD)
if [ &amp;#34;x$current_ref&amp;#34; = &amp;#34;xref: refs/heads/$1&amp;#34; ]
then&lt;/p>
&lt;p>files=$(git diff-index --name-only HEAD --)
git merge refs/remotes/$syncrepo/$1
else
git branch -f $1 refs/remotes/$syncrepo/$1
fi
}&lt;/p>
&lt;p>push_ref() {
log_msg &amp;#34;Pushing ref $1&amp;#34;
if ! git push --tags $syncrepo $1
then
exit 1
fi
}&lt;/p>
&lt;p>check_ref() {
revlist1=$(git rev-list refs/remotes/$syncrepo/$1..$1)
revlist2=$(git rev-list $1..refs/remotes/$syncrepo/$1)
if [ &amp;#34;x$revlist1&amp;#34; = &amp;#34;x&amp;#34; -a &amp;#34;x$revlist2&amp;#34; = &amp;#34;x&amp;#34; ]
then&lt;/p>
&lt;pre class="example">
&lt;/pre>
&lt;p>elif [ &amp;#34;x$revlist1&amp;#34; = &amp;#34;x&amp;#34; ]
then&lt;/p>
&lt;p>fast_forward_ref $1 || exit 1
elif [ &amp;#34;x$revlist2&amp;#34; = &amp;#34;x&amp;#34; ]
then&lt;/p>
&lt;p>push_ref $1 || exit 1
else
log_msg &amp;#34;Ref $1 and $syncrepo/$1 have diverged.&amp;#34;
exit 1
fi
}&lt;/p>
&lt;p>check_refs () {
git for-each-ref refs/heads/* | while read sha1 commit ref
do
ref=${ref/refs\/heads\//}
git for-each-ref refs/remotes/$syncrepo/$ref | while read sha2 commit ref2
do
if [ &amp;#34;x$sha2&amp;#34; != &amp;#34;x&amp;#34; -a &amp;#34;x$sha2&amp;#34; != &amp;#34;x&amp;#34; ]
then
check_ref $ref || exit 1
fi
done
done
}&lt;/p>
&lt;p>time {
retval=0
if find $reporoot -type d -name &amp;#39;*.git&amp;#39; | {
while read repo
do
repo=${repo/\/.git/}
cd ${repo}
upd=$(git remote update $syncrepo 2&amp;gt;&amp;amp;1 || retval=1)
[ &amp;#34;x$upd&amp;#34; = &amp;#34;xFetching $syncrepo&amp;#34; ] || {
log_repo
printf &amp;#34;$upd\n&amp;#34;
}
check_refs || retval=1
done
exit $retval
}
then
printf &amp;#34;\nAll done.\n&amp;#34;
else
printf &amp;#34;\nFix and redo.\n&amp;#34;
fi
}&lt;/p>
&lt;p>
exit $retval
La rectora principal del CNE, Sandra Oblitas, ofreció el primer boletin oficial
pasada las 9 y 50 de la noche, donde se conoció que la participación ascendió al
47,32%, luego de que 9.139.564 sufragaron durante esta elección municipal.&lt;/p>
&lt;p>
La vicepresidenta del poder electoral, felicitó al pueblo por su participación
pacífica y aseguró &amp;#34;que estuvo a la altura de las demandas&amp;#34; de la jornada.&lt;/p>
&lt;p>
De los resultados ofrecidos por el ente comicial, con más del 92,07% de los
votos escrutados, solo Gustavo Delgado, quien ganó la Alcaldía de San Cristobal,
no pertenece al partido de Gobierno.&lt;/p></content></item><item><title>XIX Congreso</title><link>/posts/hugo/decimo-noveno-congreso/</link><pubDate>Sun, 10 Dec 2017 20:02:08 -0400</pubDate><guid>/posts/hugo/decimo-noveno-congreso/</guid><description>XIX Congreso Nacional de PCCh Informe del Camarada Xi Jinping Cadena de Lógico Evaluación de Situación Definición de cuestiones Propuesta de soluciones Informe del Camarada Xi Jinping Logros y significados Pensamiento de dirección y conducción Estrategia e Plan de Accción Elección del Conjunto directivo del PCCh Conducción para China y Contribución para el Mundo Soluciones Pensamiento Estrategias Objectivos Etapas Socialismo + perculiaridad china + Nueva Era I. Por qué llamos la Nueva Era?</description><content>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
XIX Congreso Nacional de PCCh
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
Informe del Camarada Xi Jinping
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;div id="outline-container-headline-3" class="outline-4">
&lt;h4 id="headline-3">
Cadena de Lógico
&lt;/h4>
&lt;div id="outline-text-headline-3" class="outline-text-4">
&lt;ul>
&lt;li>Evaluación de Situación&lt;/li>
&lt;li>Definición de cuestiones&lt;/li>
&lt;li>Propuesta de soluciones&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-3">
&lt;h3 id="headline-4">
Informe del Camarada Xi Jinping
&lt;/h3>
&lt;div id="outline-text-headline-4" class="outline-text-3">
&lt;div id="outline-container-headline-5" class="outline-4">
&lt;h4 id="headline-5">
Logros y significados
&lt;/h4>
&lt;div id="outline-text-headline-5" class="outline-text-4">
&lt;ul>
&lt;li>Pensamiento de dirección y conducción&lt;/li>
&lt;li>Estrategia e Plan de Accción&lt;/li>
&lt;li>Elección del Conjunto directivo del PCCh&lt;/li>
&lt;li>Conducción para China y Contribución para el Mundo&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Soluciones
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;ul>
&lt;li>Pensamiento&lt;/li>
&lt;li>Estrategias&lt;/li>
&lt;li>Objectivos&lt;/li>
&lt;li>Etapas&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-3">
&lt;h3 id="headline-7">
Socialismo + perculiaridad china + Nueva Era
&lt;/h3>
&lt;div id="outline-text-headline-7" class="outline-text-3">
&lt;p>&lt;img src="./images/fm_bg.jpg" alt="./images/fm_bg.jpg" title="./images/fm_bg.jpg" />&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-2">
&lt;h2 id="headline-8">
I. Por qué llamos la Nueva Era?
&lt;/h2>
&lt;div id="outline-text-headline-8" class="outline-text-2">
&lt;div id="outline-container-headline-9" class="outline-3">
&lt;h3 id="headline-9">
Nueva Etapa de Desarrollo
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-3">
&lt;h3 id="headline-10">
Cambio de Nuevas contradiciones
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-11" class="outline-3">
&lt;h3 id="headline-11">
Cambio de condiciones extranjeras
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-2">
&lt;h2 id="headline-12">
Qué es nueva era?
&lt;/h2>
&lt;div id="outline-text-headline-12" class="outline-text-2">
&lt;div id="outline-container-headline-13" class="outline-4">
&lt;h4 id="headline-13">
Era de Socialismo
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-4">
&lt;h4 id="headline-14">
Era de Sociedad
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-4">
&lt;h4 id="headline-15">
Era de Vida hermosa
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-16" class="outline-4">
&lt;h4 id="headline-16">
Era de Sueño
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-17" class="outline-4">
&lt;h4 id="headline-17">
Era de vínculos con el Mundo
&lt;/h4>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-18" class="outline-2">
&lt;h2 id="headline-18">
Cambio de Stuaciones y Condiciones
&lt;/h2>
&lt;div id="outline-text-headline-18" class="outline-text-2">
&lt;div id="outline-container-headline-19" class="outline-3">
&lt;h3 id="headline-19">
Causa de Desarrollo
&lt;/h3>
&lt;div id="outline-text-headline-19" class="outline-text-3">
&lt;ul>
&lt;li>Nuevo punto de partida del Partido y el País&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-20" class="outline-3">
&lt;h3 id="headline-20">
Situaciones Externas
&lt;/h3>
&lt;div id="outline-text-headline-20" class="outline-text-3">
&lt;ul>
&lt;li>Desarrollo, Reforma, Ajuste&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-21" class="outline-3">
&lt;h3 id="headline-21">
Condiciones Internas
&lt;/h3>
&lt;div id="outline-text-headline-21" class="outline-text-3">
&lt;ul>
&lt;li>Realidad, Forma y Mentalidad de Desarrollo&lt;/li>
&lt;li>Nivel y Necesidad de Desarollo&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-22" class="outline-3">
&lt;h3 id="headline-22">
Contradicción Principal
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-23" class="outline-3">
&lt;h3 id="headline-23">
Etapa Histórica
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-24" class="outline-2">
&lt;h2 id="headline-24">
Cambio de contradición principal
&lt;/h2>
&lt;div id="outline-text-headline-24" class="outline-text-2">
&lt;div id="outline-container-headline-25" class="outline-3">
&lt;h3 id="headline-25">
Antes:
&lt;/h3>
&lt;div id="outline-text-headline-25" class="outline-text-3">
&lt;ul>
&lt;li>La creciente demanda material cultural del pueblo&lt;/li>
&lt;li>La capacidad productiva atrazada&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-26" class="outline-3">
&lt;h3 id="headline-26">
Ahora:
&lt;/h3>
&lt;div id="outline-text-headline-26" class="outline-text-3">
&lt;ul>
&lt;li>La creciente demanda del pueblo de una vida mejor&lt;/li>
&lt;li>El desarrollo desequilibrado e insuficiente&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-27" class="outline-2">
&lt;h2 id="headline-27">
II. En que sentido es la Nueva Era?
&lt;/h2>
&lt;/div>
&lt;div id="outline-container-headline-28" class="outline-2">
&lt;h2 id="headline-28">
Crecimientos de velocidad y calidad
&lt;/h2>
&lt;div id="outline-text-headline-28" class="outline-text-2">
&lt;p>&lt;img src="./images/tren-alta-velocidad.jpg" alt="./images/tren-alta-velocidad.jpg" title="./images/tren-alta-velocidad.jpg" />&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-29" class="outline-2">
&lt;h2 id="headline-29">
Crecimiento de producciones
&lt;/h2>
&lt;div id="outline-text-headline-29" class="outline-text-2">
&lt;div id="outline-container-headline-30" class="outline-3">
&lt;h3 id="headline-30">
No. 1 de manufactura
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-31" class="outline-3">
&lt;h3 id="headline-31">
No. 1 de ferrocarril de alta velocidad
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-32" class="outline-3">
&lt;h3 id="headline-32">
No. 1 de 220 productos industriales y agrícolas
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-33" class="outline-2">
&lt;h2 id="headline-33">
Crecimiento de producciones
&lt;/h2>
&lt;div id="outline-text-headline-33" class="outline-text-2">
&lt;div id="outline-container-headline-34" class="outline-3">
&lt;h3 id="headline-34">
No. 2 Economía desde 2010
&lt;/h3>
&lt;div id="outline-text-headline-34" class="outline-text-3">
&lt;ul>
&lt;li>PIB ha aumentado de 54 billones de yuanes a 80 billones&lt;/li>
&lt;li>30% de contribución al crecimiento de la economía global.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-35" class="outline-3">
&lt;h3 id="headline-35">
No. 2 en Comercios exteriores de mercancías y servicios
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-36" class="outline-3">
&lt;h3 id="headline-36">
No. 2 de inversión en el exterior
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-37" class="outline-3">
&lt;h3 id="headline-37">
No. 3 de atracción de inversión extranjera
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-38" class="outline-2">
&lt;h2 id="headline-38">
Ampliación de demandas
&lt;/h2>
&lt;div id="outline-text-headline-38" class="outline-text-2">
&lt;div id="outline-container-headline-39" class="outline-3">
&lt;h3 id="headline-39">
Ingreso Per capita
&lt;/h3>
&lt;div id="outline-text-headline-39" class="outline-text-3">
&lt;ul>
&lt;li>156 USD del año 1978&lt;/li>
&lt;li>8000 USD del año 2016&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-40" class="outline-3">
&lt;h3 id="headline-40">
Pobreza en campos rurales
&lt;/h3>
&lt;div id="outline-text-headline-40" class="outline-text-3">
&lt;ul>
&lt;li>97.5% de 1978&lt;/li>
&lt;li>4% de 2017&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-41" class="outline-3">
&lt;h3 id="headline-41">
Educación cubre todo el país
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-42" class="outline-2">
&lt;h2 id="headline-42">
Diversificación de damandas y aspiraciones
&lt;/h2>
&lt;div id="outline-text-headline-42" class="outline-text-2">
&lt;div id="outline-container-headline-43" class="outline-3">
&lt;h3 id="headline-43">
Demandas Básicas
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-44" class="outline-3">
&lt;h3 id="headline-44">
Muchas Más…
&lt;/h3>
&lt;div id="outline-text-headline-44" class="outline-text-3">
&lt;ul>
&lt;li>Democración y Leyes&lt;/li>
&lt;li>Igualdad, Justicia y Derechos&lt;/li>
&lt;li>Seguridad y Ambiente&lt;/li>
&lt;li>Participación y Supervisión&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-45" class="outline-2">
&lt;h2 id="headline-45">
Dificultades principales I
&lt;/h2>
&lt;div id="outline-text-headline-45" class="outline-text-2">
&lt;div id="outline-container-headline-46" class="outline-3">
&lt;h3 id="headline-46">
Desequilibrio e insuficiencia del desarrollo
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-47" class="outline-3">
&lt;h3 id="headline-47">
Calidad y rendimiento siguen sin ser altos
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-48" class="outline-3">
&lt;h3 id="headline-48">
Capacidad de innovación no fuerte
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-49" class="outline-2">
&lt;h2 id="headline-49">
Dificultades principales II
&lt;/h2>
&lt;div id="outline-text-headline-49" class="outline-text-2">
&lt;div id="outline-container-headline-50" class="outline-3">
&lt;h3 id="headline-50">
Nivel de la economía real está por elevarse
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-51" class="outline-3">
&lt;h3 id="headline-51">
Protección del entorno ecológico
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-52" class="outline-3">
&lt;h3 id="headline-52">
Vida del pueblo: puntos débiles
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-53" class="outline-2">
&lt;h2 id="headline-53">
Dificultades principales III
&lt;/h2>
&lt;div id="outline-text-headline-53" class="outline-text-2">
&lt;div id="outline-container-headline-54" class="outline-3">
&lt;h3 id="headline-54">
Acometimiento de lo más duro en la liberación de la pobreza es una dura tarea
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-55" class="outline-3">
&lt;h3 id="headline-55">
Disparidad en el desarrollo entre la ciudad y el campo y entre las regiones
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-56" class="outline-3">
&lt;h3 id="headline-56">
Distribución de los ingresos de los habitantes
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-57" class="outline-3">
&lt;h3 id="headline-57">
Empleo, la educación, la asistencia médica, la vivienda, los servicios a la vejez
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-58" class="outline-2">
&lt;h2 id="headline-58">
III. Cómo logramos?
&lt;/h2>
&lt;/div>
&lt;div id="outline-container-headline-59" class="outline-2">
&lt;h2 id="headline-59">
Misiones y Objetivos
&lt;/h2>
&lt;div id="outline-text-headline-59" class="outline-text-2">
&lt;div id="outline-container-headline-60" class="outline-3">
&lt;h3 id="headline-60">
Gran País Socialist Moderno
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-61" class="outline-2">
&lt;h2 id="headline-61">
En la primera etapa
&lt;/h2>
&lt;div id="outline-text-headline-61" class="outline-text-2">
&lt;div id="outline-container-headline-62" class="outline-3">
&lt;h3 id="headline-62">
Se extenderá del 2020 al 2035
&lt;/h3>
&lt;div id="outline-text-headline-62" class="outline-text-3">
&lt;div id="outline-container-headline-63" class="outline-4">
&lt;h4 id="headline-63">
1. materializaremos fundamentalmente la modernización socialista
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-64" class="outline-4">
&lt;h4 id="headline-64">
2. mediante una brega de 15 años y
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-65" class="outline-4">
&lt;h4 id="headline-65">
3. sobre la base de la culminación de la construcción integral de una sociedad modestamente acomodada.
&lt;/h4>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-66" class="outline-3">
&lt;h3 id="headline-66">
Los Objectivos y planes
&lt;/h3>
&lt;div id="outline-text-headline-66" class="outline-text-3">
&lt;div id="outline-container-headline-67" class="outline-4">
&lt;h4 id="headline-67">
Para entonces habrá conseguido
&lt;/h4>
&lt;div id="outline-text-headline-67" class="outline-text-4">
&lt;ul>
&lt;li>Incrementar en gran medida su poderío económico, científico y tecnológico&lt;/li>
&lt;li>Ocupará un lugar en las primeras filas de los países innovadores&lt;/li>
&lt;li>El derecho del pueblo a una participación&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-68" class="outline-4">
&lt;h4 id="headline-68">
Para entonces habrá conseguido
&lt;/h4>
&lt;div id="outline-text-headline-68" class="outline-text-4">
&lt;ul>
&lt;li>Desarrollo en pie de igualdad estará plenamente garantizado&lt;/li>
&lt;li>Construcción de un Estado, un gobierno y una sociedad regidos por la ley&lt;/li>
&lt;li>los diversos sistemas habrán devenido más completos&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-69" class="outline-4">
&lt;h4 id="headline-69">
Para entonces habrá conseguido
&lt;/h4>
&lt;div id="outline-text-headline-69" class="outline-text-4">
&lt;ul>
&lt;li>Modernización de los sistemas y de la capacidad para gobernar&lt;/li>
&lt;li>Nivel de la civilización social a nueva altura&lt;/li>
&lt;li>Poder cultural aumentado notablemente&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-70" class="outline-4">
&lt;h4 id="headline-70">
Para entonces habrá conseguido
&lt;/h4>
&lt;div id="outline-text-headline-70" class="outline-text-4">
&lt;ul>
&lt;li>Población llevará una vida más holgada&lt;/li>
&lt;li>El porcentaje de la población con rentas medias crecido notoriamente&lt;/li>
&lt;li>Disparidad entre el desarrollo del campo y ciudad y entre regiones&lt;/li>
&lt;li>Disparidades en el nivel de vida de la población reducidas evidentemente&lt;/li>
&lt;li>Equidad en el acceso a los servicios públicos básicos&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-71" class="outline-4">
&lt;h4 id="headline-71">
Para entonces habrá conseguido
&lt;/h4>
&lt;div id="outline-text-headline-71" class="outline-text-4">
&lt;ul>
&lt;li>Prosperidad de todo el pueblo&lt;/li>
&lt;li>Conformada fundamentalmente la configuración de una gobernanza social moderna&lt;/li>
&lt;li>Sociedad de vigor, armoniosa y ordenada&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-72" class="outline-4">
&lt;h4 id="headline-72">
Para entonces habrá conseguido
&lt;/h4>
&lt;div id="outline-text-headline-72" class="outline-text-4">
&lt;ul>
&lt;li>Entorno ecológico habrá mejorado radicalmente&lt;/li>
&lt;li>Cumplido en lo fundamental objetivo de construir una bella China.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-73" class="outline-2">
&lt;h2 id="headline-73">
En la segunda etapa
&lt;/h2>
&lt;div id="outline-text-headline-73" class="outline-text-2">
&lt;div id="outline-container-headline-74" class="outline-3">
&lt;h3 id="headline-74">
Se prolongará desde el 2035 hasta mediados de siglo
&lt;/h3>
&lt;div id="outline-text-headline-74" class="outline-text-3">
&lt;div id="outline-container-headline-75" class="outline-4">
&lt;h4 id="headline-75">
Dedicaremos 15 años más de brega a transformar nuestro país
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-76" class="outline-4">
&lt;h4 id="headline-76">
sobre la base de la materialización fundamental de su modernización
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-77" class="outline-4">
&lt;h4 id="headline-77">
en un poderoso país socialista moderno, próspero, democrático, civilizado, armonioso y hermoso.
&lt;/h4>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-78" class="outline-3">
&lt;h3 id="headline-78">
Para entonces
&lt;/h3>
&lt;div id="outline-text-headline-78" class="outline-text-3">
&lt;div id="outline-container-headline-79" class="outline-4">
&lt;h4 id="headline-79">
nuestra civilización material, política, espiritual, social y ecológica habrá experimentado una mejora integral
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-80" class="outline-4">
&lt;h4 id="headline-80">
la modernización de los sistemas y de la capacidad para gobernar el paíshabrá culminado,
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-81" class="outline-4">
&lt;h4 id="headline-81">
China se habrá convertido en un país situado a la cabeza en fortaleza nacional integral e influencia internacional,
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-82" class="outline-4">
&lt;h4 id="headline-82">
la prosperidad de todo el pueblo será esencialmente una realidad y este disfrutará de una vida más feliz y segura
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-83" class="outline-4">
&lt;h4 id="headline-83">
la nación china, con un porte que irradiará un espíritu todavía más elevado, se erguirá entre todas las naciones del mundo.
&lt;/h4>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-84" class="outline-2">
&lt;h2 id="headline-84">
Por qué tenemos la convicción?
&lt;/h2>
&lt;div id="outline-text-headline-84" class="outline-text-2">
&lt;div id="outline-container-headline-85" class="outline-3">
&lt;h3 id="headline-85">
Basándose en las experiencia de los últimos 40 años
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-86" class="outline-3">
&lt;h3 id="headline-86">
Basándose en las condiciones de futuro
&lt;/h3>
&lt;div id="outline-text-headline-86" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th class="align-right">Year&lt;/th>
&lt;th>GDP(USD)&lt;/th>
&lt;th class="align-right">GDP/C(USD)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td class="align-right">2016&lt;/td>
&lt;td>11.2 billones&lt;/td>
&lt;td class="align-right">8.126&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">2020&lt;/td>
&lt;td>15.1 billones&lt;/td>
&lt;td class="align-right">10.000&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td class="align-right">2035&lt;/td>
&lt;td>43.6 billones&lt;/td>
&lt;td class="align-right">30.000&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-87" class="outline-3">
&lt;h3 id="headline-87">
Basándose en las condiciones externas
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-88" class="outline-3">
&lt;h3 id="headline-88">
Basándose en las condiciones internas
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-89" class="outline-2">
&lt;h2 id="headline-89">
IV. Qué trabajos para futuro?
&lt;/h2>
&lt;/div>
&lt;div id="outline-container-headline-90" class="outline-2">
&lt;h2 id="headline-90">
Estrategia fundamental:PROPERTIES:
&lt;/h2>
&lt;div id="outline-text-headline-90" class="outline-text-2">
&lt;p>:reveal_background: ./images/background.jpg
:reveal_background_size: 1024x
:reveal_background_repeat: repeat&lt;/p>
&lt;p>:END:&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-91" class="outline-2">
&lt;h2 id="headline-91">
14 persevencia
&lt;/h2>
&lt;div id="outline-text-headline-91" class="outline-text-2">
&lt;div id="outline-container-headline-92" class="outline-3">
&lt;h3 id="headline-92">
1. Dirección del Partido en todos los trabajos
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-93" class="outline-3">
&lt;h3 id="headline-93">
2. Consideración del pueblo como el centro
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-94" class="outline-3">
&lt;h3 id="headline-94">
3. Profundización integral de la reforma
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-95" class="outline-3">
&lt;h3 id="headline-95">
4. Nueva concepción del desarrollo.
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-96" class="outline-2">
&lt;h2 id="headline-96">
14 persevencia
&lt;/h2>
&lt;div id="outline-text-headline-96" class="outline-text-2">
&lt;div id="outline-container-headline-97" class="outline-3">
&lt;h3 id="headline-97">
5. Condición del pueblo como dueño del país
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-98" class="outline-3">
&lt;h3 id="headline-98">
6. Gobernación integral del país según la ley
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-99" class="outline-3">
&lt;h3 id="headline-99">
7. Sistema de los valores socialistas esenciales
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-100" class="outline-3">
&lt;h3 id="headline-100">
8. Arantización y mejora de las condiciones de vida del pueblo en el curso del desarrollo
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-101" class="outline-2">
&lt;h2 id="headline-101">
14 persevencia
&lt;/h2>
&lt;div id="outline-text-headline-101" class="outline-text-2">
&lt;div id="outline-container-headline-102" class="outline-3">
&lt;h3 id="headline-102">
9. Coexistencia armoniosa de las personas y la naturaleza.
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-103" class="outline-3">
&lt;h3 id="headline-103">
10. Concepto general de seguridad nacional.
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-104" class="outline-3">
&lt;h3 id="headline-104">
11. Dirección absoluta del Partido sobre el Ejército Popular.
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-105" class="outline-3">
&lt;h3 id="headline-105">
12. Directriz de “un país con dos sistemas” y en el impulso de la reunificación de la patria.
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-106" class="outline-2">
&lt;h2 id="headline-106">
14 persevencia
&lt;/h2>
&lt;div id="outline-text-headline-106" class="outline-text-2">
&lt;div id="outline-container-headline-107" class="outline-3">
&lt;h3 id="headline-107">
13. Impulso de la construcción de una comunidad de destino de la humanidad.
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-108" class="outline-3">
&lt;h3 id="headline-108">
14. Disciplinamiento integral y riguroso del Partido.
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-109" class="outline-2">
&lt;h2 id="headline-109">
Escencia
&lt;/h2>
&lt;div id="outline-text-headline-109" class="outline-text-2">
&lt;ul>
&lt;li>Solialimso&lt;/li>
&lt;li>Pueblo y Naturaleza …&lt;/li>
&lt;li>Sociedad y Valores …&lt;/li>
&lt;li>Reforma, Apertura y Desarrollo …&lt;/li>
&lt;li>Seguridad, Democracia y Cultura …&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-110" class="outline-2">
&lt;h2 id="headline-110">
Con Venezuela
&lt;/h2>
&lt;div id="outline-text-headline-110" class="outline-text-2">
&lt;div id="outline-container-headline-111" class="outline-3">
&lt;h3 id="headline-111">
Política Exterior de Paz
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-112" class="outline-3">
&lt;h3 id="headline-112">
Asociación Estratégica Integral
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-113" class="outline-3">
&lt;h3 id="headline-113">
Cooperación Sur-Sur
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-114" class="outline-3">
&lt;h3 id="headline-114">
Comunidad de interés y destino comúm
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-115" class="outline-2">
&lt;h2 id="headline-115">
Gracias
&lt;/h2>
&lt;div id="outline-text-headline-115" class="outline-text-2">
&lt;p>Blogs&lt;/p>
&lt;/div>
&lt;/div></content></item><item><title>service worker</title><link>/posts/nodejs/service-worker/</link><pubDate>Thu, 20 Apr 2017 21:15:18 -0400</pubDate><guid>/posts/nodejs/service-worker/</guid><description>Service Worker 服务工作是一个网络缓存机制，可以把浏览器和服务器之间的数据传递进行缓存和服务。
类似于一个离线服务器。
看代码是最好的办法
service-worker.js var cacheName = &amp;#39;cp-work-ts-vue&amp;#39;; var filesToCache = [ &amp;#39;/&amp;#39;, &amp;#39;/main.js&amp;#39;, &amp;#39;/css/*.css&amp;#39;, &amp;#39;/assets/img/*.JPG&amp;#39; ]; self.addEventListener(&amp;#39;install&amp;#39;, function(e) { console.log(&amp;#39;[ServiceWorker] Install&amp;#39;); e.waitUntil( caches.open(cacheName).then(function(cache) { console.log(&amp;#39;[ServiceWorker] Caching app shell&amp;#39;); return cache.addAll(filesToCache); }) ); }); self.addEventListener(&amp;#39;activate&amp;#39;, function(e) { console.log(&amp;#39;[ServiceWorker] Activate&amp;#39;); e.waitUntil( caches.keys().then(function(keyList) { return Promise.all(keyList.map(function(key) { if (key !== cacheName) { console.log(&amp;#39;[ServiceWorker] Removing old cache&amp;#39;, key); return caches.delete(key); } })); }) ); return self.clients.claim(); }); self.addEventListener(&amp;#39;fetch&amp;#39;, function(e) { console.log(&amp;#39;[ServiceWorker] Fetch&amp;#39;, e.</description><content>&lt;h2 id="service-worker">Service Worker&lt;/h2>
&lt;p>服务工作是一个网络缓存机制，可以把浏览器和服务器之间的数据传递进行缓存和服务。&lt;/p>
&lt;p>类似于一个离线服务器。&lt;/p>
&lt;blockquote>
&lt;p>看代码是最好的办法&lt;/p>
&lt;/blockquote>
&lt;h3 id="service-workerjs">&lt;code>service-worker.js&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">cacheName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;cp-work-ts-vue&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">filesToCache&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;/main.js&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;/css/*.css&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;/assets/img/*.JPG&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">self&lt;/span>.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;install&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;[ServiceWorker] Install&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">waitUntil&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">caches&lt;/span>.&lt;span style="color:#a6e22e">open&lt;/span>(&lt;span style="color:#a6e22e">cacheName&lt;/span>).&lt;span style="color:#a6e22e">then&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">cache&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;[ServiceWorker] Caching app shell&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">cache&lt;/span>.&lt;span style="color:#a6e22e">addAll&lt;/span>(&lt;span style="color:#a6e22e">filesToCache&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">self&lt;/span>.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;activate&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;[ServiceWorker] Activate&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">waitUntil&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">caches&lt;/span>.&lt;span style="color:#a6e22e">keys&lt;/span>().&lt;span style="color:#a6e22e">then&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">keyList&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Promise.&lt;span style="color:#a6e22e">all&lt;/span>(&lt;span style="color:#a6e22e">keyList&lt;/span>.&lt;span style="color:#a6e22e">map&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">key&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">key&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#a6e22e">cacheName&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;[ServiceWorker] Removing old cache&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">key&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">caches&lt;/span>.&lt;span style="color:#66d9ef">delete&lt;/span>(&lt;span style="color:#a6e22e">key&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">self&lt;/span>.&lt;span style="color:#a6e22e">clients&lt;/span>.&lt;span style="color:#a6e22e">claim&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">self&lt;/span>.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;fetch&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;[ServiceWorker] Fetch&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">request&lt;/span>.&lt;span style="color:#a6e22e">url&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">respondWith&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">caches&lt;/span>.&lt;span style="color:#a6e22e">match&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">request&lt;/span>).&lt;span style="color:#a6e22e">then&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">response&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">response&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#a6e22e">e&lt;/span>.&lt;span style="color:#a6e22e">request&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用sw-cachetools生成sw文件">使用&lt;code>sw-cachetools&lt;/code>生成&lt;code>sw&lt;/code>文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install sw-cache
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sw-cache&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;fileLocation&amp;#39;&lt;/span>, blobs;&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Vuex a state management for vue</title><link>/posts/misc/start/</link><pubDate>Thu, 20 Apr 2017 19:10:29 -0400</pubDate><guid>/posts/misc/start/</guid><description>Vuex Centralized State Management for Vue.js.
What is Vuex? Full Documentation Examples Counter Counter with Hot Reload TodoMVC Flux Chat Shopping Cart Running the examples: $ npm install $ npm run dev # serve examples at localhost:8080 License MIT</description><content>&lt;h1 id="vuex-build-statushttpscirclecicomghvuejsvuextreedevpngstyleshieldhttpscirclecicomghvuejsvuex">Vuex &lt;a href="https://circleci.com/gh/vuejs/vuex">&lt;img src="https://circleci.com/gh/vuejs/vuex/tree/dev.png?style=shield" alt="Build Status">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>Centralized State Management for Vue.js.&lt;/p>
&lt;/blockquote>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="http://vuex.vuejs.org/en/intro.html">What is Vuex?&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://vuex.vuejs.org/">Full Documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/vuejs/vuex/tree/dev/examples/counter">Counter&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vuejs/vuex/tree/dev/examples/counter-hot">Counter with Hot Reload&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vuejs/vuex/tree/dev/examples/todomvc">TodoMVC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vuejs/vuex/tree/dev/examples/chat">Flux Chat&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vuejs/vuex/tree/dev/examples/shopping-cart">Shopping Cart&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="running-the-examples">Running the examples:&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ npm run dev &lt;span style="color:#75715e"># serve examples at localhost:8080&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="license">License&lt;/h2>
&lt;p>&lt;a href="http://opensource.org/licenses/MIT">MIT&lt;/a>&lt;/p></content></item><item><title/><link>/posts/nodejs/webpack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/posts/nodejs/webpack/</guid><description>Introduction webpack is a bundler for modules. The main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.
TL; DR
Bundles both CommonJs and AMD modules (even combined). Can create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time). Dependencies are resolved during compilation reducing the runtime size.</description><content>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>webpack is a bundler for modules. The main purpose is to bundle JavaScript
files for usage in a browser, yet it is also capable of transforming, bundling,
or packaging just about any resource or asset.&lt;/p>
&lt;p>&lt;strong>TL; DR&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Bundles both &lt;a href="http://www.commonjs.org/specs/modules/1.0/">CommonJs&lt;/a> and &lt;a href="https://github.com/amdjs/amdjs-api/wiki/AMD">AMD&lt;/a> modules (even combined).&lt;/li>
&lt;li>Can create a single bundle or multiple chunks that are asynchronously loaded at runtime (to reduce initial loading time).&lt;/li>
&lt;li>Dependencies are resolved during compilation reducing the runtime size.&lt;/li>
&lt;li>Loaders can preprocess files while compiling, e.g. coffeescript to JavaScript, handlebars strings to compiled functions, images to Base64, etc.&lt;/li>
&lt;li>Highly modular plugin system to do whatever else your application requires.&lt;/li>
&lt;/ul>
&lt;h1 id="getting-started">Getting Started&lt;/h1>
&lt;p>Check out webpack&amp;rsquo;s &lt;a href="https://webpack.github.io/docs/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=trdr">documentation&lt;/a> for quick Getting Started guide, in-depth usage,
tutorials and resources.&lt;/p>
&lt;h1 id="installation">Installation&lt;/h1>
&lt;p>project:
&lt;code>npm install webpack --save-dev&lt;/code>&lt;/p>
&lt;p>global:
&lt;code>npm install webpack -g&lt;/code>
Usage
&lt;a href="https://webpack.github.io/docs/tutorials/getting-started/">https://webpack.github.io/docs/tutorials/getting-started/&lt;/a>&lt;/p>
&lt;h1 id="examples">Examples&lt;/h1>
&lt;p>Take a look at the &lt;a href="https://github.com/webpack/webpack/tree/master/examples">&lt;code>examples&lt;/code>&lt;/a> folder.&lt;/p>
&lt;h1 id="features">Features&lt;/h1>
&lt;h2 id="plugins">Plugins&lt;/h2>
&lt;p>webpack has a &lt;a href="https://webpack.github.io/docs/plugins.html">rich plugin
interface&lt;/a>. Most of the features
within webpack itself use this plugin interface. This makes webpack very
&lt;strong>flexible&lt;/strong>.&lt;/p>
&lt;h2 id="performance">Performance&lt;/h2>
&lt;p>webpack uses async I/O and has multiple caching levels. This makes webpack fast
and incredibly &lt;strong>fast&lt;/strong> on incremental compilations.&lt;/p>
&lt;h2 id="loaders">Loaders&lt;/h2>
&lt;p>webpack enables use of loaders to preprocess files. This allows you to bundle
&lt;strong>any static resource&lt;/strong> way beyond JavaScript. You can easily &lt;a href="https://webpack.github.io/docs/loaders.html">write your own
loaders&lt;/a> using node.js.&lt;/p>
&lt;p>Loaders are activated by using &lt;code>loadername!&lt;/code> prefixes in &lt;code>require()&lt;/code> statements,
or are automatically applied via regex from your webpack configuration.&lt;/p>
&lt;p>Please see &lt;a href="https://webpack.github.io/docs/using-loaders.html">Using Loaders&lt;/a> for more information.&lt;/p>
&lt;p>&lt;strong>basic&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/webpack/json-loader">&lt;code>json&lt;/code>&lt;/a>: Loads file as JSON&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/raw-loader">&lt;code>raw&lt;/code>&lt;/a>: Loads raw content of a file (as utf-8)&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/val-loader">&lt;code>val&lt;/code>&lt;/a>: Executes code as module and consider exports as JavaScript code&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/script-loader">&lt;code>script&lt;/code>&lt;/a>: Executes a JavaScript file once in global context (like in script tag), requires are not parsed.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>packaging&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/webpack/file-loader">&lt;code>file&lt;/code>&lt;/a>: Emits the file into the output folder and returns the (relative) url.&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/url-loader">&lt;code>url&lt;/code>&lt;/a>: The url loader works like the file loader, but can return a Data Url if the file is smaller than a limit.&lt;/li>
&lt;li>&lt;a href="https://github.com/tcoopman/image-webpack-loader">&lt;code>image&lt;/code>&lt;/a>: Compresses your images. Ideal to use together with &lt;code>file&lt;/code> or &lt;code>url&lt;/code>.&lt;/li>
&lt;li>&lt;a href="https://github.com/pozadi/svgo-loader">&lt;code>svgo-loader&lt;/code>&lt;/a>: Compresses SVG images using &lt;a href="https://github.com/svg/svgo">svgo&lt;/a> library&lt;/li>
&lt;li>&lt;a href="https://github.com/deepsweet/baggage-loader">&lt;code>baggage&lt;/code>&lt;/a>: Automatically require any resources related to the required one&lt;/li>
&lt;li>&lt;a href="https://github.com/JonDum/polymer-loader">&lt;code>polymer-loader&lt;/code>&lt;/a>: Process HTML &amp;amp; CSS with preprocessor of choice and &lt;code>require()&lt;/code> Web Components like first-class modules.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>dialects&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/webpack/coffee-loader">&lt;code>coffee&lt;/code>&lt;/a>: Loads coffee-script like JavaScript&lt;/li>
&lt;li>&lt;a href="https://github.com/babel/babel-loader">&lt;code>babel&lt;/code>&lt;/a>: Turn ES6 code into vanilla ES5 using &lt;a href="https://github.com/babel/babel">Babel&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://github.com/appedemic/livescript-loader">&lt;code>livescript&lt;/code>&lt;/a>: Loads LiveScript like JavaScript&lt;/li>
&lt;li>&lt;a href="https://github.com/jlongster/sweetjs-loader">&lt;code>sweetjs&lt;/code>&lt;/a>: Use sweetjs macros.&lt;/li>
&lt;li>&lt;a href="https://github.com/jupl/traceur-loader">&lt;code>traceur&lt;/code>&lt;/a>: Use future JavaScript features with &lt;a href="https://github.com/google/traceur-compiler">Traceur&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://github.com/andreypopp/typescript-loader">&lt;code>typescript&lt;/code>&lt;/a>: Loads TypeScript like JavaScript.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>templating&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/webpack/html-loader">&lt;code>html&lt;/code>&lt;/a>: Exports HTML as string, require references to static resources.&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/jade-loader">&lt;code>jade&lt;/code>&lt;/a>: Loads jade template and returns a function&lt;/li>
&lt;li>&lt;a href="https://github.com/altano/handlebars-loader">&lt;code>handlebars&lt;/code>&lt;/a>: Loads handlebars template and returns a function&lt;/li>
&lt;li>&lt;a href="https://github.com/rstacruz/ractive-loader">&lt;code>ractive&lt;/code>&lt;/a>: Pre-compiles Ractive templates for interactive DOM manipulation&lt;/li>
&lt;li>&lt;a href="https://github.com/peerigon/markdown-loader">&lt;code>markdown&lt;/code>&lt;/a>: Compiles Markdown to HTML&lt;/li>
&lt;li>&lt;a href="https://github.com/teux/ng-cache-loader">&lt;code>ng-cache&lt;/code>&lt;/a>: Puts HTML partials in the Angular&amp;rsquo;s $templateCache&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>styling&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/webpack/style-loader">&lt;code>style&lt;/code>&lt;/a>: Add exports of a module as style to DOM&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/css-loader">&lt;code>css&lt;/code>&lt;/a>: Loads css file with resolved imports and returns css code&lt;/li>
&lt;li>&lt;a href="https://github.com/cssnext/cssnext-loader">&lt;code>cssnext&lt;/code>&lt;/a>: Loads and compiles a css file using &lt;a href="http://cssnext.io/">cssnext&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/less-loader">&lt;code>less&lt;/code>&lt;/a>: Loads and compiles a less file&lt;/li>
&lt;li>&lt;a href="https://github.com/jtangelder/sass-loader">&lt;code>sass&lt;/code>&lt;/a>: Loads and compiles a scss file&lt;/li>
&lt;li>&lt;a href="https://github.com/shama/stylus-loader">&lt;code>stylus&lt;/code>&lt;/a>: Loads and compiles a stylus file&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>misc&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/dschissler/po-loader">&lt;code>po&lt;/code>&lt;/a>: Loads a PO gettext file and returns JSON&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/mocha-loader">&lt;code>mocha&lt;/code>&lt;/a>: Do tests with mocha in browser or node.js&lt;/li>
&lt;li>&lt;a href="https://github.com/MoOx/eslint-loader">&lt;code>eslint&lt;/code>&lt;/a>: PreLoader for linting code using ESLint.&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/jshint-loader">&lt;code>jshint&lt;/code>&lt;/a>: PreLoader for linting code.&lt;/li>
&lt;li>&lt;a href="https://github.com/unindented/jscs-loader">&lt;code>jscs&lt;/code>&lt;/a>: PreLoader for style checking.&lt;/li>
&lt;li>&lt;a href="https://github.com/jauco/webpack-injectable">&lt;code>injectable&lt;/code>&lt;/a>: Allow to inject dependencies into modules&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/transform-loader">&lt;code>transform&lt;/code>&lt;/a>: Use browserify transforms as loader.&lt;/li>
&lt;/ul>
&lt;p>For the full list of loaders, see &lt;a href="https://webpack.github.io/docs/list-of-loaders.html">list of loaders&lt;/a>.&lt;/p>
&lt;h2 id="module-format-amdcommonjs">Module Format (AMD/CommonJS)&lt;/h2>
&lt;p>webpack supports &lt;strong>both&lt;/strong> AMD and CommonJS module styles. It performs clever static
analysis on the AST of your code. It even has an evaluation engine to evaluate
simple expressions. This allows you to &lt;strong>support most existing libraries&lt;/strong> out of the box.&lt;/p>
&lt;h2 id="code-splitting">Code Splitting&lt;/h2>
&lt;p>webpack allows you to split your codebase into multiple chunks. Chunks are
loaded asynchronously at runtime. This reduces the initial loading time.&lt;/p>
&lt;p>&lt;a href="https://webpack.github.io/docs/code-splitting.html">Code Splitting documentation&lt;/a>&lt;/p>
&lt;h2 id="optimizations">Optimizations&lt;/h2>
&lt;p>webpack can do many optimizations to &lt;strong>reduce the output size of your
JavaScript&lt;/strong> by deduplicating frequently used modules, minifying, and giving
you full control of what is loaded initially and what is loaded at runtime
through code splitting. It can also can make your code chunks &lt;strong>cache
friendly&lt;/strong> by using hashes.&lt;/p>
&lt;p>&lt;a href="https://webpack.github.io/docs/optimization.html">Optimization documentation&lt;/a>&lt;/p>
&lt;p>webpack optimizes in several ways. It also makes your chunks &lt;strong>cache-friendly&lt;/strong> by using hashes.&lt;/p>
&lt;h1 id="a-small-example-of-whats-possible">A small example of what&amp;rsquo;s possible&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// webpack is a module bundler.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// This means webpack takes modules with dependencies
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// and emits static assets representing those modules.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Dependencies can be written in CommonJs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">commonjs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./commonjs&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// or in AMD
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">define&lt;/span>([&lt;span style="color:#e6db74">&amp;#34;amd-module&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;../file&amp;#34;&lt;/span>], &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">amdModule&lt;/span>, &lt;span style="color:#a6e22e">file&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// while previous constructs are sync,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// this is async
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>([&lt;span style="color:#e6db74">&amp;#34;big-module/big/file&amp;#34;&lt;/span>], &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">big&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// For async dependencies, webpack splits
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// your application into multiple &amp;#34;chunks&amp;#34;.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// This part of your application is
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// loaded on demand (code-splitting).
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">stuff&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;../my/stuff&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// &amp;#34;../my/stuff&amp;#34; is also loaded on-demand
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// because it&amp;#39;s in the callback function
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// of the AMD require.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;coffee!./cup.coffee&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// &amp;#34;Loaders&amp;#34; are used to preprocess files.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// They can be prefixed in the require call
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// or configured in the configuration.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./cup&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// This does the same when you add &amp;#34;.coffee&amp;#34; to the extensions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// and configure the &amp;#34;coffee&amp;#34; loader for /\.coffee$/
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">loadTemplate&lt;/span> (&lt;span style="color:#a6e22e">name&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./templates/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.jade&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Many expressions are supported in require calls.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// A clever parser extracts information and concludes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// that everything in &amp;#34;./templates&amp;#34; that matches
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// /\.jade$/ should be included in the bundle, as it
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// can be required.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ...and you can combine everything.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">loadTemplateAsync&lt;/span> (&lt;span style="color:#a6e22e">name&lt;/span>, &lt;span style="color:#a6e22e">callback&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">require&lt;/span>([&lt;span style="color:#e6db74">&amp;#34;bundle?lazy!./templates/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.jade&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">templateBundle&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">templateBundle&lt;/span>(&lt;span style="color:#a6e22e">callback&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>&lt;a href="https://webpack.github.io/docs/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=documentation">documentation&lt;/a>&lt;/p>
&lt;h2 id="changelog">Changelog&lt;/h2>
&lt;p>&lt;a href="https://webpack.github.io/docs/changelog.html">changelog&lt;/a>&lt;/p>
&lt;h2 id="tests">Tests&lt;/h2>
&lt;p>You can run the Node tests with &lt;code>npm test&lt;/code>.&lt;/p>
&lt;p>You can run the browser tests:&lt;/p>
&lt;pre tabindex="0">&lt;code>cd test/browsertests
node build
&lt;/code>&lt;/pre>&lt;p>and open &lt;code>tests.html&lt;/code> in the browser.&lt;/p>
&lt;h2 id="contribution">Contribution&lt;/h2>
&lt;p>Most of the time, if webpack is not working correctly for you it is a simple configuration issue.&lt;/p>
&lt;p>If you are still having difficulty after looking over your configuration carefully, please post
a question to &lt;a href="http://stackoverflow.com/tags/webpack">StackOverflow with the webpack tag&lt;/a>. Questions
that include your webpack.config.js and relevant files are more likely to receive responses.&lt;/p>
&lt;p>If you have discovered a bug or have a feature suggestion, feel free to create an issue on Github.&lt;/p>
&lt;p>If you create a loader or plugin, please consider open sourcing it, putting it
on NPM and following the &lt;code>x-loader&lt;/code>, &lt;code>x-plugin&lt;/code> convention.&lt;/p>
&lt;p>You are also welcome to correct any spelling mistakes or any language issues.&lt;/p>
&lt;p>If you want to discuss something or just need help, &lt;a href="https://gitter.im/webpack/webpack">here is our gitter.im room&lt;/a>.&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>Copyright (c) 2012-2015 Tobias Koppers&lt;/p>
&lt;p>MIT (&lt;a href="http://www.opensource.org/licenses/mit-license.php">http://www.opensource.org/licenses/mit-license.php&lt;/a>)&lt;/p>
&lt;h2 id="thanks-to">Thanks to&lt;/h2>
&lt;p>(In chronological order)&lt;/p>
&lt;ul>
&lt;li>@google for &lt;a href="https://code.google.com/p/google-web-toolkit">Google Web Toolkit (GWT)&lt;/a>, which aims to compile Java to JavaScript. It features a similar &lt;a href="https://code.google.com/p/google-web-toolkit/wiki/CodeSplitting">Code Splitting&lt;/a> as webpack.&lt;/li>
&lt;li>@medikoo for &lt;a href="https://github.com/medikoo/modules-webmake">modules-webmake&lt;/a>, which is a similar project. webpack was born because I wanted Code Splitting for modules-webpack. Interestingly the &lt;a href="https://github.com/medikoo/modules-webmake/issues/7">Code Splitting issue is still open&lt;/a> (thanks also to @Phoscur for the discussion).&lt;/li>
&lt;li>@substack for &lt;a href="http://browserify.org/">browserify&lt;/a>, which is a similar project and source for many ideas.&lt;/li>
&lt;li>@jrburke for &lt;a href="http://requirejs.org/">require.js&lt;/a>, which is a similar project and source for many ideas.&lt;/li>
&lt;li>@defunctzombie for the &lt;a href="https://gist.github.com/defunctzombie/4339901">browser-field spec&lt;/a>, which makes modules available for node.js, browserify and webpack.&lt;/li>
&lt;li>Every early webpack user, which contributed to webpack by writing issues or PRs. You influenced the direction&amp;hellip;&lt;/li>
&lt;li>@shama, @jhnns and @sokra for maintaining this project&lt;/li>
&lt;li>Everyone who has written a loader for webpack. You are the ecosystem&amp;hellip;&lt;/li>
&lt;li>Everyone I forgot to mention here, but also influenced webpack.&lt;/li>
&lt;/ul>
&lt;h2 id="sponsor">Sponsor&lt;/h2>
&lt;p>This is a free-time project. The time I invest in it fluctuates. If you use webpack for a serious task, and you&amp;rsquo;d like me to invest more time on it, please donate. This project increases your income/productivity too. It makes development and applications faster and it reduces the required bandwidth.&lt;/p>
&lt;p>I&amp;rsquo;m very thankful for every dollar. If you leave your username or email, I may show my thanks by giving you extra support.&lt;/p>
&lt;h2 id="dependencies">Dependencies&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://esprima.org/">esprima&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/webpack/enhanced-resolve">enhanced-resolve&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mishoo/UglifyJS">uglify-js&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/visionmedia/mocha">mocha&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/visionmedia/should.js">should&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/substack/node-optimist">optimist&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/caolan/async">async&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/substack/node-mkdirp">mkdirp&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/pvorb/node-clone">clone&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Make better emacs workflow</title><link>/posts/emacs/make-better-emacs-workflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/posts/emacs/make-better-emacs-workflow/</guid><description> — templateKey: blog-post|doc-page title: &amp;#34;using-orgmode-in-emacs.org&amp;#34; author: &amp;#34;Xing Wenju&amp;#34; description: &amp;#34;Some Description&amp;#34; date: &amp;#34;2021-11-08T20:03:50-04:00&amp;#34; tags:
hugo emacs —
[BUG] Better emacs [BUG] 无法更新 evil emacs submodule [已修复] 更好地进行博客日志写作和发布 [学习] 书写博客的内容 [学习] 插入 plantuml 图片 [学习] 生成 png 图片到 OneDrive/org/assets/images 目录下 [学习] 发布 blog 项目到 workspace/github.io/blog 目录下 [学习] 发布 images 项目到 workspace/github.io/assets/images 目录下 [BUG] 发布 css 项目到 workspace/github.io/assets/css 目录下 [学习] 浏览你的博客!!! 观看新闻联播 祝贺新华社成立90周年 深入打好污染防治攻坚战 ❄ 首次降雪 制作微信电子相册 (*) --&amp;gt; &amp;#34;Order with 1 Yuan&amp;#34; --&amp;gt; &amp;#34;Get Order Id&amp;#34; --&amp;gt; &amp;#34;Get Design Id with Order Id&amp;#34; --&amp;gt; &amp;#34;Add wechat bot helper&amp;#34; --&amp;gt; &amp;#34;Login with cellphone and design id &amp;#34; --&amp;gt; &amp;#34;Start Designing&amp;#34; --&amp;gt; &amp;#34;Select styles&amp;#34; --&amp;gt; &amp;#34;Confirm design and print&amp;#34;</description><content>
&lt;div class="comment-block">
&lt;p>—
templateKey: blog-post|doc-page
title: &amp;#34;using-orgmode-in-emacs.org&amp;#34;
author: &amp;#34;Xing Wenju&amp;#34;
description: &amp;#34;Some Description&amp;#34;
date: &amp;#34;2021-11-08T20:03:50-04:00&amp;#34;
tags:&lt;/p>
&lt;ul>
&lt;li>hugo emacs&lt;/li>
&lt;/ul>
&lt;p>—&lt;/p>
&lt;/div>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
[BUG] Better emacs
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
[BUG] 无法更新 &lt;code class="verbatim">evil emacs submodule&lt;/code>
&lt;/h3>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
[已修复] 更好地进行博客日志写作和发布
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;div id="outline-container-headline-4" class="outline-4">
&lt;h4 id="headline-4">
[学习] 书写博客的内容
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-4">
&lt;h4 id="headline-5">
[学习] 插入 &lt;code class="verbatim">plantuml&lt;/code> 图片
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-6" class="outline-4">
&lt;h4 id="headline-6">
[学习] 生成 &lt;code class="verbatim">png&lt;/code> 图片到 &lt;code class="verbatim">OneDrive/org/assets/images&lt;/code> 目录下
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-4">
&lt;h4 id="headline-7">
[学习] 发布 &lt;code class="verbatim">blog&lt;/code> 项目到 &lt;code class="verbatim">workspace/github.io/blog&lt;/code> 目录下
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-4">
&lt;h4 id="headline-8">
[学习] 发布 &lt;code class="verbatim">images&lt;/code> 项目到 &lt;code class="verbatim">workspace/github.io/assets/images&lt;/code> 目录下
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-9" class="outline-4">
&lt;h4 id="headline-9">
[BUG] 发布 &lt;code class="verbatim">css&lt;/code> 项目到 &lt;code class="verbatim">workspace/github.io/assets/css&lt;/code> 目录下
&lt;/h4>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-4">
&lt;h4 id="headline-10">
[学习] 浏览你的博客!!!
&lt;/h4>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-11" class="outline-2">
&lt;h2 id="headline-11">
观看新闻联播
&lt;/h2>
&lt;div id="outline-text-headline-11" class="outline-text-2">
&lt;div id="outline-container-headline-12" class="outline-3">
&lt;h3 id="headline-12">
祝贺新华社成立90周年
&lt;/h3>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-13" class="outline-2">
&lt;h2 id="headline-13">
深入打好污染防治攻坚战
&lt;/h2>
&lt;/div>
&lt;div id="outline-container-headline-14" class="outline-2">
&lt;h2 id="headline-14">
❄ 首次降雪
&lt;/h2>
&lt;/div>
&lt;div id="outline-container-headline-15" class="outline-2">
&lt;h2 id="headline-15">
制作微信电子相册
&lt;/h2>
&lt;div id="outline-text-headline-15" class="outline-text-2">
&lt;div class="src src-plantuml">
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml"> (*) --&amp;gt; &amp;#34;Order with 1 Yuan&amp;#34;
--&amp;gt; &amp;#34;Get Order Id&amp;#34;
--&amp;gt; &amp;#34;Get Design Id with Order Id&amp;#34;
--&amp;gt; &amp;#34;Add wechat bot helper&amp;#34;
--&amp;gt; &amp;#34;Login with cellphone and design id &amp;#34;
--&amp;gt; &amp;#34;Start Designing&amp;#34;
--&amp;gt; &amp;#34;Select styles&amp;#34;
--&amp;gt; &amp;#34;Confirm design and print&amp;#34;&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>&lt;img src="../assets/images/weichat_digital_album.png" alt="../assets/images/weichat_digital_album.png" title="../assets/images/weichat_digital_album.png" />&lt;/p>
&lt;/div>
&lt;/div></content></item><item><title>using-orgmode-in-emacs.org</title><link>/posts/emacs/using-orgmode-in-emacs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/posts/emacs/using-orgmode-in-emacs/</guid><description>— templateKey: blog-post|doc-page title: &amp;#34;using-orgmode-in-emacs.org&amp;#34; author: &amp;#34;Xing Wenju&amp;#34; description: &amp;#34;Some Description&amp;#34; date: &amp;#34;2018-02-16T20:03:50-04:00&amp;#34; tags:
hugo emacs —
the super org is the module of emacs Org-mode is a fabulous organizational tool originally built by Carsten Dominik that operates on plain text files. Org-mode is part of Emacs.
This document assumes you&amp;#39;ve had some exposure to org-mode already so concepts like the agenda, capture mode, etc. won&amp;#39;t be completely foreign to you.</description><content>
&lt;p>
—
templateKey: blog-post|doc-page
title: &amp;#34;using-orgmode-in-emacs.org&amp;#34;
author: &amp;#34;Xing Wenju&amp;#34;
description: &amp;#34;Some Description&amp;#34;
date: &amp;#34;2018-02-16T20:03:50-04:00&amp;#34;
tags:&lt;/p>
&lt;ul>
&lt;li>hugo emacs&lt;/li>
&lt;/ul>
&lt;p>—&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
the super org is the module of emacs
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>Org-mode is a fabulous organizational tool originally built by Carsten
Dominik that operates on plain text files. Org-mode is part of Emacs.&lt;/p>
&lt;p>
This document assumes you&amp;#39;ve had some exposure to org-mode already so
concepts like the agenda, capture mode, etc. won&amp;#39;t be completely
foreign to you. More information about org-mode can be found in the
&lt;a href="http://orgmode.org/index.html#sec-4.1">Org-Mode Manual&lt;/a> and on the &lt;a href="http://orgmode.org/worg/">Worg Site&lt;/a>.&lt;/p>
&lt;p>
I have been using org-mode as my personal information manager for
years now. I started small with just the default &lt;code class="verbatim">TODO&lt;/code> and &lt;code class="verbatim">DONE&lt;/code>
keywords. I added small changes to my workflow and over time it
evolved into what is described by this document.&lt;/p>
&lt;p>
I still change my workflow and try new things regularly. This
document describes mature workflows in my current org-mode setup. I
tend to document changes to my workflow 30 days after implementing
them (assuming they are still around at that point) so that the new
workflow has a chance to mature.&lt;/p>
&lt;p>
Some of the customized Emacs settings described in this document are
set at their default values. This explicitly shows the setting for
important org-mode variables used in my workflow and to keep my
workflow behaviour stable in the event that the default value changes
in the future.&lt;/p>
&lt;p>
This document is available as an &lt;a href="http://doc.norang.ca/org-mode.org">org file&lt;/a> which you can load in Emacs
and tangle with &lt;code class="verbatim">C-c C-v C-t&lt;/code> which will create org-mode.el in the
same directory as the org-mode.org file. This will extract all of the
elisp examples in this document into a file you can include in your
.emacs file.&lt;/p>
&lt;/div>
&lt;/div></content></item></channel></rss>